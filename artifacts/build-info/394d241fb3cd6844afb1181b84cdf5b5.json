{
  "id": "394d241fb3cd6844afb1181b84cdf5b5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Raphael.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./IStaking.sol\";\nimport \"./IVITA.sol\";\n\ncontract Raphael is ERC721Holder, Ownable, ReentrancyGuard {\n    // Different stages of a proposal\n    enum ProposalStatus {\n        VOTING_NOT_STARTED,\n        VOTING,\n        VOTES_FINISHED,\n        RESOLVED,\n        CANCELLED,\n        QUORUM_FAILED\n    }\n\n    struct Proposal {\n        string details;\n        uint256 votesFor;\n        uint256 votesAgainst;\n        uint256 startBlock;\n        uint256 endBlock;\n        ProposalStatus status;\n    }\n\n    // key is a self-incrementing number\n    mapping(uint256 => Proposal) private proposals;\n\n    mapping(uint256 => mapping(address => bool)) private voted; //global voted mapping\n\n    uint256 public proposalCount;\n    uint256 public minVotesNeeded;\n\n    address private nativeTokenAddress;\n    address private stakingContractAddress;\n    address[] private nftContractAddresses;\n    IVITA nativeTokenContract;\n    IStaking stakingContract;\n\n    bool private shutdown = false;\n\n    uint256 public CREATE_TO_VOTE_PROPOSAL_DELAY = 18500; // ~3 days\n    uint256 public VOTING_DURATION = 30850; // ~5 days\n\n    // for testing\n    // uint256 public CREATE_TO_VOTE_PROPOSAL_DELAY = 5;\n    // uint256 public VOTING_DURATION = 10;\n\n    // commenting out for testing\n    uint256 public constant MIN_DURATION = 5; // testing value\n    uint256 public constant MAX_DURATION = 190000; // ~1 month\n\n    event VotingDelayChanged(uint256 newDuration);\n    event VotingDurationChanged(uint256 newDuration);\n    event NativeTokenChanged(\n        address newAddress,\n        address oldAddress,\n        address changedBy\n    );\n    event StakingAddressChanged(\n        address newAddress,\n        address oldAddress,\n        address changedBy\n    );\n    event NativeTokenTransferred(\n        address authorizedBy,\n        address to,\n        uint256 amount\n    );\n    event NFTReceived(address nftContract, address sender, uint256 tokenId);\n    event NFTTransferred(address nftContract, address to, uint256 tokenId);\n    event EmergencyShutdown(address triggeredBy, uint256 currentBlock);\n    event EmergencyProposalCancellation(address triggeredBy, uint256 index);\n    event EmergencyNFTApproval(\n        address triggeredBy,\n        address[] nftContractAddresses\n    );\n\n    event ProposalCreated(\n        uint256 proposalId,\n        string details,\n        uint256 vote_start,\n        uint256 vote_end\n    );\n    event ProposalStatusChanged(uint256 proposalId, ProposalStatus newStatus);\n\n    event Voted(address voter, uint256 proposalId, uint256 weight, bool direction);\n\n    modifier notShutdown() {\n        require(!shutdown, \"cannot be called after shutdown\");\n        _;\n    }\n\n    constructor() Ownable() {\n        proposalCount = 0; //starts with 0 proposals\n        minVotesNeeded = 9644832 * 1e17; // 5% of initial distribution\n    }\n\n    /**\n     * @dev returns all data for a specified proposal\n     * @param proposalIndex           uint index of proposal\n     * @return string, 5 x uint (the parts of a Proposal object)\n     */\n    function getProposalData(uint256 proposalIndex)\n        public\n        view\n        returns (\n            string memory,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint8\n        )\n    {\n        require(proposalIndex <= proposalCount, \"Proposal doesn't exist\");\n        return (\n            proposals[proposalIndex].details,\n            proposals[proposalIndex].votesFor,\n            proposals[proposalIndex].votesAgainst,\n            proposals[proposalIndex].startBlock,\n            proposals[proposalIndex].endBlock,\n            uint8(proposals[proposalIndex].status)\n        );\n    }\n\n    /**\n     * @dev returns result of a proposal\n     * @param proposalIndex           uint index of proposal\n     * @return true if proposal passed, otherwise false\n     */\n    function getProposalResult(uint256 proposalIndex)\n        public\n        view\n        returns (bool)\n    {\n        require(proposalIndex <= proposalCount, \"Proposal doesn't exist\");\n        require(\n            proposals[proposalIndex].status == ProposalStatus.VOTES_FINISHED ||\n                proposals[proposalIndex].status == ProposalStatus.RESOLVED ||\n                proposals[proposalIndex].status == ProposalStatus.QUORUM_FAILED,\n            \"Proposal must be after voting\"\n        );\n        bool result; // is already false, only need to cover the true case\n        if (proposals[proposalIndex].votesFor >\n            proposals[proposalIndex].votesAgainst && (\n                proposals[proposalIndex].status == ProposalStatus.VOTES_FINISHED ||\n                proposals[proposalIndex].status == ProposalStatus.RESOLVED   \n            )) {\n            result = true;\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev returns minimum amount of votes needed for a proposal to pass\n     * @return minVotesNeeded value\n     */\n    function getMinVotesNeeded() public view returns (uint256) {\n        return minVotesNeeded;\n    }\n\n    /**\n     * @dev returns address of the token associated with the DAO\n     *\n     * @return the address of the token contract\n     */\n    function getNativeTokenAddress() public view returns (address) {\n        return nativeTokenAddress;\n    }\n\n    /**\n     * @dev returns the DAO's balance of the native token\n     */\n    function getNativeTokenBalance() public view returns (uint256) {\n        return nativeTokenContract.balanceOf(address(this));\n    }\n\n    /**\n     * @dev returns an array of the NFTs owned by the DAO\n     *\n     * @return an array of nft structs\n     */\n    function getNftContractAddresses() public view returns (address[] memory) {\n        return nftContractAddresses;\n    }\n\n    function getStakingAddress() public view returns (address) {\n        return stakingContractAddress;\n    }\n\n    /**\n     * @dev returns if DAO is shutdown or not\n     */\n    function isShutdown() public view returns (bool) {\n        return shutdown;\n    }\n\n    /****************************\n     * STATE CHANGING FUNCTIONS *\n     ***************************/\n\n    ////////////////////////\n    // PLATFORM VARIABLES //\n    ////////////////////////\n\n    function setVotingDelayDuration(uint256 newDuration) public onlyOwner {\n        require(\n            newDuration > MIN_DURATION && newDuration < MAX_DURATION,\n            \"duration must be >30850 <190000\"\n        );\n        CREATE_TO_VOTE_PROPOSAL_DELAY = newDuration;\n\n        emit VotingDelayChanged(newDuration);\n    }\n\n    function setVotingDuration(uint256 newDuration) public onlyOwner {\n        require(\n            newDuration > MIN_DURATION && newDuration < MAX_DURATION,\n            \"duration must be >30850 <190000\"\n        );\n        VOTING_DURATION = newDuration;\n\n        emit VotingDurationChanged(newDuration);\n    }\n\n    /**\n     * @dev Updates the min total votes needed for a proposal to pass\n     * @param newVotesNeeded          uint new min vote threshold\n     */\n    function setMinVotesNeeded(uint256 newVotesNeeded)\n        public\n        onlyOwner\n        notShutdown\n    {\n        require(newVotesNeeded > 0, \"quorum cannot be 0\");\n        require(\n            newVotesNeeded < nativeTokenContract.totalSupply(),\n            \"votes needed > token supply\"\n        );\n        minVotesNeeded = newVotesNeeded;\n    }\n\n    /**\n     * @dev allows admins to set the address of the staking contract associated with the DAO\n     *\n     * @param _stakingContractAddress  the (new) address of the staking contract\n     */\n    function setStakingAddress(address _stakingContractAddress)\n        public\n        onlyOwner\n        notShutdown\n    {\n        address oldAddress = stakingContractAddress;\n        stakingContractAddress = _stakingContractAddress;\n        stakingContract = IStaking(stakingContractAddress);\n        emit StakingAddressChanged(\n            stakingContractAddress,\n            oldAddress,\n            _msgSender()\n        );\n    }\n\n    /**\n     * @dev allows admins to set the address of the token associated with the DAO\n     *\n     * @param tokenContractAddress  the address of the ERC20 asset\n     */\n    function setNativeTokenAddress(address tokenContractAddress)\n        public\n        onlyOwner\n        notShutdown\n    {\n        address oldAddress = nativeTokenAddress;\n        nativeTokenAddress = tokenContractAddress;\n        nativeTokenContract = IVITA(nativeTokenAddress);\n        emit NativeTokenChanged(nativeTokenAddress, oldAddress, _msgSender());\n    }\n\n    //////////////////////////\n    // PROPOSALS AND VOTING //\n    //////////////////////////\n\n    /**\n     * @dev Creates a proposal\n     * @param details           string with proposal details\n     *\n     */\n    function createProposal(string memory details)\n        public\n        notShutdown\n        nonReentrant\n    {\n        require(\n            stakingContract.getStakedBalance(_msgSender()) > 0,\n            \"must stake to create proposal\"\n        );\n        uint256 start_block = block.number + CREATE_TO_VOTE_PROPOSAL_DELAY;\n        uint256 end_block = start_block + VOTING_DURATION;\n\n        Proposal memory newProposal =\n            Proposal(\n                details,\n                0, //votesFor\n                0, //votesAgainst\n                start_block,\n                end_block,\n                ProposalStatus.VOTING_NOT_STARTED\n            );\n\n        require(\n            stakingContract.voted(_msgSender(), newProposal.endBlock),\n            \"createProposal: token lock fail\"\n        );\n        proposalCount += 1;\n        // Add new Proposal instance\n        proposals[proposalCount] = newProposal;\n\n        // lock staked tokens for duration of proposal\n\n        emit ProposalCreated(proposalCount, details, start_block, end_block);\n    }\n\n    /**\n     * @dev Moves proposal to the status it should be in\n     *\n     * @param proposalIndex          uint proposal key\n     */\n    function updateProposalStatus(uint256 proposalIndex) public notShutdown {\n        require(proposalIndex <= proposalCount, \"Proposal doesn't exist\");\n\n        Proposal memory currentProp = proposals[proposalIndex];\n        // Can't change status of CANCELLED or RESOLVED proposals\n        require(\n            currentProp.status != ProposalStatus.CANCELLED,\n            \"Proposal cancelled\"\n        );\n        require(\n            currentProp.status != ProposalStatus.RESOLVED,\n            \"Proposal already resolved\"\n        );\n        require(\n            currentProp.status != ProposalStatus.QUORUM_FAILED,\n            \"Proposal failed to meet quorum\"\n        );\n\n        // revert if no change needed\n        if (\n            // still before voting period\n            currentProp.status == ProposalStatus.VOTING_NOT_STARTED &&\n            block.number < currentProp.startBlock\n        ) {\n            revert(\"Too early to move to voting\");\n        } else if (\n            // still in voting period\n            currentProp.status == ProposalStatus.VOTING &&\n            block.number >= currentProp.startBlock &&\n            block.number <= currentProp.endBlock\n        ) {\n            revert(\"Still in voting period\");\n        }\n\n        if (\n            block.number >= currentProp.startBlock &&\n            block.number <= currentProp.endBlock &&\n            currentProp.status != ProposalStatus.VOTING\n        ) {\n            currentProp.status = ProposalStatus.VOTING;\n        } else if (\n            block.number < currentProp.startBlock &&\n            currentProp.status != ProposalStatus.VOTING_NOT_STARTED\n        ) {\n            currentProp.status = ProposalStatus.VOTING_NOT_STARTED;\n        } else if (\n            block.number > currentProp.endBlock &&\n            currentProp.status != ProposalStatus.VOTES_FINISHED\n        ) {\n            if (\n                currentProp.votesFor + currentProp.votesAgainst >=\n                minVotesNeeded\n            ) {\n                currentProp.status = ProposalStatus.VOTES_FINISHED;\n            } else {\n                currentProp.status = ProposalStatus.QUORUM_FAILED;\n            }\n        }\n\n        // Save changes in the proposal mapping\n        proposals[proposalIndex] = currentProp;\n\n        emit ProposalStatusChanged(proposalIndex, currentProp.status);\n    }\n\n    /**\n     * @dev Only for setting proposal to RESOLVED.\n     * @dev Only callable from the multi-sig\n     * @param proposalIndex          uint proposal key\n     *\n     */\n    function setProposalToResolved(uint256 proposalIndex)\n        public\n        onlyOwner\n        notShutdown\n    {\n        require(proposalIndex <= proposalCount, \"Proposal doesn't exist\");\n        require(\n            proposals[proposalIndex].status == ProposalStatus.VOTES_FINISHED,\n            \"Proposal not in VOTES_FINISHED\"\n        );\n        proposals[proposalIndex].status = ProposalStatus.RESOLVED;\n        emit ProposalStatusChanged(proposalIndex, ProposalStatus.RESOLVED);\n    }\n\n    /**\n     * @dev Only for setting proposal to CANCELLED.\n     * @dev Only callable from the multi-sig\n     * @param proposalIndex          uint proposal key\n     *\n     */\n    function setProposalToCancelled(uint256 proposalIndex)\n        public\n        onlyOwner\n        notShutdown\n    {\n        require(proposalIndex <= proposalCount, \"Proposal doesn't exist\");\n        require(\n            proposals[proposalIndex].status != ProposalStatus.VOTES_FINISHED,\n            \"Can't cancel if vote finished\"\n        );\n        require(\n            proposals[proposalIndex].status != ProposalStatus.RESOLVED,\n            \"Proposal already resolved\"\n        );\n        require(\n            proposals[proposalIndex].status != ProposalStatus.QUORUM_FAILED,\n            \"Proposal already failed quorum\"\n        );\n        require(\n            proposals[proposalIndex].status != ProposalStatus.CANCELLED,\n            \"Proposal already cancelled\"\n        );\n\n        proposals[proposalIndex].status = ProposalStatus.CANCELLED;\n        emit ProposalStatusChanged(proposalIndex, ProposalStatus.CANCELLED);\n    }\n\n    /**\n     * @dev Allows any address to vote on a proposal\n     * @param proposalIndex           key to proposal in mapping\n     * @param _vote                   true = for, false = against\n     */\n    function vote(uint256 proposalIndex, bool _vote) public notShutdown {\n        uint256 stakedBalance = stakingContract.getStakedBalance(_msgSender());\n        require(stakedBalance > 0, \"must stake to vote\");\n        // check msg.sender hasn't already voted\n        require(\n            voted[proposalIndex][_msgSender()] == false,\n            \"Already voted from this address\"\n        );\n\n        Proposal memory currentProp = proposals[proposalIndex];\n\n        // Call updateProposalStatus() if proposal should be in VOTING stage\n        require(\n            currentProp.status == ProposalStatus.VOTING &&\n                block.number <= currentProp.endBlock,\n            \"Proposal not in voting period\"\n        );\n\n        // TODO add delegated voting power here - post-MVP\n\n        if (_vote) {\n            currentProp.votesFor += stakedBalance;\n        } else {\n            currentProp.votesAgainst += stakedBalance;\n        }\n\n        voted[proposalIndex][_msgSender()] = true;\n        require(\n            stakingContract.voted(\n                _msgSender(),\n                proposals[proposalIndex].endBlock\n            ),\n            \"vote: token lock fail\"\n        );\n\n        // Save changes in the proposal mapping\n        proposals[proposalIndex] = currentProp;\n\n        emit Voted(_msgSender(), proposalIndex, stakedBalance, _vote);\n    }\n\n    function delegate(address delegateAddress) public {}\n\n    //////////////////////\n    // ASSET MANAGEMENT //\n    //////////////////////\n\n    /**\n     * @dev                 enables DAO to mint native tokens\n     * @param _amount       the amount of tokens to mint\n     */\n    function mintNativeToken(uint256 _amount) public onlyOwner notShutdown {\n        require(_amount > 0, \"Can't mint 0 tokens\");\n        \n        nativeTokenContract.mint(address(this), _amount);\n    } \n\n    /**\n     * @dev enables DAO to transfer the token it is associated with\n     *\n     * @param to                    the address to send tokens to\n     * @param amount                the amount to send\n     *\n     * @return success or fail bool\n     */\n    function transferNativeToken(address to, uint256 amount)\n        public\n        onlyOwner\n        notShutdown\n        returns (bool)\n    {\n        require(\n            nativeTokenContract.transfer(to, amount),\n            \"ERC20 transfer failed\"\n        );\n\n        emit NativeTokenTransferred(_msgSender(), to, amount);\n        return true;\n    }\n\n    /**\n     * @dev enables DAO to transfer NFTs received\n     *\n     * @param nftContractAddress    the address of the NFT contract\n     * @param recipient             the address to send the NFT to\n     * @param tokenId               the id of the token in the NFT contract\n     *\n     * @return success or fail bool\n     */\n    function transferNFT(\n        address nftContractAddress,\n        address recipient,\n        uint256 tokenId\n    ) public onlyOwner notShutdown returns (bool) {\n        IERC721 nftContract = IERC721(nftContractAddress);\n        nftContract.safeTransferFrom(\n            address(this),\n            recipient,\n            tokenId // what if there isn't one?\n        );\n        require(\n            nftContract.ownerOf(tokenId) == recipient,\n            \"NFT transfer failed\"\n        );\n\n        if (nftContract.balanceOf(address(this)) == 0) {\n            for (uint256 i = 0; i < nftContractAddresses.length; i++) {\n                if (nftContractAddresses[i] == nftContractAddress) {\n                    delete nftContractAddresses[i];\n                    break;\n                }\n            }\n        }\n\n        emit NFTTransferred(nftContractAddress, recipient, tokenId);\n        return true;\n    }\n\n    ////////////////////////\n    // EMERGENCY SHUTDOWN //\n    ////////////////////////\n\n    /**\n     * @dev allows the admins to shut down the DAO (proposals, voting, transfers)\n     * and also sweeps out any NFTs and native tokens owned by the DAO\n     *\n     * @notice this is an irreversible process!\n     */\n    function emergencyShutdown() public onlyOwner notShutdown nonReentrant {\n        require(getNativeTokenBalance() == 0, \"transfer tokens before shutdown\");\n\n        // cancel all active proposals\n        // there is no proposal in the zero slot\n        for (uint256 i = 1; i <= proposalCount; i++) {\n            if (\n                proposals[i].status != ProposalStatus.RESOLVED &&\n                proposals[i].status != ProposalStatus.QUORUM_FAILED\n            ) {\n                proposals[i].status = ProposalStatus.CANCELLED;\n                emit EmergencyProposalCancellation(_msgSender(), i);\n            }\n        }\n\n        stakingContract.emergencyShutdown(_msgSender());\n\n        // approve all NFTs\n        for (uint256 i = 0; i < nftContractAddresses.length; i++) {\n            if (nftContractAddresses[i] != address(0)) {\n                IERC721 nftContract = IERC721(nftContractAddresses[i]);\n                if (!nftContract.isApprovedForAll(address(this), owner()))\n                    nftContract.setApprovalForAll(owner(), true);\n            }\n        }\n        emit EmergencyNFTApproval(_msgSender(), nftContractAddresses);\n\n        shutdown = true;\n\n        emit EmergencyShutdown(_msgSender(), block.number);\n    }\n\n    /**\n     * @dev function for receiving and recording an NFT\n     * @notice calls \"super\" to the OpenZeppelin function inherited\n     *\n     * @param operator          the sender of the NFT (I think)\n     * @param from              not really sure, has generally been the zero address\n     * @param tokenId           the tokenId of the NFT\n     * @param data              any additional data sent with the NFT\n     *\n     * @return `IERC721Receiver.onERC721Received.selector`\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public override notShutdown returns (bytes4) {\n        bool duplicate = false;\n        for (uint256 i = 0; i < nftContractAddresses.length; i++) {\n            if (nftContractAddresses[i] == _msgSender()) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (!duplicate) nftContractAddresses.push(_msgSender());\n\n        emit NFTReceived(_msgSender(), operator, tokenId);\n\n        return super.onERC721Received(operator, from, tokenId, data);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n  /**\n   * @dev Implementation of the {IERC721Receiver} interface.\n   *\n   * Accepts all token transfers.\n   * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n   */\ncontract ERC721Holder is IERC721Receiver {\n\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
      },
      "contracts/IStaking.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IStaking{\n    function getStakedBalance(address staker) external view returns(uint256);\n    function getUnlockTime(address staker) external view returns(uint256);\n    function isShutdown() external view returns(bool);\n    function voted(address voter, uint256 endBlock) external returns(bool);\n    function stake(uint256 amount) external;\n    function withdraw(uint256 amount) external;\n    function emergencyShutdown(address admin) external;\n}"
      },
      "contracts/IVITA.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IVITA is IERC20 {\n    function mint(address account, uint256 amount) external;\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          }
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "ERC721Holder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061034d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610106565b610060565b6040516100579190610190565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101d0565b6101ab565b90508281526020810184848401111561009f57600080fd5b6100aa848285610269565b509392505050565b6000813590506100c1816102e9565b92915050565b600082601f8301126100d857600080fd5b81356100e8848260208601610074565b91505092915050565b60008135905061010081610300565b92915050565b6000806000806080858703121561011c57600080fd5b600061012a878288016100b2565b945050602061013b878288016100b2565b935050604061014c878288016100f1565b925050606085013567ffffffffffffffff81111561016957600080fd5b610175878288016100c7565b91505092959194509250565b61018a81610213565b82525050565b60006020820190506101a56000830184610181565b92915050565b60006101b56101c6565b90506101c18282610278565b919050565b6000604051905090565b600067ffffffffffffffff8211156101eb576101ea6102a9565b5b6101f4826102d8565b9050602081019050919050565b600061020c8261023f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610281826102d8565b810181811067ffffffffffffffff821117156102a05761029f6102a9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6102f281610201565b81146102fd57600080fd5b50565b6103098161025f565b811461031457600080fd5b5056fea26469706673582212208c28dd27f4dde458bd852d0bce7bc74cd4c9cbcad29622a579ac2929acf54e0b64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA DUP5 DUP3 DUP6 PUSH2 0x269 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC1 DUP2 PUSH2 0x2E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0x300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP8 DUP3 DUP9 ADD PUSH2 0xB2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x13B DUP8 DUP3 DUP9 ADD PUSH2 0xB2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x14C DUP8 DUP3 DUP9 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175 DUP8 DUP3 DUP9 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x18A DUP2 PUSH2 0x213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x278 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x2A9 JUMP JUMPDEST JUMPDEST PUSH2 0x1F4 DUP3 PUSH2 0x2D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C DUP3 PUSH2 0x23F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x281 DUP3 PUSH2 0x2D8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A0 JUMPI PUSH2 0x29F PUSH2 0x2A9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F2 DUP2 PUSH2 0x201 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x309 DUP2 PUSH2 0x25F JUMP JUMPDEST DUP2 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x28 0xDD 0x27 DELEGATECALL 0xDD 0xE4 PC 0xBD DUP6 0x2D SIGNEXTEND 0xCE PUSH28 0xC74CD4C9CBCAD29622A579AC2929ACF54E0B64736F6C634300080400 CALLER ",
              "sourceMap": "340:354:5:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4091:11",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "90:260:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "100:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "166:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:40:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:48:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "109:15:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "109:65:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "190:5:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "197:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "183:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "183:21:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "183:21:11"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "213:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "235:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:16:11"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "217:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "278:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "287:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "290:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "280:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "280:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "280:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "259:3:11"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "264:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "255:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "255:16:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:25:11"
                              },
                              "nodeType": "YulIf",
                              "src": "249:2:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "327:3:11"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "332:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "337:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:23:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "303:41:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "303:41:11"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "63:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "68:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "76:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "84:5:11",
                            "type": ""
                          }
                        ],
                        "src": "7:343:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "408:87:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "418:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "440:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "427:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "427:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "418:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "483:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "456:26:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "456:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "456:33:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "386:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "394:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "402:5:11",
                            "type": ""
                          }
                        ],
                        "src": "356:139:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "575:210:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "624:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "633:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "636:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "626:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "626:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "626:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "603:6:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "611:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "599:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "599:17:11"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "618:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "595:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "595:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "588:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "588:35:11"
                              },
                              "nodeType": "YulIf",
                              "src": "585:2:11"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "649:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "676:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "663:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "663:20:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "653:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "692:87:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "752:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "760:4:11",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:17:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "767:6:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "775:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "701:46:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "701:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "692:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "553:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "561:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "569:5:11",
                            "type": ""
                          }
                        ],
                        "src": "514:271:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "843:87:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "853:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "875:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "862:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "862:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "853:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "918:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "891:26:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "891:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "891:33:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "821:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "829:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "837:5:11",
                            "type": ""
                          }
                        ],
                        "src": "791:139:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1062:683:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1109:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1118:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1121:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1111:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1111:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1111:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1083:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1092:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1079:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1079:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1104:3:11",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1075:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1075:33:11"
                              },
                              "nodeType": "YulIf",
                              "src": "1072:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1135:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1150:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1164:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1154:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1179:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1214:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1225:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1210:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1210:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1234:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1189:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1189:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1179:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1262:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1277:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1291:2:11",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1281:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1307:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1342:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1353:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1338:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1338:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1362:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1317:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1317:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1307:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1390:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1405:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1419:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1409:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1435:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1470:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1481:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1466:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1466:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1490:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1445:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1445:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1435:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1518:220:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1533:46:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1564:9:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1575:2:11",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1560:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1560:18:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1547:12:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1547:32:11"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1537:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1626:16:11",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1635:1:11",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1638:1:11",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "1628:6:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1628:12:11"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1628:12:11"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1598:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1606:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1595:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1595:30:11"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "1592:2:11"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1656:72:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1700:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1711:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1696:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1696:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1720:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1666:29:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1666:62:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1656:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1008:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1019:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1031:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1039:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1047:6:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1055:6:11",
                            "type": ""
                          }
                        ],
                        "src": "936:809:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1814:52:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1831:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1853:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1836:16:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1836:23:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1824:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1824:36:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1824:36:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1802:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1809:3:11",
                            "type": ""
                          }
                        ],
                        "src": "1751:115:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1968:122:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1978:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1990:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2001:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1986:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1986:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2056:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2069:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2080:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2065:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2065:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2014:41:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2014:69:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2014:69:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1940:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1952:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1963:4:11",
                            "type": ""
                          }
                        ],
                        "src": "1872:218:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2137:88:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2147:30:11",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "2157:18:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2157:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2147:6:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2206:6:11"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2214:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "2186:19:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2186:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2186:33:11"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2121:4:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "2130:6:11",
                            "type": ""
                          }
                        ],
                        "src": "2096:129:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2271:35:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2281:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2297:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2291:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2291:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2281:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "2264:6:11",
                            "type": ""
                          }
                        ],
                        "src": "2231:75:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2378:241:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2483:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2485:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2485:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2485:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2455:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2463:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2452:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2452:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "2449:2:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2515:37:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2545:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2523:21:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2523:29:11"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "2515:4:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2589:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2601:4:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2607:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2597:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2597:15:11"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "2589:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2362:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2373:4:11",
                            "type": ""
                          }
                        ],
                        "src": "2312:307:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2670:51:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2680:35:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2709:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "2691:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2691:24:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2680:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2652:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2662:7:11",
                            "type": ""
                          }
                        ],
                        "src": "2625:96:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2771:105:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2781:89:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2796:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2803:66:11",
                                    "type": "",
                                    "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2792:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2792:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2781:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2753:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2763:7:11",
                            "type": ""
                          }
                        ],
                        "src": "2727:149:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2927:81:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2937:65:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2952:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2959:42:11",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2948:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2948:54:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2937:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2909:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2919:7:11",
                            "type": ""
                          }
                        ],
                        "src": "2882:126:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3059:32:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3069:16:11",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3080:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3069:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3041:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3051:7:11",
                            "type": ""
                          }
                        ],
                        "src": "3014:77:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3148:103:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "3171:3:11"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "3176:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3181:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3158:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3158:30:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3158:30:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "3229:3:11"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3234:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3225:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3225:16:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3243:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3218:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3218:27:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3218:27:11"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "3130:3:11",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "3135:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3140:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3097:154:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3300:238:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3310:58:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3332:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "3362:4:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "3340:21:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3340:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3328:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3328:40:11"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3314:10:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3479:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3481:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3481:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3481:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3422:10:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3434:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3419:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3419:34:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3458:10:11"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3470:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3455:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3455:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "3416:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3416:62:11"
                              },
                              "nodeType": "YulIf",
                              "src": "3413:2:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3517:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3521:10:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3510:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3510:22:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3510:22:11"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "3286:6:11",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "3294:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3257:281:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3572:152:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3589:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3592:77:11",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3582:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3582:88:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3582:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3686:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3689:4:11",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3679:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3679:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3679:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3710:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3713:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3703:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3703:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3703:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3544:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3778:54:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3788:38:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3806:5:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3813:2:11",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3802:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3802:14:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3822:2:11",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3818:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3818:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3798:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3798:28:11"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "3788:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3761:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "3771:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3730:102:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3881:79:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3938:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3947:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3950:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3940:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3940:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3940:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3904:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3929:5:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "3911:17:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3911:24:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3901:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3901:35:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3894:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3894:43:11"
                              },
                              "nodeType": "YulIf",
                              "src": "3891:2:11"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3874:5:11",
                            "type": ""
                          }
                        ],
                        "src": "3838:122:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4009:79:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4066:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4075:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4078:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4068:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4068:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4068:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4032:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4057:5:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "4039:17:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4039:24:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4029:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4029:35:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4022:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4022:43:11"
                              },
                              "nodeType": "YulIf",
                              "src": "4019:2:11"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4002:5:11",
                            "type": ""
                          }
                        ],
                        "src": "3966:122:11"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610106565b610060565b6040516100579190610190565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101d0565b6101ab565b90508281526020810184848401111561009f57600080fd5b6100aa848285610269565b509392505050565b6000813590506100c1816102e9565b92915050565b600082601f8301126100d857600080fd5b81356100e8848260208601610074565b91505092915050565b60008135905061010081610300565b92915050565b6000806000806080858703121561011c57600080fd5b600061012a878288016100b2565b945050602061013b878288016100b2565b935050604061014c878288016100f1565b925050606085013567ffffffffffffffff81111561016957600080fd5b610175878288016100c7565b91505092959194509250565b61018a81610213565b82525050565b60006020820190506101a56000830184610181565b92915050565b60006101b56101c6565b90506101c18282610278565b919050565b6000604051905090565b600067ffffffffffffffff8211156101eb576101ea6102a9565b5b6101f4826102d8565b9050602081019050919050565b600061020c8261023f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610281826102d8565b810181811067ffffffffffffffff821117156102a05761029f6102a9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6102f281610201565b81146102fd57600080fd5b50565b6103098161025f565b811461031457600080fd5b5056fea26469706673582212208c28dd27f4dde458bd852d0bce7bc74cd4c9cbcad29622a579ac2929acf54e0b64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA DUP5 DUP3 DUP6 PUSH2 0x269 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC1 DUP2 PUSH2 0x2E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0x300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP8 DUP3 DUP9 ADD PUSH2 0xB2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x13B DUP8 DUP3 DUP9 ADD PUSH2 0xB2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x14C DUP8 DUP3 DUP9 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175 DUP8 DUP3 DUP9 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x18A DUP2 PUSH2 0x213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x278 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x2A9 JUMP JUMPDEST JUMPDEST PUSH2 0x1F4 DUP3 PUSH2 0x2D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C DUP3 PUSH2 0x23F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x281 DUP3 PUSH2 0x2D8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A0 JUMPI PUSH2 0x29F PUSH2 0x2A9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F2 DUP2 PUSH2 0x201 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x309 DUP2 PUSH2 0x25F JUMP JUMPDEST DUP2 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x28 0xDD 0x27 DELEGATECALL 0xDD 0xE4 PC 0xBD DUP6 0x2D SIGNEXTEND 0xCE PUSH28 0xC74CD4C9CBCAD29622A579AC2929ACF54E0B64736F6C634300080400 CALLER ",
              "sourceMap": "340:354:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;630:6;655:30;;;648:37;;530:162;;;;;;:::o;7:343:11:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;402:5;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;514:271::-;569:5;618:3;611:4;603:6;599:17;595:27;585:2;;636:1;633;626:12;585:2;676:6;663:20;701:78;775:3;767:6;760:4;752:6;748:17;701:78;:::i;:::-;692:87;;575:210;;;;;:::o;791:139::-;837:5;875:6;862:20;853:29;;891:33;918:5;891:33;:::i;:::-;843:87;;;;:::o;936:809::-;1031:6;1039;1047;1055;1104:3;1092:9;1083:7;1079:23;1075:33;1072:2;;;1121:1;1118;1111:12;1072:2;1164:1;1189:53;1234:7;1225:6;1214:9;1210:22;1189:53;:::i;:::-;1179:63;;1135:117;1291:2;1317:53;1362:7;1353:6;1342:9;1338:22;1317:53;:::i;:::-;1307:63;;1262:118;1419:2;1445:53;1490:7;1481:6;1470:9;1466:22;1445:53;:::i;:::-;1435:63;;1390:118;1575:2;1564:9;1560:18;1547:32;1606:18;1598:6;1595:30;1592:2;;;1638:1;1635;1628:12;1592:2;1666:62;1720:7;1711:6;1700:9;1696:22;1666:62;:::i;:::-;1656:72;;1518:220;1062:683;;;;;;;:::o;1751:115::-;1836:23;1853:5;1836:23;:::i;:::-;1831:3;1824:36;1814:52;;:::o;1872:218::-;1963:4;2001:2;1990:9;1986:18;1978:26;;2014:69;2080:1;2069:9;2065:17;2056:6;2014:69;:::i;:::-;1968:122;;;;:::o;2096:129::-;2130:6;2157:20;;:::i;:::-;2147:30;;2186:33;2214:4;2206:6;2186:33;:::i;:::-;2137:88;;;:::o;2231:75::-;2264:6;2297:2;2291:9;2281:19;;2271:35;:::o;2312:307::-;2373:4;2463:18;2455:6;2452:30;2449:2;;;2485:18;;:::i;:::-;2449:2;2523:29;2545:6;2523:29;:::i;:::-;2515:37;;2607:4;2601;2597:15;2589:23;;2378:241;;;:::o;2625:96::-;2662:7;2691:24;2709:5;2691:24;:::i;:::-;2680:35;;2670:51;;;:::o;2727:149::-;2763:7;2803:66;2796:5;2792:78;2781:89;;2771:105;;;:::o;2882:126::-;2919:7;2959:42;2952:5;2948:54;2937:65;;2927:81;;;:::o;3014:77::-;3051:7;3080:5;3069:16;;3059:32;;;:::o;3097:154::-;3181:6;3176:3;3171;3158:30;3243:1;3234:6;3229:3;3225:16;3218:27;3148:103;;;:::o;3257:281::-;3340:27;3362:4;3340:27;:::i;:::-;3332:6;3328:40;3470:6;3458:10;3455:22;3434:18;3422:10;3419:34;3416:62;3413:2;;;3481:18;;:::i;:::-;3413:2;3521:10;3517:2;3510:22;3300:238;;;:::o;3544:180::-;3592:77;3589:1;3582:88;3689:4;3686:1;3679:15;3713:4;3710:1;3703:15;3730:102;3771:6;3822:2;3818:7;3813:2;3806:5;3802:14;3798:28;3788:38;;3778:54;;;:::o;3838:122::-;3911:24;3929:5;3911:24;:::i;:::-;3904:5;3901:35;3891:2;;3950:1;3947;3940:12;3891:2;3881:79;:::o;3966:122::-;4039:24;4057:5;4039:24;:::i;:::-;4032:5;4029:35;4019:2;;4078:1;4075;4068:12;4019:2;4009:79;:::o"
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          }
        }
      },
      "contracts/IStaking.sol": {
        "IStaking": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "emergencyShutdown",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                }
              ],
              "name": "getStakedBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                }
              ],
              "name": "getUnlockTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isShutdown",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "stake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                }
              ],
              "name": "voted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "emergencyShutdown(address)": "51ae58af",
              "getStakedBalance(address)": "3a02a42d",
              "getUnlockTime(address)": "dbed1e88",
              "isShutdown()": "bf86d690",
              "stake(uint256)": "a694fc3a",
              "voted(address,uint256)": "c591aa98",
              "withdraw(uint256)": "2e1a7d4d"
            }
          }
        }
      },
      "contracts/IVITA.sol": {
        "IVITA": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "mint(address,uint256)": "40c10f19",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "contracts/Raphael.sol": {
        "Raphael": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "nftContractAddresses",
                  "type": "address[]"
                }
              ],
              "name": "EmergencyNFTApproval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "EmergencyProposalCancellation",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "currentBlock",
                  "type": "uint256"
                }
              ],
              "name": "EmergencyShutdown",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "nftContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "NFTReceived",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "nftContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "NFTTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oldAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "NativeTokenChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "authorizedBy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "NativeTokenTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "details",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "vote_start",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "vote_end",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Raphael.ProposalStatus",
                  "name": "newStatus",
                  "type": "uint8"
                }
              ],
              "name": "ProposalStatusChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oldAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "StakingAddressChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "direction",
                  "type": "bool"
                }
              ],
              "name": "Voted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newDuration",
                  "type": "uint256"
                }
              ],
              "name": "VotingDelayChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newDuration",
                  "type": "uint256"
                }
              ],
              "name": "VotingDurationChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "CREATE_TO_VOTE_PROPOSAL_DELAY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_DURATION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_DURATION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VOTING_DURATION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "details",
                  "type": "string"
                }
              ],
              "name": "createProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "delegateAddress",
                  "type": "address"
                }
              ],
              "name": "delegate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyShutdown",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMinVotesNeeded",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNativeTokenAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNativeTokenBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNftContractAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalIndex",
                  "type": "uint256"
                }
              ],
              "name": "getProposalData",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalIndex",
                  "type": "uint256"
                }
              ],
              "name": "getProposalResult",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStakingAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isShutdown",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minVotesNeeded",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "mintNativeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotesNeeded",
                  "type": "uint256"
                }
              ],
              "name": "setMinVotesNeeded",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenContractAddress",
                  "type": "address"
                }
              ],
              "name": "setNativeTokenAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalIndex",
                  "type": "uint256"
                }
              ],
              "name": "setProposalToCancelled",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalIndex",
                  "type": "uint256"
                }
              ],
              "name": "setProposalToResolved",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_stakingContractAddress",
                  "type": "address"
                }
              ],
              "name": "setStakingAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newDuration",
                  "type": "uint256"
                }
              ],
              "name": "setVotingDelayDuration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newDuration",
                  "type": "uint256"
                }
              ],
              "name": "setVotingDuration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "nftContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferNFT",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferNativeToken",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalIndex",
                  "type": "uint256"
                }
              ],
              "name": "updateProposalStatus",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_vote",
                  "type": "bool"
                }
              ],
              "name": "vote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x4844 PUSH1 0xB SSTORE PUSH2 0x7882 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x4B PUSH3 0x10F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH10 0xCC3CBD319CFFDF400000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH3 0x117 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5F9A DUP1 PUSH3 0x127 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA438D208 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC5089DC0 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE82368AB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE82368AB EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xEE8BCCE6 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xF4E0D9AC EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0xF91F88F7 EQ PUSH2 0x5CA JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xC5089DC0 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xC851ED6C EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xDA35C664 EQ PUSH2 0x53C JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xB426D991 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB426D991 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xB6A6D177 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xB8C62AB8 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xBF86D690 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xA438D208 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA6F0F7C7 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xAE77A708 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xB1724B46 EQ PUSH2 0x454 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x49C2A1A6 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x6E768530 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x6E768530 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x8337F8DA EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CC JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x49C2A1A6 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x5BCFADB5 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x69E9CAE1 EQ PUSH2 0x33F JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x19CD0575 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x19CD0575 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x3403C2FC EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x3AAC5ADA EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x441A39F3 EQ PUSH2 0x2CD JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH3 0x76796E EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xE9ED68B EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x11CED45C EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x257 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x51BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x94E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x49E6 JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x48B7 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH2 0x1C19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B6 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F2 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x4981 JUMP JUMPDEST PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45C PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x2138 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH2 0x2646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x264B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D0 PUSH2 0x28D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x517F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x2979 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x4A79 JUMP JUMPDEST PUSH2 0x3405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x544 PUSH2 0x3AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x3ADE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x3CDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x3ED7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x4080 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x427F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x620 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 GT DUP1 ISZERO PUSH2 0x688 JUMPI POP PUSH3 0x2E630 DUP2 LT JUMPDEST PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0x543F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0xBB3349C4EE7B53DAECA1D3DC1890A839F0A436F8856EAFD80F6E8E64BFD31510 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x87A JUMPI PUSH2 0x7C7 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x867 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x87A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x872 SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B2 JUMP JUMPDEST POP DUP1 PUSH2 0x8EB JUMPI PUSH1 0x8 PUSH2 0x88A PUSH2 0x4658 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH32 0xF45DE2A4EFBDD3CB1D3639C28F1798F2E4C60FF4CD9031FD2097EF76AEBC1536 PUSH2 0x914 PUSH2 0x4658 JUMP JUMPDEST DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x925 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x939 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4660 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x956 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x974 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x553F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xA72 PUSH2 0x102A JUMP JUMPDEST EQ PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP1 PUSH2 0x53BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0xCB7 JUMPI PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAFC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB58 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI POP PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xBF6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x4 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x1A6358448AAE66517D334E312B05813A9F76FCEAD925EFFEA60ACA8B4F0DCA04 PUSH2 0xC8C PUSH2 0x4658 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0xC9B SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 DUP1 PUSH2 0xCAF SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB9 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x51AE58AF PUSH2 0xCFE PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDAE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6B JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE30 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 ADDRESS PUSH2 0xE82 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP3 SWAP2 SWAP1 PUSH2 0x5021 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0xF69 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA22CB465 PUSH2 0xF17 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP3 SWAP2 SWAP1 PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0xF76 SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4F JUMP JUMPDEST POP PUSH32 0x69692121B4C0A67F297222FE92D86727BC02DF6768FF7BE877E607E960DC2DF3 PUSH2 0xFA8 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x40 MLOAD PUSH2 0xFB8 SWAP3 SWAP2 SWAP1 PUSH2 0x50B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x77382E0341A6D8666D1F8ED15B8C933A01F5C1A3E6C5229E2DB8C5DC1C06AE1 PUSH2 0x1004 PUSH2 0x4658 JUMP JUMPDEST NUMBER PUSH1 0x40 MLOAD PUSH2 0x1013 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1123 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP1 PUSH2 0x553F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A02A42D PUSH2 0x11C2 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST GT PUSH2 0x126E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1265 SWAP1 PUSH2 0x547F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD NUMBER PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC SLOAD DUP3 PUSH2 0x1290 SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x12F9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC591AA98 PUSH2 0x1344 PUSH2 0x4658 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1366 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EE SWAP1 PUSH2 0x531F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140A SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1443 SWAP3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x14BD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x5D072FAEAF3FE9518ECA824577834E1EFC3FF209025796DD8819B72706CD0BD5 PUSH1 0x4 SLOAD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14FC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1519 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1537 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 GT DUP1 ISZERO PUSH2 0x159F JUMPI POP PUSH3 0x2E630 DUP2 LT JUMPDEST PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP1 PUSH2 0x543F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x7B618BDDE7807A5FED51719C1D5AF2441AFD29BEE82E35B7C4F2E95B0CAC9BCA DUP2 PUSH1 0x40 MLOAD PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162C PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x164A PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1697 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E7 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1732 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1760 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B4 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x488E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x185A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1851 SWAP1 PUSH2 0x549F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST EQ ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1A12 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x194C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19FF JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19CD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x1A12 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1A0A SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18EE JUMP JUMPDEST POP JUMPDEST PUSH32 0x209EB5082BC3BCBD509AE679A680B3BB2A11B77FEA542A93E205020AF76529FC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 SLOAD DUP8 GT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA1 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B78 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP6 DUP1 SLOAD PUSH2 0x1B84 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BB0 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BFD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BD2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BFD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH2 0x1C21 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C3F PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8C SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D90 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DAE PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFB SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4B SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1E97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8E SWAP1 PUSH2 0x533F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF4 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F33 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F51 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9E SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEE SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2054 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x206E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A6 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x20E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DC SWAP1 PUSH2 0x527F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x11C182FCC25E52151BF452608F627A605269882587C25B326E9EB16819557B6 PUSH2 0x210E PUSH2 0x4658 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x211F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2E630 DUP2 JUMP JUMPDEST PUSH2 0x2140 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x215E PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AB SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FB SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x2249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2240 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2283 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x22DF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2317 SWAP1 PUSH2 0x54DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x235A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x23B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x23F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23EE SWAP1 PUSH2 0x52FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x2430 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x248C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x24CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C4 SWAP1 PUSH2 0x555F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2507 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2563 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259B SWAP1 PUSH2 0x52DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2604 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3346ABF262AC5179E9052765FB72484E0BAAB1F356F08442BB7A3054147631DE DUP2 PUSH1 0x4 PUSH1 0x40 MLOAD PUSH2 0x263B SWAP3 SWAP2 SWAP1 PUSH2 0x55DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x2653 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2671 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BE SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270E SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x275C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2753 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2796 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x27F2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2829 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2892 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3346ABF262AC5179E9052765FB72484E0BAAB1F356F08442BB7A3054147631DE DUP2 PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x28C9 SWAP3 SWAP2 SWAP1 PUSH2 0x55DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x296F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2925 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C0 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x2A0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A05 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2A3E SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A6A SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2B6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2BAB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2BE8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C20 SWAP1 PUSH2 0x529F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2C63 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2CA0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2CE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD8 SWAP1 PUSH2 0x52FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x2D1A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2D57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2D98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8F SWAP1 PUSH2 0x54FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2DD2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E0F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x2E1F JUMPI POP DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT JUMPDEST ISZERO PUSH2 0x2E5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E56 SWAP1 PUSH2 0x545F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E99 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2ED6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x2EE7 JUMPI POP DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2EF7 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0x2F37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2E SWAP1 PUSH2 0x523F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT ISZERO DUP1 ISZERO PUSH2 0x2F4F JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2FD0 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2F90 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2FCD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x3057 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3014 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x304E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP PUSH2 0x3312 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT DUP1 ISZERO PUSH2 0x30DF JUMPI POP PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x309F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x30DC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x3166 JUMPI PUSH1 0x0 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3123 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x315D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP PUSH2 0x3311 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT DUP1 ISZERO PUSH2 0x31EE JUMPI POP PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x31AE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x31EB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x3310 JUMPI PUSH1 0x5 SLOAD DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x320A SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST LT PUSH2 0x3291 JUMPI PUSH1 0x2 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x324E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3288 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP PUSH2 0x330F JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x32D0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x330A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3342 SWAP3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x33BC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x3346ABF262AC5179E9052765FB72484E0BAAB1F356F08442BB7A3054147631DE DUP3 DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x33F9 SWAP3 SWAP2 SWAP1 PUSH2 0x55DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3455 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344C SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A02A42D PUSH2 0x349D PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B9 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3509 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x354E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3545 SWAP1 PUSH2 0x551F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x356F PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x35F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F0 SWAP1 PUSH2 0x559F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x3629 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3655 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3677 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3685 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x371E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3756 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3796 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x37D3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x37E4 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT ISZERO JUMPDEST PUSH2 0x3823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381A SWAP1 PUSH2 0x557F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x3847 JUMPI DUP2 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x383B SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH2 0x3861 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x3859 SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x3880 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC591AA98 PUSH2 0x3917 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x394B SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399D SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x39DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D3 SWAP1 PUSH2 0x541F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3A0C SWAP3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3A86 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xAB63E912F390A63C02E4C6743DF4F3705588D446BAB0ABCD0F4840DF1A03AC21 PUSH2 0x3AB7 PUSH2 0x4658 JUMP JUMPDEST DUP6 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3ACA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3AE6 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B04 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B51 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3BAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA1 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1B736919E446059718572A81155F93B87161EEC8F2F468E0A2C4F97CFF2EC9C0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x3CC2 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x504A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3CE5 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D03 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D50 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3DA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA0 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3DEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE3 SWAP1 PUSH2 0x537F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8C SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST DUP2 LT PUSH2 0x3ECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC4 SWAP1 PUSH2 0x535F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3EDF PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3EFD PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4A SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3FC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FBA SWAP1 PUSH2 0x52BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4088 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x40A6 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x40FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F3 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x414C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4143 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA47A663187732DA575FA498CEE4F254ED77B7BC0BAA7BF09A7DA9F55DD604DF1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x4264 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4273 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x504A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x42C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42BD SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4300 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x435C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 PUSH2 0x43FB JUMPI POP PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x439D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x43F9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x4498 JUMPI POP PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x443A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4496 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST PUSH2 0x44D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44CE SWAP1 PUSH2 0x53DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x4645 JUMPI POP PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4549 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x45A5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 PUSH2 0x4644 JUMPI POP PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x45E6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4642 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x464F JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4680 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x46A2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x46E9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x46BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x46E9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x46E9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x46E8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x46CD JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x46F6 SWAP2 SWAP1 PUSH2 0x46FA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4713 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x46FB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472A PUSH2 0x4725 DUP5 PUSH2 0x5674 JUMP JUMPDEST PUSH2 0x564F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x474D DUP5 DUP3 DUP6 PUSH2 0x5874 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4768 PUSH2 0x4763 DUP5 PUSH2 0x56A5 JUMP JUMPDEST PUSH2 0x564F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x478B DUP5 DUP3 DUP6 PUSH2 0x5874 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47A2 DUP2 PUSH2 0x5F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x47B7 DUP2 PUSH2 0x5F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47CC DUP2 PUSH2 0x5F36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x47E1 DUP2 PUSH2 0x5F36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x47F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4808 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4717 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4832 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4755 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x484A DUP2 PUSH2 0x5F4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x485F DUP2 PUSH2 0x5F4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4885 DUP5 DUP3 DUP6 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48AE DUP5 DUP3 DUP6 ADD PUSH2 0x47A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48DA DUP7 DUP3 DUP8 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x48EB DUP7 DUP3 DUP8 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x48FC DUP7 DUP3 DUP8 ADD PUSH2 0x483B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x491C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x492A DUP8 DUP3 DUP9 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x493B DUP8 DUP3 DUP9 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x494C DUP8 DUP3 DUP9 ADD PUSH2 0x483B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4975 DUP8 DUP3 DUP9 ADD PUSH2 0x47E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49A2 DUP6 DUP3 DUP7 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x49B3 DUP6 DUP3 DUP7 ADD PUSH2 0x483B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49DD DUP5 DUP3 DUP6 ADD PUSH2 0x47D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A1E DUP5 DUP3 DUP6 ADD PUSH2 0x4811 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A47 DUP5 DUP3 DUP6 ADD PUSH2 0x483B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A70 DUP5 DUP3 DUP6 ADD PUSH2 0x4850 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A9A DUP6 DUP3 DUP7 ADD PUSH2 0x483B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4AAB DUP6 DUP3 DUP7 ADD PUSH2 0x47BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC1 DUP4 DUP4 PUSH2 0x4ACD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AD6 DUP2 PUSH2 0x57CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4AE5 DUP2 PUSH2 0x57CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF6 DUP3 PUSH2 0x56FB JUMP JUMPDEST PUSH2 0x4B00 DUP2 DUP6 PUSH2 0x5736 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B0B DUP4 PUSH2 0x56D6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B3C JUMPI DUP2 MLOAD PUSH2 0x4B23 DUP9 DUP3 PUSH2 0x4AB5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4B2E DUP4 PUSH2 0x571C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B0F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B54 DUP3 PUSH2 0x5706 JUMP JUMPDEST PUSH2 0x4B5E DUP2 DUP6 PUSH2 0x5736 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B69 DUP4 PUSH2 0x56E6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BA1 JUMPI PUSH2 0x4B7E DUP3 PUSH2 0x5A38 JUMP JUMPDEST PUSH2 0x4B88 DUP9 DUP3 PUSH2 0x4AB5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4B93 DUP4 PUSH2 0x5729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B6D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BB7 DUP2 PUSH2 0x57E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4BC6 DUP2 PUSH2 0x57EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4BD5 DUP2 PUSH2 0x5862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BE6 DUP3 PUSH2 0x5711 JUMP JUMPDEST PUSH2 0x4BF0 DUP2 DUP6 PUSH2 0x5747 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C00 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5883 JUMP JUMPDEST PUSH2 0x4C09 DUP2 PUSH2 0x5A4B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C21 PUSH1 0x16 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C2C DUP3 PUSH2 0x5A69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C44 PUSH1 0x16 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C4F DUP3 PUSH2 0x5A92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C67 PUSH1 0x15 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C72 DUP3 PUSH2 0x5ABB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8A PUSH1 0x12 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C95 DUP3 PUSH2 0x5AE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CAD PUSH1 0x26 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CB8 DUP3 PUSH2 0x5B0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD0 PUSH1 0x1A DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CDB DUP3 PUSH2 0x5B5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CF3 PUSH1 0x19 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CFE DUP3 PUSH2 0x5B85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D16 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D21 DUP3 PUSH2 0x5BAE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D39 PUSH1 0x13 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D44 DUP3 PUSH2 0x5BD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D5C PUSH1 0x1B DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D67 DUP3 PUSH2 0x5C00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D7F PUSH1 0x12 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D8A DUP3 PUSH2 0x5C29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA2 PUSH1 0x1E DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DAD DUP3 PUSH2 0x5C52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC5 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DD0 DUP3 PUSH2 0x5C7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE8 PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DF3 DUP3 PUSH2 0x5CA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E0B PUSH1 0x20 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E16 DUP3 PUSH2 0x5CCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E2E PUSH1 0x15 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E39 DUP3 PUSH2 0x5CF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E51 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E5C DUP3 PUSH2 0x5D1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E74 PUSH1 0x1B DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7F DUP3 PUSH2 0x5D48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E97 PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EA2 DUP3 PUSH2 0x5D71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBA PUSH1 0x13 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EC5 DUP3 PUSH2 0x5D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EDD PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EE8 DUP3 PUSH2 0x5DC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F00 PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F0B DUP3 PUSH2 0x5DEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F23 PUSH1 0x1E DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F2E DUP3 PUSH2 0x5E15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F46 PUSH1 0x12 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F51 DUP3 PUSH2 0x5E3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F69 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F74 DUP3 PUSH2 0x5E67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8C PUSH1 0x1E DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F97 DUP3 PUSH2 0x5E90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FAF PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FBA DUP3 PUSH2 0x5EB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD2 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FDD DUP3 PUSH2 0x5EE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF1 DUP2 PUSH2 0x584B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5000 DUP2 PUSH2 0x5855 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x501B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4ADC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5036 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x5043 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4ADC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x505F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x506C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x5079 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4ADC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5096 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x50A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x50B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x50CD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x50DF DUP2 DUP5 PUSH2 0x4B49 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x50FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x510A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4BAE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5126 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x5133 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x514F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x515C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5169 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5176 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4BAE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5199 DUP2 DUP5 PUSH2 0x4AEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51F1 DUP2 DUP10 PUSH2 0x4BDB JUMP JUMPDEST SWAP1 POP PUSH2 0x5200 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x520D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x521A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5227 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5234 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4FF7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5258 DUP2 PUSH2 0x4C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5278 DUP2 PUSH2 0x4C37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5298 DUP2 PUSH2 0x4C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52B8 DUP2 PUSH2 0x4C7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52D8 DUP2 PUSH2 0x4CA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52F8 DUP2 PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5318 DUP2 PUSH2 0x4CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5338 DUP2 PUSH2 0x4D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5358 DUP2 PUSH2 0x4D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5378 DUP2 PUSH2 0x4D4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5398 DUP2 PUSH2 0x4D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53B8 DUP2 PUSH2 0x4D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53D8 DUP2 PUSH2 0x4DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53F8 DUP2 PUSH2 0x4DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5418 DUP2 PUSH2 0x4DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5438 DUP2 PUSH2 0x4E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5458 DUP2 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5478 DUP2 PUSH2 0x4E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5498 DUP2 PUSH2 0x4E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54B8 DUP2 PUSH2 0x4EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54D8 DUP2 PUSH2 0x4ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54F8 DUP2 PUSH2 0x4EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5518 DUP2 PUSH2 0x4F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5538 DUP2 PUSH2 0x4F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5558 DUP2 PUSH2 0x4F5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5578 DUP2 PUSH2 0x4F7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5598 DUP2 PUSH2 0x4FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55B8 DUP2 PUSH2 0x4FC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x55EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x55FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4BCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5618 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4FE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x562A DUP2 DUP7 PUSH2 0x4BDB JUMP JUMPDEST SWAP1 POP PUSH2 0x5639 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5646 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5659 PUSH2 0x566A JUMP JUMPDEST SWAP1 POP PUSH2 0x5665 DUP3 DUP3 PUSH2 0x5902 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x568F JUMPI PUSH2 0x568E PUSH2 0x5A09 JUMP JUMPDEST JUMPDEST PUSH2 0x5698 DUP3 PUSH2 0x5A4B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x56C0 JUMPI PUSH2 0x56BF PUSH2 0x5A09 JUMP JUMPDEST JUMPDEST PUSH2 0x56C9 DUP3 PUSH2 0x5A4B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5763 DUP3 PUSH2 0x584B JUMP JUMPDEST SWAP2 POP PUSH2 0x576E DUP4 PUSH2 0x584B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x57A3 JUMPI PUSH2 0x57A2 PUSH2 0x597C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D9 DUP3 PUSH2 0x582B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x5826 DUP3 PUSH2 0x5F0B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586D DUP3 PUSH2 0x5818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5886 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x58B0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x58CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x58E2 JUMPI PUSH2 0x58E1 PUSH2 0x59DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58FB PUSH2 0x58F6 DUP4 PUSH2 0x5A5C JUMP JUMPDEST PUSH2 0x57AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x590B DUP3 PUSH2 0x5A4B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x592A JUMPI PUSH2 0x5929 PUSH2 0x5A09 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593E DUP3 PUSH2 0x584B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5971 JUMPI PUSH2 0x5970 PUSH2 0x597C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A44 DUP3 SLOAD PUSH2 0x58E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374696C6C20696E20766F74696E6720706572696F6400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20646F65736E277420657869737400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C2063616E63656C6C65640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C72656164792063616E63656C6C6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C7265616479207265736F6C76656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x63726561746550726F706F73616C3A20746F6B656E206C6F636B206661696C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206D696E74203020746F6B656E7300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x766F746573206E6565646564203E20746F6B656E20737570706C790000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x71756F72756D2063616E6E6F7420626520300000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206E6F7420696E20564F5445535F46494E49534845440000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7472616E7366657220746F6B656E73206265666F72652073687574646F776E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206D75737420626520616674657220766F74696E67000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x766F74653A20746F6B656E206C6F636B206661696C0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6475726174696F6E206D757374206265203E3330383530203C31393030303000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6F206561726C7920746F206D6F766520746F20766F74696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D757374207374616B6520746F206372656174652070726F706F73616C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x63616E6E6F742062652063616C6C65642061667465722073687574646F776E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E27742063616E63656C20696620766F74652066696E6973686564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206661696C656420746F206D6565742071756F72756D0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D757374207374616B6520746F20766F74650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C7265616479206661696C65642071756F72756D0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206E6F7420696E20766F74696E6720706572696F64000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920766F7465642066726F6D2074686973206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x5F1C JUMPI PUSH2 0x5F1B PUSH2 0x59AB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F28 DUP2 PUSH2 0x57CE JUMP JUMPDEST DUP2 EQ PUSH2 0x5F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F3F DUP2 PUSH2 0x57E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F56 DUP2 PUSH2 0x584B JUMP JUMPDEST DUP2 EQ PUSH2 0x5F61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x25 CHAINID 0xCF 0xB6 PUSH32 0xCDFDA3CBF262AD028319FFBC3699F72DBB0F490F272DDC5FA75264736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "350:20464:10:-:0;;;1273:5;1249:29;;;;;;;;;;;;;;;;;;;;1332:5;1285:52;;1387:5;1354:38;;2976:155;;;;;;;;;;867:17:0;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;1637:1:1;1743:7;:22;;;;3026:1:10::1;3010:13;:17;;;;3080:14;3063;:31;;;;350:20464:::0;;586:96:6;639:7;665:10;658:17;;586:96;:::o;350:20464:10:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:49300:11",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "90:260:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "100:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "166:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:40:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:48:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "109:15:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "109:65:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "190:5:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "197:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "183:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "183:21:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "183:21:11"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "213:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "235:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:16:11"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "217:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "278:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "287:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "290:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "280:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "280:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "280:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "259:3:11"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "264:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "255:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "255:16:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:25:11"
                              },
                              "nodeType": "YulIf",
                              "src": "249:2:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "327:3:11"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "332:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "337:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:23:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "303:41:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "303:41:11"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "63:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "68:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "76:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "84:5:11",
                            "type": ""
                          }
                        ],
                        "src": "7:343:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "440:261:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "450:75:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "517:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "475:41:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "475:49:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "459:15:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "459:66:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "450:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "541:5:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "548:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "534:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "534:21:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "534:21:11"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "564:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "579:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "575:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "575:16:11"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "568:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "629:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "638:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "641:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "631:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "631:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "631:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:3:11"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "615:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:16:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "624:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "603:25:11"
                              },
                              "nodeType": "YulIf",
                              "src": "600:2:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "678:3:11"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "683:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "688:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "654:23:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "654:41:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "654:41:11"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "413:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "418:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "426:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "434:5:11",
                            "type": ""
                          }
                        ],
                        "src": "356:345:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "759:87:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "769:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "791:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "834:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "807:26:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "807:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "807:33:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "737:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "745:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "753:5:11",
                            "type": ""
                          }
                        ],
                        "src": "707:139:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "915:80:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "925:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "940:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "983:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:26:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "956:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "956:33:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "893:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "901:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "909:5:11",
                            "type": ""
                          }
                        ],
                        "src": "852:143:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1050:84:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1060:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1082:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1069:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1069:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1060:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1122:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1098:23:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1098:30:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1098:30:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1028:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1036:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1044:5:11",
                            "type": ""
                          }
                        ],
                        "src": "1001:133:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1200:77:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1210:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1225:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1219:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1210:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1265:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1241:23:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1241:30:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1241:30:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1178:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1186:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1194:5:11",
                            "type": ""
                          }
                        ],
                        "src": "1140:137:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1357:210:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1406:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1415:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1418:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1408:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1408:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1408:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1385:6:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1393:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1381:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1381:17:11"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1377:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1377:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1370:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1370:35:11"
                              },
                              "nodeType": "YulIf",
                              "src": "1367:2:11"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1431:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1458:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1445:20:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1435:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1474:87:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1534:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1542:4:11",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1530:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1530:17:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1549:6:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1557:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1483:46:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1483:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1335:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1343:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1351:5:11",
                            "type": ""
                          }
                        ],
                        "src": "1296:271:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1649:211:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1698:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1707:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1710:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1700:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1700:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1700:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1677:6:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1685:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1673:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1673:17:11"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1692:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1669:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1669:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1662:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1662:35:11"
                              },
                              "nodeType": "YulIf",
                              "src": "1659:2:11"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1723:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1750:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1737:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1737:20:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1727:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1766:88:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1827:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1835:4:11",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1823:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1823:17:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1842:6:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1850:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1775:47:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1775:79:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1766:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1627:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1635:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1643:5:11",
                            "type": ""
                          }
                        ],
                        "src": "1587:273:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1918:87:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1928:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1950:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1937:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1937:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1928:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1993:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1966:26:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1966:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1966:33:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1896:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1904:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1912:5:11",
                            "type": ""
                          }
                        ],
                        "src": "1866:139:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2074:80:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2084:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2099:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2093:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2093:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2084:5:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2142:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2115:26:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2115:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2115:33:11"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2052:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2060:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2068:5:11",
                            "type": ""
                          }
                        ],
                        "src": "2011:143:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2226:196:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2272:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2281:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2284:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2274:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2274:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2274:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2247:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2256:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2243:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2243:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2268:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2239:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2239:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "2236:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2298:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2313:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2327:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2317:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2342:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2377:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2388:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2373:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2373:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2397:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2352:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2352:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2342:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2196:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2207:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2219:6:11",
                            "type": ""
                          }
                        ],
                        "src": "2160:262:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2505:207:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2551:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2560:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2563:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2553:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2553:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2553:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2526:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2535:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2522:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2522:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2547:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2518:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2518:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "2515:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2577:128:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2592:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2606:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2596:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2621:74:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2667:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2678:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2663:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2663:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2687:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2631:31:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2631:64:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2621:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2475:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2486:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2498:6:11",
                            "type": ""
                          }
                        ],
                        "src": "2428:284:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2818:452:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2864:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2873:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2876:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2866:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2866:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2866:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2839:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2848:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2835:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2835:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2860:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2831:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2831:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "2828:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2890:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2905:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2919:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2909:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2934:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2969:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2980:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2965:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2965:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2989:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2944:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2944:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2934:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3017:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3032:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3046:2:11",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3036:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3062:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3097:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3108:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3093:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3093:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3117:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3072:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3072:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3062:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3145:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3160:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3174:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3164:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3190:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3225:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3236:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3221:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3221:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3245:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3200:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3200:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3190:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2772:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2783:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2795:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2803:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2811:6:11",
                            "type": ""
                          }
                        ],
                        "src": "2718:552:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3402:683:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3449:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3458:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3461:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3451:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3451:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3451:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3423:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3432:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3419:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3419:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3444:3:11",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3415:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3415:33:11"
                              },
                              "nodeType": "YulIf",
                              "src": "3412:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3475:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3490:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3504:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3494:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3519:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3554:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3565:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3550:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3550:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3574:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3529:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3529:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3519:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3602:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3617:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3631:2:11",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3621:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3647:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3682:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3693:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3678:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3678:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3702:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3657:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3657:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3647:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3730:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3745:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3759:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3749:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3775:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3810:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3821:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3806:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3806:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3830:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3785:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3785:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3775:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3858:220:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3873:46:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3904:9:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3915:2:11",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3900:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3900:18:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3887:12:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3887:32:11"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3877:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3966:16:11",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3975:1:11",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3978:1:11",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3968:6:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3968:12:11"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3968:12:11"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3938:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3946:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3935:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3935:30:11"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3932:2:11"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3996:72:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4040:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4051:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4036:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4036:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4060:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4006:29:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4006:62:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3996:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3348:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3359:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3371:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3379:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3387:6:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3395:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3276:809:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4174:324:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4220:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4229:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4232:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4222:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4222:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4222:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4195:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4204:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4191:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4191:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4216:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4187:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4187:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "4184:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4246:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4261:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4275:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4265:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4290:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4325:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4336:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4321:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4321:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4345:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4300:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4300:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4290:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4373:118:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4388:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4402:2:11",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4392:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4418:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4453:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4464:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4449:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4449:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4473:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4428:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4428:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4418:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4136:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4147:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4159:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4167:6:11",
                            "type": ""
                          }
                        ],
                        "src": "4091:407:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4578:204:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4624:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4633:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4636:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4626:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4626:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4626:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4599:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4608:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4595:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4595:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4620:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4591:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4591:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "4588:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4650:125:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4665:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4679:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4669:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4694:71:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4737:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4748:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4733:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4733:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4757:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4704:28:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4704:61:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4694:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4548:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4559:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4571:6:11",
                            "type": ""
                          }
                        ],
                        "src": "4504:278:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4864:299:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4910:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4919:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4922:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4912:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4912:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4912:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4885:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4894:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4881:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4881:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4906:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4877:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4877:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "4874:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4936:220:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4951:45:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4982:9:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4993:1:11",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4978:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4978:17:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4965:12:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4965:31:11"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4955:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "5043:16:11",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5052:1:11",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5055:1:11",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "5045:6:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5045:12:11"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "5045:12:11"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5015:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5023:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5012:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5012:30:11"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "5009:2:11"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5073:73:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5118:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5129:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5114:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5114:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5138:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5083:30:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5083:63:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5073:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4834:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4845:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4857:6:11",
                            "type": ""
                          }
                        ],
                        "src": "4788:375:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5235:196:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5281:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5290:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5293:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5283:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5283:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5283:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5256:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5265:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5252:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5252:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5277:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5248:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5248:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "5245:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5307:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5322:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5336:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5326:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5351:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5386:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5397:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5382:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5382:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5406:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5361:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5361:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5351:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5205:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5216:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5228:6:11",
                            "type": ""
                          }
                        ],
                        "src": "5169:262:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5514:207:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5560:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5569:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5572:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5562:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5562:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5562:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5535:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5544:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5531:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5531:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5556:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5527:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5527:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "5524:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5586:128:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5601:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5615:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5605:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5630:74:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5676:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5687:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5672:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5672:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5696:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "5640:31:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5640:64:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5630:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5484:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5495:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5507:6:11",
                            "type": ""
                          }
                        ],
                        "src": "5437:284:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5807:321:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5853:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5862:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5865:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5855:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5855:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5855:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5828:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5837:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5824:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5824:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5849:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5820:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5820:32:11"
                              },
                              "nodeType": "YulIf",
                              "src": "5817:2:11"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5879:117:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5894:15:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5908:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5898:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5923:63:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5958:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5969:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5954:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5954:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5978:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5933:20:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5933:53:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5923:6:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6006:115:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6021:16:11",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6035:2:11",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6025:6:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6051:60:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6083:9:11"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6094:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6079:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6079:22:11"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6103:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "6061:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6061:50:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6051:6:11"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5769:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5780:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5792:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5800:6:11",
                            "type": ""
                          }
                        ],
                        "src": "5727:401:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6214:99:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6258:6:11"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6266:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "6224:33:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6224:46:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6224:46:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6279:28:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6297:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6302:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6293:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6293:14:11"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6279:10:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6187:6:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6195:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "6203:10:11",
                            "type": ""
                          }
                        ],
                        "src": "6134:179:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6374:53:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6391:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6414:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6396:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6396:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6384:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6384:37:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6384:37:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6362:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6369:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6319:108:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6498:53:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6515:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6538:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6520:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6520:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6508:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6508:37:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6508:37:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6486:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6493:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6433:118:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6711:608:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6721:68:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6783:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6735:47:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6735:54:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6725:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6798:93:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6879:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6884:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6805:73:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6805:86:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6798:3:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6900:71:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6965:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6915:49:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6915:56:11"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "6904:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6980:21:11",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "6994:7:11"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6984:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7070:224:11",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7084:34:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7111:6:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "7105:5:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7105:13:11"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "7088:13:11",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7131:70:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "7182:13:11"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7197:3:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "7138:43:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7138:63:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7131:3:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7214:70:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7277:6:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7224:52:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7224:60:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7214:6:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "7032:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7035:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7029:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7029:13:11"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "7043:18:11",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7045:14:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7054:1:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7057:1:11",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7050:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7050:9:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "7045:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "7014:14:11",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7016:10:11",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7025:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "7020:1:11",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "7010:284:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7303:10:11",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7310:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7303:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6690:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6697:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6706:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6587:732:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7476:630:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7486:65:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7545:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "7500:44:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7500:51:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7490:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7560:93:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7641:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7646:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7567:73:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7567:86:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7560:3:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7662:68:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7724:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "7677:46:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7677:53:11"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "7666:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7739:21:11",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "7753:7:11"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "7743:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7829:252:11",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7843:65:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7901:6:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "read_from_storage_offset_0_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "7864:36:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7864:44:11"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "7847:13:11",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7921:70:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "7972:13:11"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7987:3:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "7928:43:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7928:63:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7921:3:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8004:67:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "8064:6:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_storage",
                                        "nodeType": "YulIdentifier",
                                        "src": "8014:49:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8014:57:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8004:6:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "7791:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7794:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7788:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7788:13:11"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "7802:18:11",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7804:14:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7813:1:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7816:1:11",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7809:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7809:9:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "7804:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "7773:14:11",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7775:10:11",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7784:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "7779:1:11",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "7769:312:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8090:10:11",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8097:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8090:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7455:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7462:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7471:3:11",
                            "type": ""
                          }
                        ],
                        "src": "7355:751:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8171:50:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8188:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8208:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "8193:14:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8193:21:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8181:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8181:34:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8181:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8159:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8166:3:11",
                            "type": ""
                          }
                        ],
                        "src": "8112:109:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8290:52:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8307:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8329:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "8312:16:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8312:23:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8300:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8300:36:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8300:36:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8278:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8285:3:11",
                            "type": ""
                          }
                        ],
                        "src": "8227:115:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8429:82:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8446:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8498:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_ProposalStatus_$503_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8451:46:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8451:53:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8439:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8439:66:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8439:66:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_ProposalStatus_$503_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8417:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8424:3:11",
                            "type": ""
                          }
                        ],
                        "src": "8348:163:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8609:272:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8619:53:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8666:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8633:32:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8633:39:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "8623:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8681:78:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8747:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8752:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8688:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8688:71:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8681:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8794:5:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8801:4:11",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8790:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8790:16:11"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8808:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8813:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8768:21:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8768:52:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8768:52:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8829:46:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8840:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8867:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "8845:21:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8845:29:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8836:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8836:39:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8829:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8590:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8597:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8605:3:11",
                            "type": ""
                          }
                        ],
                        "src": "8517:364:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9033:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9043:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9109:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9114:2:11",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9050:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9050:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9043:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9215:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9126:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9126:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9126:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9228:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9239:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9244:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9235:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9235:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9228:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9021:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9029:3:11",
                            "type": ""
                          }
                        ],
                        "src": "8887:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9405:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9415:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9481:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9486:2:11",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9422:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9422:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9415:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9587:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                  "nodeType": "YulIdentifier",
                                  "src": "9498:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9498:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9498:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9600:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9611:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9616:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9607:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9607:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9600:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9393:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9401:3:11",
                            "type": ""
                          }
                        ],
                        "src": "9259:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9777:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9787:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9853:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9858:2:11",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9794:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9794:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9787:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9959:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                  "nodeType": "YulIdentifier",
                                  "src": "9870:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9870:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9870:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9972:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9983:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9988:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9979:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9979:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9972:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9765:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9773:3:11",
                            "type": ""
                          }
                        ],
                        "src": "9631:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10149:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10159:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10225:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10230:2:11",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10166:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10166:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10159:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10331:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe",
                                  "nodeType": "YulIdentifier",
                                  "src": "10242:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10242:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10242:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10344:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10355:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10360:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10351:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10351:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10344:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10137:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10145:3:11",
                            "type": ""
                          }
                        ],
                        "src": "10003:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10521:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10531:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10597:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10602:2:11",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10538:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10538:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10531:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10703:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                  "nodeType": "YulIdentifier",
                                  "src": "10614:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10614:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10614:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10716:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10727:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10732:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10723:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10723:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10716:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10509:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10517:3:11",
                            "type": ""
                          }
                        ],
                        "src": "10375:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10893:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10903:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10969:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10974:2:11",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10910:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10910:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10903:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11075:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f",
                                  "nodeType": "YulIdentifier",
                                  "src": "10986:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10986:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10986:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11088:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11099:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11104:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11095:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11095:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11088:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10881:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10889:3:11",
                            "type": ""
                          }
                        ],
                        "src": "10747:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11265:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11275:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11341:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11346:2:11",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11282:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11282:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11275:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11447:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d",
                                  "nodeType": "YulIdentifier",
                                  "src": "11358:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11358:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11358:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11460:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11471:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11476:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11467:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11467:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11460:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11253:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11261:3:11",
                            "type": ""
                          }
                        ],
                        "src": "11119:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11637:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11647:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11713:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11718:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11654:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11654:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11647:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11819:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1",
                                  "nodeType": "YulIdentifier",
                                  "src": "11730:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11730:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11730:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11832:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11843:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11848:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11839:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11839:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11832:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11625:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11633:3:11",
                            "type": ""
                          }
                        ],
                        "src": "11491:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12009:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12019:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12085:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12090:2:11",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12026:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12026:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12019:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12191:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217",
                                  "nodeType": "YulIdentifier",
                                  "src": "12102:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12102:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12102:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12204:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12215:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12220:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12211:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12211:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12204:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11997:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12005:3:11",
                            "type": ""
                          }
                        ],
                        "src": "11863:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12381:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12391:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12457:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12462:2:11",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12398:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12398:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12391:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12563:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e",
                                  "nodeType": "YulIdentifier",
                                  "src": "12474:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12474:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12474:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12576:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12587:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12592:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12583:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12583:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12576:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12369:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12377:3:11",
                            "type": ""
                          }
                        ],
                        "src": "12235:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12753:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12763:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12829:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12834:2:11",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12770:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12770:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12763:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12935:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682",
                                  "nodeType": "YulIdentifier",
                                  "src": "12846:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12846:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12846:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12948:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12959:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12964:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12955:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12955:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12948:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12741:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12749:3:11",
                            "type": ""
                          }
                        ],
                        "src": "12607:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13125:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13135:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13201:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13206:2:11",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13142:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13142:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13135:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13307:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e",
                                  "nodeType": "YulIdentifier",
                                  "src": "13218:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13218:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13218:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13320:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13331:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13336:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13327:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13327:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "13320:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13113:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13121:3:11",
                            "type": ""
                          }
                        ],
                        "src": "12979:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13497:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13507:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13573:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13578:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13514:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13514:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13507:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13679:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20",
                                  "nodeType": "YulIdentifier",
                                  "src": "13590:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13590:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13590:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13692:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13703:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13708:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13699:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13699:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "13692:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13485:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13493:3:11",
                            "type": ""
                          }
                        ],
                        "src": "13351:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13869:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13879:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13945:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13950:2:11",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13886:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13886:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13879:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14051:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8",
                                  "nodeType": "YulIdentifier",
                                  "src": "13962:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13962:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13962:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14064:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14075:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14080:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14071:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14071:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "14064:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13857:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13865:3:11",
                            "type": ""
                          }
                        ],
                        "src": "13723:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14241:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14251:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14317:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14322:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14258:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14258:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14251:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14423:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                  "nodeType": "YulIdentifier",
                                  "src": "14334:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14334:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14334:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14436:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14447:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14452:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14443:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14443:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "14436:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14229:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "14237:3:11",
                            "type": ""
                          }
                        ],
                        "src": "14095:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14613:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14623:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14689:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14694:2:11",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14630:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14630:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14623:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14795:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c",
                                  "nodeType": "YulIdentifier",
                                  "src": "14706:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14706:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14706:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14808:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14819:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14824:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14815:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14815:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "14808:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14601:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "14609:3:11",
                            "type": ""
                          }
                        ],
                        "src": "14467:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14985:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14995:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15061:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15066:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15002:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15002:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14995:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15167:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd",
                                  "nodeType": "YulIdentifier",
                                  "src": "15078:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15078:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15078:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15180:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15191:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15196:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15187:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15187:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15180:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14973:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "14981:3:11",
                            "type": ""
                          }
                        ],
                        "src": "14839:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15357:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15367:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15433:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15438:2:11",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15374:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15374:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15367:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15539:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0",
                                  "nodeType": "YulIdentifier",
                                  "src": "15450:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15450:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15450:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15552:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15563:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15568:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15559:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15559:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15552:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15345:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15353:3:11",
                            "type": ""
                          }
                        ],
                        "src": "15211:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15729:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15739:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15805:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15810:2:11",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15746:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15746:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15739:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15911:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd",
                                  "nodeType": "YulIdentifier",
                                  "src": "15822:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15822:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15822:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15924:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15935:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15940:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15931:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15931:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15924:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15717:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15725:3:11",
                            "type": ""
                          }
                        ],
                        "src": "15583:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16101:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16111:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16177:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16182:2:11",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16118:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16118:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16111:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16283:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7",
                                  "nodeType": "YulIdentifier",
                                  "src": "16194:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16194:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16194:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16296:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16307:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16312:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16303:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16303:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "16296:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16089:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16097:3:11",
                            "type": ""
                          }
                        ],
                        "src": "15955:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16473:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16483:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16549:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16554:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16490:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16490:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16483:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16655:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0",
                                  "nodeType": "YulIdentifier",
                                  "src": "16566:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16566:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16566:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16668:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16679:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16684:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16675:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16675:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "16668:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16461:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16469:3:11",
                            "type": ""
                          }
                        ],
                        "src": "16327:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16845:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16855:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16921:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16926:2:11",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16862:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16862:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16855:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17027:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4",
                                  "nodeType": "YulIdentifier",
                                  "src": "16938:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16938:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16938:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17040:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17051:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17056:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17047:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17047:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "17040:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16833:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16841:3:11",
                            "type": ""
                          }
                        ],
                        "src": "16699:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17217:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17227:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17293:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17298:2:11",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17234:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17234:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17227:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17399:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6",
                                  "nodeType": "YulIdentifier",
                                  "src": "17310:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17310:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17310:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17412:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17423:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17428:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17419:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17419:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "17412:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17205:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "17213:3:11",
                            "type": ""
                          }
                        ],
                        "src": "17071:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17589:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17599:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17665:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17670:2:11",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17606:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17606:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17599:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17771:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278",
                                  "nodeType": "YulIdentifier",
                                  "src": "17682:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17682:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17682:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17784:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17795:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17800:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17791:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17791:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "17784:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17577:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "17585:3:11",
                            "type": ""
                          }
                        ],
                        "src": "17443:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17961:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17971:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18037:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18042:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17978:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17978:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17971:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18143:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                  "nodeType": "YulIdentifier",
                                  "src": "18054:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18054:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18054:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18156:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18167:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18172:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18163:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18163:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "18156:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17949:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "17957:3:11",
                            "type": ""
                          }
                        ],
                        "src": "17815:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18333:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18343:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18409:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18414:2:11",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18350:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18350:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18343:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18515:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079",
                                  "nodeType": "YulIdentifier",
                                  "src": "18426:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18426:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18426:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18528:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18539:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18544:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18535:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18535:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "18528:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18321:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18329:3:11",
                            "type": ""
                          }
                        ],
                        "src": "18187:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18705:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18715:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18781:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18786:2:11",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18722:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18722:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18715:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18887:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09",
                                  "nodeType": "YulIdentifier",
                                  "src": "18798:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18798:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18798:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18900:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18911:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18916:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18907:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18907:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "18900:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18693:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18701:3:11",
                            "type": ""
                          }
                        ],
                        "src": "18559:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19077:220:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19087:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19153:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19158:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19094:58:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19094:67:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19087:3:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19259:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086",
                                  "nodeType": "YulIdentifier",
                                  "src": "19170:88:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19170:93:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19170:93:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19272:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19283:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19288:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19279:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19279:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "19272:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19065:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "19073:3:11",
                            "type": ""
                          }
                        ],
                        "src": "18931:366:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19368:53:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19385:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19408:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "19390:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19390:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19378:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19378:37:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19378:37:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19356:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19363:3:11",
                            "type": ""
                          }
                        ],
                        "src": "19303:118:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19488:51:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19505:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19526:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "19510:15:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19510:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19498:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19498:35:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19498:35:11"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19476:5:11",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19483:3:11",
                            "type": ""
                          }
                        ],
                        "src": "19427:112:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19643:124:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19653:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19665:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19676:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19661:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19661:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19653:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19733:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19746:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19757:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19742:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19742:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19689:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19689:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19689:71:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19615:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19627:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19638:4:11",
                            "type": ""
                          }
                        ],
                        "src": "19545:222:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19899:206:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19909:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19921:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19932:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19917:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19917:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19909:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19989:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20002:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20013:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19998:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19998:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19945:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19945:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19945:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20070:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20083:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20094:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20079:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20079:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20026:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20026:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20026:72:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19863:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "19875:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19883:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19894:4:11",
                            "type": ""
                          }
                        ],
                        "src": "19773:332:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20265:288:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20275:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20287:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20298:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20283:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20283:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20275:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20355:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20368:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20379:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20364:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20364:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20311:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20311:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20311:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20436:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20449:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20460:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20445:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20445:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20392:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20392:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20392:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "20518:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20531:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20542:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20527:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20527:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20474:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20474:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20474:72:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20221:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "20233:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "20241:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20249:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20260:4:11",
                            "type": ""
                          }
                        ],
                        "src": "20111:442:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20713:288:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20723:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20735:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20746:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20731:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20731:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20723:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20803:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20816:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20827:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20812:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20812:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20759:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20759:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20759:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20884:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20897:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20908:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20893:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20893:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20840:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20840:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20840:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "20966:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20979:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20990:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20975:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20975:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20922:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20922:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20922:72:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20669:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "20681:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "20689:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20697:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20708:4:11",
                            "type": ""
                          }
                        ],
                        "src": "20559:442:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21180:304:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21190:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21202:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21213:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21198:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21198:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21190:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21270:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21283:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21294:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21279:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21279:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21226:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21226:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21226:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21318:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21329:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21314:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21314:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21338:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21344:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21334:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21334:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21307:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21307:48:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21307:48:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21364:113:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21463:6:11"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21472:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21372:90:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21372:105:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21364:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_array$_t_address_$dyn_storage__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21144:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "21156:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21164:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21175:4:11",
                            "type": ""
                          }
                        ],
                        "src": "21007:477:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21610:200:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21620:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21632:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21643:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21628:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21628:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21620:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21700:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21713:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21724:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21709:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21709:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21656:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21656:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21656:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21775:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21788:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21799:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21784:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21784:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21737:37:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21737:66:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21737:66:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21574:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "21586:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21594:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21605:4:11",
                            "type": ""
                          }
                        ],
                        "src": "21490:320:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21942:206:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21952:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21964:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21975:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21960:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21960:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21952:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22032:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22045:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22056:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22041:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22041:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21988:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21988:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21988:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22113:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22126:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22137:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22122:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22122:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22069:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22069:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22069:72:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21906:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "21918:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21926:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21937:4:11",
                            "type": ""
                          }
                        ],
                        "src": "21816:332:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22330:365:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22340:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22352:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22363:3:11",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22348:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22348:19:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22340:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22421:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22434:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22445:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22430:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22430:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22377:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22377:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22377:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22502:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22515:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22526:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22511:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22511:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22458:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22458:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22458:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "22584:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22597:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22608:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22593:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22593:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22540:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22540:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22540:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "22660:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22673:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22684:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22669:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22669:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22622:37:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22622:66:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22622:66:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22278:9:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "22290:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "22298:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "22306:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22314:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22325:4:11",
                            "type": ""
                          }
                        ],
                        "src": "22154:541:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22849:225:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22859:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22871:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22882:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22867:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22867:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22859:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22906:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22917:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22902:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22902:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22925:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22931:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22921:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22921:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22895:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22895:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22895:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22951:116:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23053:6:11"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23062:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22959:93:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22959:108:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22951:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22821:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22833:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22844:4:11",
                            "type": ""
                          }
                        ],
                        "src": "22701:373:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23172:118:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23182:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23194:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23205:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23190:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23190:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23182:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23256:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23269:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23280:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23265:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23265:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23218:37:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23218:65:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23218:65:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23144:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23156:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23167:4:11",
                            "type": ""
                          }
                        ],
                        "src": "23080:210:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23392:122:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23402:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23414:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23425:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23410:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23410:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23402:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23480:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23504:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23489:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23489:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23438:41:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23438:69:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23438:69:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23364:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23376:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23387:4:11",
                            "type": ""
                          }
                        ],
                        "src": "23296:218:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23774:604:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23784:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23796:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23807:3:11",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23792:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23792:19:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23784:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23832:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23843:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23828:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23828:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23851:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23857:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23847:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23847:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23821:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23821:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23821:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23877:86:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23949:6:11"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23958:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23885:63:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23885:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23877:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24017:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24030:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24041:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24026:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24026:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23973:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23973:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23973:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "24099:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24112:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24123:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24108:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24108:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24055:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24055:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24055:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "24181:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24194:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24205:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24190:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24190:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24137:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24137:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24137:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "24263:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24276:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24287:3:11",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24272:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24272:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24219:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24219:73:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24219:73:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "24342:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24355:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24366:3:11",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24351:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24351:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24302:39:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24302:69:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24302:69:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23706:9:11",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "23718:6:11",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "23726:6:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "23734:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "23742:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "23750:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23758:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23769:4:11",
                            "type": ""
                          }
                        ],
                        "src": "23520:858:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24555:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24565:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24577:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24588:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24573:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24573:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24565:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24612:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24623:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24608:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24608:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24631:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24637:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "24627:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24627:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24601:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24601:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24601:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24657:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24791:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24665:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24665:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24657:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24535:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24550:4:11",
                            "type": ""
                          }
                        ],
                        "src": "24384:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24980:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24990:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25002:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25013:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24998:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24998:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24990:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25037:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25048:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25033:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25033:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25056:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25062:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25052:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25052:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25026:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25026:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25026:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25082:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25216:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25090:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25090:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25082:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24960:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24975:4:11",
                            "type": ""
                          }
                        ],
                        "src": "24809:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25405:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25415:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25427:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25438:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25423:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25423:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25415:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25462:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25473:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25458:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25458:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25481:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25487:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25477:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25477:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25451:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25451:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25451:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25507:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25641:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25515:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25515:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25507:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25385:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25400:4:11",
                            "type": ""
                          }
                        ],
                        "src": "25234:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25830:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25840:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25852:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25863:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25848:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25848:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25840:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25887:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25898:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25883:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25883:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25906:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25912:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25902:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25902:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25876:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25876:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25876:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25932:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26066:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25940:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25940:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25932:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25810:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25825:4:11",
                            "type": ""
                          }
                        ],
                        "src": "25659:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26255:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26265:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26277:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26288:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26273:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26273:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26265:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26312:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26323:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26308:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26308:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "26331:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26337:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "26327:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26327:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26301:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26301:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26301:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26357:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26491:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26365:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26365:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26357:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26235:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26250:4:11",
                            "type": ""
                          }
                        ],
                        "src": "26084:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26680:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26690:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26702:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26713:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26698:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26698:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26690:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26737:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26748:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26733:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26733:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "26756:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26762:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "26752:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26752:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26726:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26726:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26726:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26782:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26916:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26790:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26790:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26782:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26660:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26675:4:11",
                            "type": ""
                          }
                        ],
                        "src": "26509:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27105:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27115:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27127:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27138:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27123:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27123:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27115:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27162:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27173:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27158:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27158:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "27181:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27187:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "27177:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27177:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27151:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27151:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27151:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27207:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "27341:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27215:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27215:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27207:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27085:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27100:4:11",
                            "type": ""
                          }
                        ],
                        "src": "26934:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27530:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27540:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27552:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27563:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27548:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27548:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27540:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27587:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27598:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27583:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27583:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "27606:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27612:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "27602:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27602:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27576:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27576:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27576:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27632:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "27766:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27640:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27640:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27632:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27510:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27525:4:11",
                            "type": ""
                          }
                        ],
                        "src": "27359:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27955:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27965:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27977:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27988:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27973:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27973:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27965:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28012:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28023:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28008:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28008:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "28031:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28037:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "28027:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28027:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28001:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28001:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28001:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28057:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "28191:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28065:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28065:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28057:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27935:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27950:4:11",
                            "type": ""
                          }
                        ],
                        "src": "27784:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28380:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28390:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28402:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28413:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28398:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28398:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28390:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28437:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28448:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28433:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28433:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "28456:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28462:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "28452:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28452:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28426:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28426:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28426:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28482:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "28616:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28490:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28490:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28482:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "28360:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "28375:4:11",
                            "type": ""
                          }
                        ],
                        "src": "28209:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28805:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28823:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28862:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28873:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28858:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28858:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "28881:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28887:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "28877:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28877:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28851:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28851:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28851:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28907:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "29041:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28915:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28915:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28907:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "28785:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "28800:4:11",
                            "type": ""
                          }
                        ],
                        "src": "28634:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29230:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29240:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "29252:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29263:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29248:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29248:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "29240:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29287:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29298:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29283:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29283:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "29306:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29312:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "29302:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29302:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29276:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29276:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29276:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29332:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "29466:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29340:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29340:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "29332:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "29210:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "29225:4:11",
                            "type": ""
                          }
                        ],
                        "src": "29059:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29655:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29665:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "29677:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29688:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29673:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29673:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "29665:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29712:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29723:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29708:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29708:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "29731:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29737:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "29727:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29727:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29701:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29701:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29701:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29757:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "29891:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29765:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29765:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "29757:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "29635:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "29650:4:11",
                            "type": ""
                          }
                        ],
                        "src": "29484:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30080:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30090:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "30102:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30113:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30098:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30098:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30090:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30137:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30148:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30133:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30133:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "30156:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30162:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "30152:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30152:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30126:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30126:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30126:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30182:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "30316:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30190:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30190:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30182:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "30060:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "30075:4:11",
                            "type": ""
                          }
                        ],
                        "src": "29909:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30505:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30515:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "30527:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30538:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30523:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30523:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30515:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30562:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30573:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30558:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30558:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "30581:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30587:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "30577:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30577:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30551:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30551:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30551:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30607:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "30741:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30615:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30615:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30607:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "30485:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "30500:4:11",
                            "type": ""
                          }
                        ],
                        "src": "30334:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30930:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30940:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "30952:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30963:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30948:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30948:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30940:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30987:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30998:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30983:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30983:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "31006:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31012:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "31002:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31002:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30976:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30976:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30976:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31032:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "31166:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "31040:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31040:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31032:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "30910:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "30925:4:11",
                            "type": ""
                          }
                        ],
                        "src": "30759:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31355:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31365:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "31377:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31388:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31373:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31373:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31365:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31412:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "31423:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "31408:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31408:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "31431:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31437:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "31427:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31427:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "31401:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31401:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31401:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31457:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "31591:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "31465:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31465:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31457:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "31335:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "31350:4:11",
                            "type": ""
                          }
                        ],
                        "src": "31184:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31780:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31790:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "31802:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31813:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31798:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31798:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31790:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31837:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "31848:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "31833:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31833:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "31856:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31862:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "31852:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31852:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "31826:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31826:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31826:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31882:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "32016:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "31890:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31890:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31882:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "31760:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "31775:4:11",
                            "type": ""
                          }
                        ],
                        "src": "31609:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32205:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32215:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "32227:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32238:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32223:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32223:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32215:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32262:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32273:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32258:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32258:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "32281:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32287:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "32277:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32277:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "32251:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32251:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32251:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32307:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "32441:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32315:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32315:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32307:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "32185:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "32200:4:11",
                            "type": ""
                          }
                        ],
                        "src": "32034:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32630:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32640:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "32652:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32663:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32648:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32648:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32640:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32687:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32698:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32683:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32683:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "32706:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32712:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "32702:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32702:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "32676:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32676:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32676:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32732:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "32866:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32740:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32740:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32732:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "32610:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "32625:4:11",
                            "type": ""
                          }
                        ],
                        "src": "32459:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33055:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33065:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "33077:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33088:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33073:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33073:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33065:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33112:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33123:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33108:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33108:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "33131:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33137:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "33127:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33127:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "33101:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33101:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33101:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "33157:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "33291:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33165:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33165:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33157:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "33035:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "33050:4:11",
                            "type": ""
                          }
                        ],
                        "src": "32884:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33480:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33490:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "33502:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33513:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33498:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33498:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33490:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33537:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33548:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33533:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33533:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "33556:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33562:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "33552:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33552:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "33526:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33526:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33526:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "33582:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "33716:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33590:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33590:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33582:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "33460:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "33475:4:11",
                            "type": ""
                          }
                        ],
                        "src": "33309:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33905:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33915:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "33927:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33938:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33923:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33923:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33915:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33962:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33973:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33958:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33958:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "33981:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33987:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "33977:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33977:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "33951:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33951:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33951:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "34007:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "34141:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34015:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34015:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34007:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "33885:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "33900:4:11",
                            "type": ""
                          }
                        ],
                        "src": "33734:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34330:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34340:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "34352:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34363:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34348:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34348:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34340:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34387:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34398:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34383:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34383:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "34406:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34412:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "34402:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34402:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "34376:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34376:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34376:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "34432:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "34566:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34440:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34440:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34432:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "34310:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "34325:4:11",
                            "type": ""
                          }
                        ],
                        "src": "34159:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34755:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34765:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "34777:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34788:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34773:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34773:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34765:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34812:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34823:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34808:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34808:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "34831:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34837:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "34827:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34827:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "34801:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34801:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34801:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "34857:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "34991:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34865:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34865:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34857:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "34735:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "34750:4:11",
                            "type": ""
                          }
                        ],
                        "src": "34584:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35180:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35190:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "35202:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35213:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35198:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35198:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35190:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35237:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35248:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35233:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35233:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "35256:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35262:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "35252:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35252:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35226:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35226:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35226:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35282:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "35416:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35290:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35290:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35282:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "35160:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "35175:4:11",
                            "type": ""
                          }
                        ],
                        "src": "35009:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35605:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35615:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "35627:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35638:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35623:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35623:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35615:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35662:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35673:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35658:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35658:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "35681:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35687:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "35677:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35677:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35651:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35651:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35651:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35707:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "35841:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35715:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35715:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35707:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "35585:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "35600:4:11",
                            "type": ""
                          }
                        ],
                        "src": "35434:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36030:248:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36040:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "36052:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36063:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "36048:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36048:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36040:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36087:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36098:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36083:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36083:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "36106:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36112:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "36102:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36102:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36076:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36076:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36076:47:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "36132:139:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "36266:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36140:124:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36140:131:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36132:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "36010:9:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "36025:4:11",
                            "type": ""
                          }
                        ],
                        "src": "35859:419:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36382:124:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36392:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "36404:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36415:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "36400:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36400:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36392:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "36472:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36485:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36496:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36481:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36481:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36428:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36428:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36428:71:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "36354:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "36366:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "36377:4:11",
                            "type": ""
                          }
                        ],
                        "src": "36284:222:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36654:222:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36664:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "36676:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36687:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "36672:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36672:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36664:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "36744:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36757:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36768:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36753:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36753:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36700:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36700:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36700:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "36841:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36854:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36865:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36850:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36850:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_ProposalStatus_$503_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36781:59:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36781:88:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36781:88:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_enum$_ProposalStatus_$503__to_t_uint256_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "36618:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "36630:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "36638:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "36649:4:11",
                            "type": ""
                          }
                        ],
                        "src": "36512:364:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37084:442:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "37094:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "37106:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "37117:3:11",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "37102:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37102:19:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "37094:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "37175:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37188:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37199:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37184:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37184:17:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "37131:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37131:71:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37131:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37223:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37234:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37219:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37219:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "37243:4:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37249:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "37239:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37239:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37212:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37212:48:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37212:48:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "37269:86:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "37341:6:11"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "37350:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "37277:63:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37277:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "37269:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "37409:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37422:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37433:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37418:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37418:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "37365:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37365:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37365:72:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "37491:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37504:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37515:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37500:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37500:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "37447:43:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37447:72:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37447:72:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "37032:9:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "37044:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "37052:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "37060:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "37068:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "37079:4:11",
                            "type": ""
                          }
                        ],
                        "src": "36882:644:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37573:88:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "37583:30:11",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "37593:18:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37593:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "37583:6:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "37642:6:11"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "37650:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "37622:19:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37622:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37622:33:11"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "37557:4:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37566:6:11",
                            "type": ""
                          }
                        ],
                        "src": "37532:129:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37707:35:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "37717:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "37733:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "37727:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37727:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "37717:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37700:6:11",
                            "type": ""
                          }
                        ],
                        "src": "37667:75:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37814:241:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "37919:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "37921:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "37921:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "37921:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "37891:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "37899:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "37888:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37888:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "37885:2:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "37951:37:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "37981:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "37959:21:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37959:29:11"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "37951:4:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38025:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "38037:4:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38043:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38033:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38033:15:11"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "38025:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "37798:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "37809:4:11",
                            "type": ""
                          }
                        ],
                        "src": "37748:307:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38128:241:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "38233:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "38235:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "38235:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "38235:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "38205:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38213:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "38202:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38202:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "38199:2:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38265:37:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "38295:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "38273:21:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38273:29:11"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "38265:4:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38339:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "38351:4:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38357:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38347:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38347:15:11"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "38339:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "38112:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "38123:4:11",
                            "type": ""
                          }
                        ],
                        "src": "38061:308:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38447:60:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38457:11:11",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "38465:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "38457:4:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38478:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "38490:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38495:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38486:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38486:14:11"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "38478:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "38434:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "38442:4:11",
                            "type": ""
                          }
                        ],
                        "src": "38375:132:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38582:87:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38592:11:11",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "38600:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "38592:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38620:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "38623:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38613:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38613:14:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38613:14:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38636:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38654:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38657:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "38644:9:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38644:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "38636:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "38569:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "38577:4:11",
                            "type": ""
                          }
                        ],
                        "src": "38513:156:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38749:40:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38760:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "38776:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "38770:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38770:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "38760:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "38732:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "38742:6:11",
                            "type": ""
                          }
                        ],
                        "src": "38675:114:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38866:40:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38877:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "38893:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "38887:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38887:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "38877:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "38849:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "38859:6:11",
                            "type": ""
                          }
                        ],
                        "src": "38795:111:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38971:40:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38982:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "38998:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "38992:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38992:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "38982:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "38954:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "38964:6:11",
                            "type": ""
                          }
                        ],
                        "src": "38912:99:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39092:38:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "39102:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "39114:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "39119:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39110:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39110:14:11"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "39102:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "39079:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "39087:4:11",
                            "type": ""
                          }
                        ],
                        "src": "39017:113:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39208:38:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "39218:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "39230:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "39235:4:11",
                                    "type": "",
                                    "value": "0x01"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39226:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39226:14:11"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "39218:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "39195:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "39203:4:11",
                            "type": ""
                          }
                        ],
                        "src": "39136:110:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39363:73:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "39380:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "39385:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "39373:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39373:19:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "39373:19:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "39401:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "39420:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "39425:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39416:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39416:14:11"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "39401:11:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "39335:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "39340:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "39351:11:11",
                            "type": ""
                          }
                        ],
                        "src": "39252:184:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39538:73:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "39555:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "39560:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "39548:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39548:19:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "39548:19:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "39576:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "39595:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "39600:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39591:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39591:14:11"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "39576:11:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "39510:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "39515:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "39526:11:11",
                            "type": ""
                          }
                        ],
                        "src": "39442:169:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39661:261:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "39671:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "39694:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "39676:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39676:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "39671:1:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "39705:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "39728:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "39710:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39710:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "39705:1:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39868:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "39870:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39870:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39870:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "39789:1:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "39796:66:11",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "39864:1:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "39792:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39792:74:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "39786:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39786:81:11"
                              },
                              "nodeType": "YulIf",
                              "src": "39783:2:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "39900:16:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "39911:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "39914:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39907:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39907:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "39900:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "39648:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "39651:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "39657:3:11",
                            "type": ""
                          }
                        ],
                        "src": "39617:305:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39986:81:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "39996:65:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "40011:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40018:42:11",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "40007:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40007:54:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "39996:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39968:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "39978:7:11",
                            "type": ""
                          }
                        ],
                        "src": "39928:139:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40118:51:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40128:35:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "40157:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "40139:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40139:24:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40128:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40100:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40110:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40073:96:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40217:48:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40227:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "40252:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "40245:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "40245:13:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "40238:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40238:21:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40227:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40199:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40209:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40175:90:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40315:105:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40325:89:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "40340:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40347:66:11",
                                    "type": "",
                                    "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "40336:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40336:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40325:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40297:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40307:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40271:149:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40489:84:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40499:16:11",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "40510:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40499:7:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "40561:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_ProposalStatus_$503",
                                  "nodeType": "YulIdentifier",
                                  "src": "40516:44:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40516:51:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "40516:51:11"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_ProposalStatus_$503",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40471:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40481:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40426:147:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40624:81:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40634:65:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "40649:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40656:42:11",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "40645:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40645:54:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40634:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40606:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40616:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40579:126:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40756:32:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40766:16:11",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "40777:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40766:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40738:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40748:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40711:77:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40837:43:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40847:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "40862:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40869:4:11",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "40858:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40858:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "40847:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40819:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "40829:7:11",
                            "type": ""
                          }
                        ],
                        "src": "40794:86:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40962:71:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40972:55:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "41021:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_ProposalStatus_$503",
                                  "nodeType": "YulIdentifier",
                                  "src": "40985:35:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40985:42:11"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "40972:9:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_ProposalStatus_$503_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "40942:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "40952:9:11",
                            "type": ""
                          }
                        ],
                        "src": "40886:147:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "41090:103:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "41113:3:11"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "41118:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "41123:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "41100:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41100:30:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "41100:30:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "41171:3:11"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "41176:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "41167:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41167:16:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41185:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "41160:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41160:27:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "41160:27:11"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "41072:3:11",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "41077:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "41082:6:11",
                            "type": ""
                          }
                        ],
                        "src": "41039:154:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "41248:258:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "41258:10:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "41267:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "41262:1:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "41327:63:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "41352:3:11"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "41357:1:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "41348:3:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "41348:11:11"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "41371:3:11"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "41376:1:11"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "41367:3:11"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "41367:11:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "41361:5:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "41361:18:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "41341:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "41341:39:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "41341:39:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "41288:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "41291:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "41285:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41285:13:11"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "41299:19:11",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "41301:15:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "41310:1:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "41313:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "41306:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "41306:10:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "41301:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "41281:3:11",
                                "statements": []
                              },
                              "src": "41277:113:11"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "41424:76:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "41474:3:11"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "41479:6:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "41470:3:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "41470:16:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "41488:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "41463:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "41463:27:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "41463:27:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "41405:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "41408:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "41402:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41402:13:11"
                              },
                              "nodeType": "YulIf",
                              "src": "41399:2:11"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "41230:3:11",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "41235:3:11",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "41240:6:11",
                            "type": ""
                          }
                        ],
                        "src": "41199:307:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "41563:269:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "41573:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "41587:4:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41593:1:11",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "41583:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41583:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "41573:6:11"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "41604:38:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "41634:4:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41640:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "41630:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41630:12:11"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "41608:18:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "41681:51:11",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "41695:27:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "41709:6:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "41717:4:11",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "41705:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "41705:17:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "41695:6:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "41661:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "41654:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41654:26:11"
                              },
                              "nodeType": "YulIf",
                              "src": "41651:2:11"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "41784:42:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x22",
                                        "nodeType": "YulIdentifier",
                                        "src": "41798:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "41798:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "41798:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "41748:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "41771:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "41779:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "41768:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41768:14:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "41745:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41745:38:11"
                              },
                              "nodeType": "YulIf",
                              "src": "41742:2:11"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "41547:4:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "41556:6:11",
                            "type": ""
                          }
                        ],
                        "src": "41512:320:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "41913:91:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "41923:75:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "41986:10:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "41963:22:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41963:34:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "41932:30:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41932:66:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "41923:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "41892:10:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "41907:5:11",
                            "type": ""
                          }
                        ],
                        "src": "41838:166:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42053:238:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "42063:58:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "42085:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "42115:4:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "42093:21:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42093:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "42081:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42081:40:11"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "42067:10:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "42232:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "42234:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "42234:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "42234:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "42175:10:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "42187:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "42172:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42172:34:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "42211:10:11"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "42223:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "42208:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42208:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "42169:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42169:62:11"
                              },
                              "nodeType": "YulIf",
                              "src": "42166:2:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42270:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "42274:10:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42263:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42263:22:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42263:22:11"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "42039:6:11",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "42047:4:11",
                            "type": ""
                          }
                        ],
                        "src": "42010:281:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42340:190:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "42350:33:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "42377:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "42359:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42359:24:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "42350:5:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "42473:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "42475:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "42475:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "42475:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "42398:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42405:66:11",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "42395:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42395:77:11"
                              },
                              "nodeType": "YulIf",
                              "src": "42392:2:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "42504:20:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "42515:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42522:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "42511:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42511:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "42504:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "42326:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "42336:3:11",
                            "type": ""
                          }
                        ],
                        "src": "42297:233:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42564:152:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42581:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42584:77:11",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42574:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42574:88:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42574:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42678:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42681:4:11",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42671:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42671:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42671:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42702:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42705:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "42695:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42695:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42695:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "42536:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42750:152:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42767:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42770:77:11",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42760:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42760:88:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42760:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42864:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42867:4:11",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42857:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42857:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42857:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42888:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42891:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "42881:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42881:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42881:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "42722:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42936:152:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42953:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42956:77:11",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42946:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42946:88:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42946:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43050:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43053:4:11",
                                    "type": "",
                                    "value": "0x22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "43043:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43043:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43043:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43074:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43077:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "43067:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43067:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43067:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x22",
                        "nodeType": "YulFunctionDefinition",
                        "src": "42908:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43122:152:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43139:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43142:77:11",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "43132:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43132:88:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43132:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43236:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43239:4:11",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "43229:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43229:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43229:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43260:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43263:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "43253:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43253:15:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43253:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "43094:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43341:83:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "43351:66:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "43411:4:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "43405:5:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43405:11:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_from_storage_value_offset_0t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "43360:44:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43360:57:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "43351:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "read_from_storage_offset_0_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "43326:4:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "43335:5:11",
                            "type": ""
                          }
                        ],
                        "src": "43280:144:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43478:54:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "43488:38:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "43506:5:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43513:2:11",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43502:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43502:14:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43522:2:11",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "43518:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43518:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "43498:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43498:28:11"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "43488:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "43461:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "43471:6:11",
                            "type": ""
                          }
                        ],
                        "src": "43430:102:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43589:51:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "43599:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43624:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "43627:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "43620:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43620:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "43599:8:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_0_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "43570:5:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "43580:8:11",
                            "type": ""
                          }
                        ],
                        "src": "43538:102:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43752:66:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "43774:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43782:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43770:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43770:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "43786:24:11",
                                    "type": "",
                                    "value": "Still in voting period"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "43763:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43763:48:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43763:48:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "43744:6:11",
                            "type": ""
                          }
                        ],
                        "src": "43646:172:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43930:66:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "43952:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43960:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43948:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43948:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "43964:24:11",
                                    "type": "",
                                    "value": "Proposal doesn't exist"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "43941:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43941:48:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43941:48:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "43922:6:11",
                            "type": ""
                          }
                        ],
                        "src": "43824:172:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44108:65:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44130:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44138:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44126:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44126:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "44142:23:11",
                                    "type": "",
                                    "value": "ERC20 transfer failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44119:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44119:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44119:47:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "44100:6:11",
                            "type": ""
                          }
                        ],
                        "src": "44002:171:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44285:62:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44307:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44315:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44303:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44303:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "44319:20:11",
                                    "type": "",
                                    "value": "Proposal cancelled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44296:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44296:44:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44296:44:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "44277:6:11",
                            "type": ""
                          }
                        ],
                        "src": "44179:168:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44459:119:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44481:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44489:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44477:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44477:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "44493:34:11",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44470:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44470:58:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44470:58:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44549:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44557:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44545:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44545:15:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "44562:8:11",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44538:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44538:33:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44538:33:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "44451:6:11",
                            "type": ""
                          }
                        ],
                        "src": "44353:225:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44690:70:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44712:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44720:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44708:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44708:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "44724:28:11",
                                    "type": "",
                                    "value": "Proposal already cancelled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44701:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44701:52:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44701:52:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "44682:6:11",
                            "type": ""
                          }
                        ],
                        "src": "44584:176:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44872:69:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "44894:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "44902:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "44890:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44890:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "44906:27:11",
                                    "type": "",
                                    "value": "Proposal already resolved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "44883:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44883:51:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "44883:51:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "44864:6:11",
                            "type": ""
                          }
                        ],
                        "src": "44766:175:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45053:75:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45075:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45083:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45071:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45071:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "45087:33:11",
                                    "type": "",
                                    "value": "createProposal: token lock fail"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45064:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45064:57:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45064:57:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "45045:6:11",
                            "type": ""
                          }
                        ],
                        "src": "44947:181:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45240:63:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45262:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45270:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45258:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45258:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "45274:21:11",
                                    "type": "",
                                    "value": "Can't mint 0 tokens"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45251:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45251:45:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45251:45:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "45232:6:11",
                            "type": ""
                          }
                        ],
                        "src": "45134:169:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45415:71:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45437:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45445:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45433:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45433:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "45449:29:11",
                                    "type": "",
                                    "value": "votes needed > token supply"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45426:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45426:53:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45426:53:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "45407:6:11",
                            "type": ""
                          }
                        ],
                        "src": "45309:177:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45598:62:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45620:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45628:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45616:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45616:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "45632:20:11",
                                    "type": "",
                                    "value": "quorum cannot be 0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45609:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45609:44:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45609:44:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "45590:6:11",
                            "type": ""
                          }
                        ],
                        "src": "45492:168:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45772:74:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45794:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45802:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45790:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45790:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "45806:32:11",
                                    "type": "",
                                    "value": "Proposal not in VOTES_FINISHED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45783:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45783:56:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45783:56:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "45764:6:11",
                            "type": ""
                          }
                        ],
                        "src": "45666:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45958:75:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45980:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45988:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "45976:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45976:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "45992:33:11",
                                    "type": "",
                                    "value": "transfer tokens before shutdown"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45969:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45969:57:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45969:57:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "45950:6:11",
                            "type": ""
                          }
                        ],
                        "src": "45852:181:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46145:73:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46167:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46175:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "46163:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46163:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "46179:31:11",
                                    "type": "",
                                    "value": "Proposal must be after voting"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "46156:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46156:55:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "46156:55:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "46137:6:11",
                            "type": ""
                          }
                        ],
                        "src": "46039:179:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46330:76:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46352:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46360:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "46348:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46348:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "46364:34:11",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "46341:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46341:58:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "46341:58:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "46322:6:11",
                            "type": ""
                          }
                        ],
                        "src": "46224:182:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46518:65:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46540:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46548:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "46536:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46536:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "46552:23:11",
                                    "type": "",
                                    "value": "vote: token lock fail"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "46529:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46529:47:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "46529:47:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "46510:6:11",
                            "type": ""
                          }
                        ],
                        "src": "46412:171:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46695:75:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46717:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46725:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "46713:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46713:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "46729:33:11",
                                    "type": "",
                                    "value": "duration must be >30850 <190000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "46706:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46706:57:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "46706:57:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "46687:6:11",
                            "type": ""
                          }
                        ],
                        "src": "46589:181:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46882:71:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "46904:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46912:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "46900:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46900:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "46916:29:11",
                                    "type": "",
                                    "value": "Too early to move to voting"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "46893:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46893:53:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "46893:53:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "46874:6:11",
                            "type": ""
                          }
                        ],
                        "src": "46776:177:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47065:73:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47087:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "47095:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "47083:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47083:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "47099:31:11",
                                    "type": "",
                                    "value": "must stake to create proposal"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47076:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47076:55:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47076:55:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "47057:6:11",
                            "type": ""
                          }
                        ],
                        "src": "46959:179:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47250:63:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47272:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "47280:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "47268:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47268:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "47284:21:11",
                                    "type": "",
                                    "value": "NFT transfer failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47261:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47261:45:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47261:45:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "47242:6:11",
                            "type": ""
                          }
                        ],
                        "src": "47144:169:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47425:75:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47447:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "47455:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "47443:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47443:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "47459:33:11",
                                    "type": "",
                                    "value": "cannot be called after shutdown"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47436:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47436:57:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47436:57:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "47417:6:11",
                            "type": ""
                          }
                        ],
                        "src": "47319:181:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47612:73:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47634:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "47642:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "47630:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47630:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "47646:31:11",
                                    "type": "",
                                    "value": "Can't cancel if vote finished"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47623:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47623:55:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47623:55:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "47604:6:11",
                            "type": ""
                          }
                        ],
                        "src": "47506:179:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47797:74:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47819:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "47827:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "47815:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47815:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "47831:32:11",
                                    "type": "",
                                    "value": "Proposal failed to meet quorum"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47808:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47808:56:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47808:56:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "47789:6:11",
                            "type": ""
                          }
                        ],
                        "src": "47691:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47983:62:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48005:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48013:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "48001:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48001:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "48017:20:11",
                                    "type": "",
                                    "value": "must stake to vote"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47994:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47994:44:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47994:44:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "47975:6:11",
                            "type": ""
                          }
                        ],
                        "src": "47877:168:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48157:75:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48179:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48187:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "48175:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48175:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "48191:33:11",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "48168:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48168:57:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "48168:57:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "48149:6:11",
                            "type": ""
                          }
                        ],
                        "src": "48051:181:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48344:74:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48366:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48374:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "48362:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48362:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "48378:32:11",
                                    "type": "",
                                    "value": "Proposal already failed quorum"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "48355:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48355:56:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "48355:56:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "48336:6:11",
                            "type": ""
                          }
                        ],
                        "src": "48238:180:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48530:73:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48552:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48560:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "48548:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48548:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "48564:31:11",
                                    "type": "",
                                    "value": "Proposal not in voting period"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "48541:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48541:55:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "48541:55:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "48522:6:11",
                            "type": ""
                          }
                        ],
                        "src": "48424:179:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48715:75:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48737:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48745:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "48733:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48733:14:11"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "48749:33:11",
                                    "type": "",
                                    "value": "Already voted from this address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "48726:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48726:57:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "48726:57:11"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "48707:6:11",
                            "type": ""
                          }
                        ],
                        "src": "48609:181:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48857:62:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "48891:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "48893:16:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "48893:18:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "48893:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "48880:5:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48887:1:11",
                                        "type": "",
                                        "value": "6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "48877:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48877:12:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "48870:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48870:20:11"
                              },
                              "nodeType": "YulIf",
                              "src": "48867:2:11"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_ProposalStatus_$503",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48850:5:11",
                            "type": ""
                          }
                        ],
                        "src": "48796:123:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48968:79:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "49025:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "49034:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "49037:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "49027:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "49027:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "49027:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "48991:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "49016:5:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "48998:17:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48998:24:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "48988:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48988:35:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "48981:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48981:43:11"
                              },
                              "nodeType": "YulIf",
                              "src": "48978:2:11"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48961:5:11",
                            "type": ""
                          }
                        ],
                        "src": "48925:122:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49093:76:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "49147:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "49156:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "49159:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "49149:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "49149:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "49149:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "49116:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "49138:5:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "49123:14:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "49123:21:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "49113:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "49113:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "49106:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49106:40:11"
                              },
                              "nodeType": "YulIf",
                              "src": "49103:2:11"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49086:5:11",
                            "type": ""
                          }
                        ],
                        "src": "49053:116:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49218:79:11",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "49275:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "49284:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "49287:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "49277:6:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "49277:12:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "49277:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "49241:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "49266:5:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "49248:17:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "49248:24:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "49238:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "49238:35:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "49231:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49231:43:11"
                              },
                              "nodeType": "YulIf",
                              "src": "49228:2:11"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49211:5:11",
                            "type": ""
                          }
                        ],
                        "src": "49175:122:11"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := read_from_storage_offset_0_t_address(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_enum$_ProposalStatus_$503_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ProposalStatus_$503_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_address_$dyn_storage__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_ProposalStatus_$503__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_ProposalStatus_$503_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_from_storage_t_address(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_enum$_ProposalStatus_$503(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ProposalStatus_$503(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_enum$_ProposalStatus_$503_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ProposalStatus_$503(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function extract_from_storage_value_offset_0t_address(slot_value) -> value {\n        value := cleanup_from_storage_t_address(shift_right_0_unsigned(slot_value))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function read_from_storage_offset_0_t_address(slot) -> value {\n        value := extract_from_storage_value_offset_0t_address(sload(slot))\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function store_literal_in_memory_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Still in voting period\")\n\n    }\n\n    function store_literal_in_memory_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal doesn't exist\")\n\n    }\n\n    function store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 transfer failed\")\n\n    }\n\n    function store_literal_in_memory_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal cancelled\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal already cancelled\")\n\n    }\n\n    function store_literal_in_memory_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal already resolved\")\n\n    }\n\n    function store_literal_in_memory_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1(memPtr) {\n\n        mstore(add(memPtr, 0), \"createProposal: token lock fail\")\n\n    }\n\n    function store_literal_in_memory_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't mint 0 tokens\")\n\n    }\n\n    function store_literal_in_memory_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e(memPtr) {\n\n        mstore(add(memPtr, 0), \"votes needed > token supply\")\n\n    }\n\n    function store_literal_in_memory_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682(memPtr) {\n\n        mstore(add(memPtr, 0), \"quorum cannot be 0\")\n\n    }\n\n    function store_literal_in_memory_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal not in VOTES_FINISHED\")\n\n    }\n\n    function store_literal_in_memory_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer tokens before shutdown\")\n\n    }\n\n    function store_literal_in_memory_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal must be after voting\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c(memPtr) {\n\n        mstore(add(memPtr, 0), \"vote: token lock fail\")\n\n    }\n\n    function store_literal_in_memory_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd(memPtr) {\n\n        mstore(add(memPtr, 0), \"duration must be >30850 <190000\")\n\n    }\n\n    function store_literal_in_memory_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too early to move to voting\")\n\n    }\n\n    function store_literal_in_memory_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"must stake to create proposal\")\n\n    }\n\n    function store_literal_in_memory_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT transfer failed\")\n\n    }\n\n    function store_literal_in_memory_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot be called after shutdown\")\n\n    }\n\n    function store_literal_in_memory_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't cancel if vote finished\")\n\n    }\n\n    function store_literal_in_memory_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal failed to meet quorum\")\n\n    }\n\n    function store_literal_in_memory_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278(memPtr) {\n\n        mstore(add(memPtr, 0), \"must stake to vote\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function store_literal_in_memory_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal already failed quorum\")\n\n    }\n\n    function store_literal_in_memory_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal not in voting period\")\n\n    }\n\n    function store_literal_in_memory_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already voted from this address\")\n\n    }\n\n    function validator_assert_t_enum$_ProposalStatus_$503(value) {\n        if iszero(lt(value, 6)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101fa5760003560e01c8063a438d2081161011a578063c5089dc0116100ad578063e82368ab1161007c578063e82368ab1461055a578063ee8bcce614610576578063f2fde38b14610592578063f4e0d9ac146105ae578063f91f88f7146105ca576101fa565b8063c5089dc0146104e6578063c851ed6c14610504578063c9d27afe14610520578063da35c6641461053c576101fa565b8063b426d991116100e9578063b426d99114610472578063b6a6d1771461048e578063b8c62ab8146104ac578063bf86d690146104c8576101fa565b8063a438d208146103ea578063a6f0f7c714610408578063ae77a70814610424578063b1724b4614610454576101fa565b806349c2a1a6116101925780636e768530116101615780636e7685301461036f578063715018a6146103a45780638337f8da146103ae5780638da5cb5b146103cc576101fa565b806349c2a1a6146102eb5780635bcfadb5146103075780635c19a95c1461032357806369e9cae11461033f576101fa565b806319cd0575116101ce57806319cd0575146102875780633403c2fc146102a55780633aac5ada146102af578063441a39f3146102cd576101fa565b806276796e146101ff5780630e9ed68b1461021b57806311ced45c14610239578063150b7a0214610257575b600080fd5b61021960048036038101906102149190614a27565b6105fa565b005b610223610708565b6040516102309190615006565b60405180910390f35b610241610732565b60405161024e9190615006565b60405180910390f35b610271600480360381019061026c9190614906565b61075c565b60405161027e91906151bc565b60405180910390f35b61028f610944565b60405161029c91906155bf565b60405180910390f35b6102ad61094e565b005b6102b7611024565b6040516102c491906155bf565b60405180910390f35b6102d561102a565b6040516102e291906155bf565b60405180910390f35b610305600480360381019061030091906149e6565b6110dc565b005b610321600480360381019061031c9190614a27565b611511565b005b61033d60048036038101906103389190614865565b61161f565b005b610359600480360381019061035491906148b7565b611622565b60405161036691906151a1565b60405180910390f35b61038960048036038101906103849190614a27565b611a5b565b60405161039b969594939291906151d7565b60405180910390f35b6103ac611c19565b005b6103b6611d53565b6040516103c391906155bf565b60405180910390f35b6103d4611d59565b6040516103e19190615006565b60405180910390f35b6103f2611d82565b6040516103ff91906155bf565b60405180910390f35b610422600480360381019061041d9190614a27565b611d88565b005b61043e60048036038101906104399190614981565b611f29565b60405161044b91906151a1565b60405180910390f35b61045c612131565b60405161046991906155bf565b60405180910390f35b61048c60048036038101906104879190614a27565b612138565b005b610496612646565b6040516104a391906155bf565b60405180910390f35b6104c660048036038101906104c19190614a27565b61264b565b005b6104d06128d4565b6040516104dd91906151a1565b60405180910390f35b6104ee6128eb565b6040516104fb919061517f565b60405180910390f35b61051e60048036038101906105199190614a27565b612979565b005b61053a60048036038101906105359190614a79565b613405565b005b610544613ad8565b60405161055191906155bf565b60405180910390f35b610574600480360381019061056f9190614865565b613ade565b005b610590600480360381019061058b9190614a27565b613cdd565b005b6105ac60048036038101906105a79190614865565b613ed7565b005b6105c860048036038101906105c39190614865565b614080565b005b6105e460048036038101906105df9190614a27565b61427f565b6040516105f191906151a1565b60405180910390f35b610602614658565b73ffffffffffffffffffffffffffffffffffffffff16610620611d59565b73ffffffffffffffffffffffffffffffffffffffff1614610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d906153ff565b60405180910390fd5b60058111801561068857506202e63081105b6106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be9061543f565b60405180910390fd5b80600b819055507fbb3349c4ee7b53daeca1d3dc1890a839f0a436f8856eafd80f6e8e64bfd31510816040516106fd91906155bf565b60405180910390a150565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600a60149054906101000a900460ff16156107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a5906154bf565b60405180910390fd5b6000805b60088054905081101561087a576107c7614658565b73ffffffffffffffffffffffffffffffffffffffff1660088281548110610817577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610867576001915061087a565b808061087290615933565b9150506107b2565b50806108eb57600861088a614658565b9080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b7ff45de2a4efbdd3cb1d3639c28f1798f2e4c60ff4cd9031fd2097ef76aebc1536610914614658565b878660405161092593929190615081565b60405180910390a161093986868686614660565b915050949350505050565b6000600554905090565b610956614658565b73ffffffffffffffffffffffffffffffffffffffff16610974611d59565b73ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c1906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a11906154bf565b60405180910390fd5b60026001541415610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a579061553f565b60405180910390fd5b60026001819055506000610a7261102a565b14610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa9906153bf565b60405180910390fd5b6000600190505b6004548111610cb75760036005811115610afc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff166005811115610b58577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14158015610bf95750600580811115610b9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff166005811115610bf6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15610ca45760046002600083815260200190815260200160002060050160006101000a81548160ff02191690836005811115610c5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f1a6358448aae66517d334e312b05813a9f76fcead925effea60aca8b4f0dca04610c8c614658565b82604051610c9b929190615111565b60405180910390a15b8080610caf90615933565b915050610ab9565b50600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ae58af610cfe614658565b6040518263ffffffff1660e01b8152600401610d1a9190615006565b600060405180830381600087803b158015610d3457600080fd5b505af1158015610d48573d6000803e3d6000fd5b5050505060005b600880549050811015610f7e57600073ffffffffffffffffffffffffffffffffffffffff1660088281548110610dae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f6b57600060088281548110610e30577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663e985e9c530610e82611d59565b6040518363ffffffff1660e01b8152600401610e9f929190615021565b60206040518083038186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef91906149bd565b610f69578073ffffffffffffffffffffffffffffffffffffffff1663a22cb465610f17611d59565b60016040518363ffffffff1660e01b8152600401610f369291906150e8565b600060405180830381600087803b158015610f5057600080fd5b505af1158015610f64573d6000803e3d6000fd5b505050505b505b8080610f7690615933565b915050610d4f565b507f69692121b4c0a67f297222fe92d86727bc02df6768ff7be877e607e960dc2df3610fa8614658565b6008604051610fb89291906150b8565b60405180910390a16001600a60146101000a81548160ff0219169083151502179055507f077382e0341a6d8666d1f8ed15b8c933a01f5c1a3e6c5229e2db8c5dc1c06ae1611004614658565b43604051611013929190615111565b60405180910390a160018081905550565b60055481565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110879190615006565b60206040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190614a50565b905090565b600a60149054906101000a900460ff161561112c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611123906154bf565b60405180910390fd5b60026001541415611172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111699061553f565b60405180910390fd5b60026001819055506000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a02a42d6111c2614658565b6040518263ffffffff1660e01b81526004016111de9190615006565b60206040518083038186803b1580156111f657600080fd5b505afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190614a50565b1161126e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112659061547f565b60405180910390fd5b6000600b544361127e9190615758565b90506000600c54826112909190615758565b905060006040518060c001604052808581526020016000815260200160008152602001848152602001838152602001600060058111156112f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152509050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c591aa98611344614658565b83608001516040518363ffffffff1660e01b8152600401611366929190615111565b602060405180830381600087803b15801561138057600080fd5b505af1158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b891906149bd565b6113f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ee9061531f565b60405180910390fd5b60016004600082825461140a9190615758565b92505081905550806002600060045481526020019081526020016000206000820151816000019080519060200190611443929190614674565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908360058111156114bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050507f5d072faeaf3fe9518eca824577834e1efc3ff209025796dd8819b72706cd0bd56004548585856040516114fc9493929190615603565b60405180910390a15050506001808190555050565b611519614658565b73ffffffffffffffffffffffffffffffffffffffff16611537611d59565b73ffffffffffffffffffffffffffffffffffffffff161461158d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611584906153ff565b60405180910390fd5b60058111801561159f57506202e63081105b6115de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d59061543f565b60405180910390fd5b80600c819055507f7b618bdde7807a5fed51719c1d5af2441afd29bee82e35b7c4f2e95b0cac9bca8160405161161491906155bf565b60405180910390a150565b50565b600061162c614658565b73ffffffffffffffffffffffffffffffffffffffff1661164a611d59565b73ffffffffffffffffffffffffffffffffffffffff16146116a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611697906153ff565b60405180910390fd5b600a60149054906101000a900460ff16156116f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e7906154bf565b60405180910390fd5b60008490508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3086866040518463ffffffff1660e01b815260040161173293929190615081565b600060405180830381600087803b15801561174c57600080fd5b505af1158015611760573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016117b491906155bf565b60206040518083038186803b1580156117cc57600080fd5b505afa1580156117e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611804919061488e565b73ffffffffffffffffffffffffffffffffffffffff161461185a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118519061549f565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118959190615006565b60206040518083038186803b1580156118ad57600080fd5b505afa1580156118c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e59190614a50565b1415611a145760005b600880549050811015611a12578573ffffffffffffffffffffffffffffffffffffffff166008828154811061194c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119ff57600881815481106119cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611a12565b8080611a0a90615933565b9150506118ee565b505b7f209eb5082bc3bcbd509ae679a680b3bb2a11b77fea542a93e205020af76529fc858585604051611a4793929190615081565b60405180910390a160019150509392505050565b60606000806000806000600454871115611aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa19061525f565b60405180910390fd5b600260008881526020019081526020016000206000016002600089815260200190815260200160002060010154600260008a815260200190815260200160002060020154600260008b815260200190815260200160002060030154600260008c815260200190815260200160002060040154600260008d815260200190815260200160002060050160009054906101000a900460ff166005811115611b78577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b858054611b84906158b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611bb0906158b6565b8015611bfd5780601f10611bd257610100808354040283529160200191611bfd565b820191906000526020600020905b815481529060010190602001808311611be057829003601f168201915b5050505050955095509550955095509550955091939550919395565b611c21614658565b73ffffffffffffffffffffffffffffffffffffffff16611c3f611d59565b73ffffffffffffffffffffffffffffffffffffffff1614611c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8c906153ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600b5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c5481565b611d90614658565b73ffffffffffffffffffffffffffffffffffffffff16611dae611d59565b73ffffffffffffffffffffffffffffffffffffffff1614611e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfb906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615611e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4b906154bf565b60405180910390fd5b60008111611e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8e9061533f565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401611ef4929190615111565b600060405180830381600087803b158015611f0e57600080fd5b505af1158015611f22573d6000803e3d6000fd5b5050505050565b6000611f33614658565b73ffffffffffffffffffffffffffffffffffffffff16611f51611d59565b73ffffffffffffffffffffffffffffffffffffffff1614611fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9e906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615611ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fee906154bf565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401612054929190615111565b602060405180830381600087803b15801561206e57600080fd5b505af1158015612082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a691906149bd565b6120e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120dc9061527f565b60405180910390fd5b7f011c182fcc25e52151bf452608f627a605269882587c25b326e9eb16819557b661210e614658565b848460405161211f93929190615081565b60405180910390a16001905092915050565b6202e63081565b612140614658565b73ffffffffffffffffffffffffffffffffffffffff1661215e611d59565b73ffffffffffffffffffffffffffffffffffffffff16146121b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ab906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615612204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121fb906154bf565b60405180910390fd5b600454811115612249576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122409061525f565b60405180910390fd5b60026005811115612283577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff1660058111156122df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612320576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612317906154df565b60405180910390fd5b6003600581111561235a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff1660058111156123b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156123f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ee906152ff565b60405180910390fd5b600580811115612430577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff16600581111561248c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156124cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124c49061555f565b60405180910390fd5b60046005811115612507577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff166005811115612563577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156125a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259b906152df565b60405180910390fd5b60046002600083815260200190815260200160002060050160006101000a81548160ff02191690836005811115612604577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f3346abf262ac5179e9052765fb72484e0baab1f356f08442bb7a3054147631de81600460405161263b9291906155da565b60405180910390a150565b600581565b612653614658565b73ffffffffffffffffffffffffffffffffffffffff16612671611d59565b73ffffffffffffffffffffffffffffffffffffffff16146126c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126be906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615612717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161270e906154bf565b60405180910390fd5b60045481111561275c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127539061525f565b60405180910390fd5b60026005811115612796577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff1660058111156127f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14612832576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128299061539f565b60405180910390fd5b60036002600083815260200190815260200160002060050160006101000a81548160ff02191690836005811115612892577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f3346abf262ac5179e9052765fb72484e0baab1f356f08442bb7a3054147631de8160036040516128c99291906155da565b60405180910390a150565b6000600a60149054906101000a900460ff16905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561296f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612925575b5050505050905090565b600a60149054906101000a900460ff16156129c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c0906154bf565b60405180910390fd5b600454811115612a0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a059061525f565b60405180910390fd5b6000600260008381526020019081526020016000206040518060c0016040529081600082018054612a3e906158b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612a6a906158b6565b8015612ab75780601f10612a8c57610100808354040283529160200191612ab7565b820191906000526020600020905b815481529060010190602001808311612a9a57829003601f168201915b50505050508152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166005811115612b33577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811115612b6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905060046005811115612bab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a001516005811115612be8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c209061529f565b60405180910390fd5b60036005811115612c63577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a001516005811115612ca0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cd8906152ff565b60405180910390fd5b600580811115612d1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a001516005811115612d57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612d98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d8f906154ff565b60405180910390fd5b60006005811115612dd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a001516005811115612e0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015612e1f5750806060015143105b15612e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e569061545f565b60405180910390fd5b60016005811115612e99577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a001516005811115612ed6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015612ee7575080606001514310155b8015612ef7575080608001514311155b15612f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f2e9061523f565b60405180910390fd5b80606001514310158015612f4f575080608001514311155b8015612fd0575060016005811115612f90577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a001516005811115612fcd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b156130575760018160a001906005811115613014577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9081600581111561304e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050613312565b8060600151431080156130df57506000600581111561309f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a0015160058111156130dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b156131665760008160a001906005811115613123577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9081600581111561315d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050613311565b8060800151431180156131ee5750600260058111156131ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a0015160058111156131eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15613310576005548160400151826020015161320a9190615758565b106132915760028160a00190600581111561324e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90816005811115613288577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505061330f565b60058160a0019060058111156132d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9081600581111561330a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250505b5b5b5b80600260008481526020019081526020016000206000820151816000019080519060200190613342929190614674565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908360058111156133bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050507f3346abf262ac5179e9052765fb72484e0baab1f356f08442bb7a3054147631de828260a001516040516133f99291906155da565b60405180910390a15050565b600a60149054906101000a900460ff1615613455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161344c906154bf565b60405180910390fd5b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a02a42d61349d614658565b6040518263ffffffff1660e01b81526004016134b99190615006565b60206040518083038186803b1580156134d157600080fd5b505afa1580156134e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135099190614a50565b90506000811161354e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135459061551f565b60405180910390fd5b6000151560036000858152602001908152602001600020600061356f614658565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146135f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135f09061559f565b60405180910390fd5b6000600260008581526020019081526020016000206040518060c0016040529081600082018054613629906158b6565b80601f0160208091040260200160405190810160405280929190818152602001828054613655906158b6565b80156136a25780601f10613677576101008083540402835291602001916136a2565b820191906000526020600020905b81548152906001019060200180831161368557829003601f168201915b50505050508152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16600581111561371e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811115613756577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905060016005811115613796577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160a0015160058111156137d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480156137e4575080608001514311155b613823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161381a9061557f565b60405180910390fd5b821561384757818160200181815161383b9190615758565b91508181525050613861565b81816040018181516138599190615758565b915081815250505b6001600360008681526020019081526020016000206000613880614658565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c591aa98613917614658565b60026000888152602001908152602001600020600401546040518363ffffffff1660e01b815260040161394b929190615111565b602060405180830381600087803b15801561396557600080fd5b505af1158015613979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061399d91906149bd565b6139dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139d39061541f565b60405180910390fd5b80600260008681526020019081526020016000206000820151816000019080519060200190613a0c929190614674565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836005811115613a86577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050507fab63e912f390a63c02e4c6743df4f3705588d446bab0abcd0f4840df1a03ac21613ab7614658565b858486604051613aca949392919061513a565b60405180910390a150505050565b60045481565b613ae6614658565b73ffffffffffffffffffffffffffffffffffffffff16613b04611d59565b73ffffffffffffffffffffffffffffffffffffffff1614613b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b51906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615613baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ba1906154bf565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1b736919e446059718572a81155f93b87161eec8f2f468e0a2c4f97cff2ec9c0600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682613cc2614658565b604051613cd19392919061504a565b60405180910390a15050565b613ce5614658565b73ffffffffffffffffffffffffffffffffffffffff16613d03611d59565b73ffffffffffffffffffffffffffffffffffffffff1614613d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613d50906153ff565b60405180910390fd5b600a60149054906101000a900460ff1615613da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613da0906154bf565b60405180910390fd5b60008111613dec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613de39061537f565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015613e5457600080fd5b505afa158015613e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e8c9190614a50565b8110613ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ec49061535f565b60405180910390fd5b8060058190555050565b613edf614658565b73ffffffffffffffffffffffffffffffffffffffff16613efd611d59565b73ffffffffffffffffffffffffffffffffffffffff1614613f53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613f4a906153ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613fc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613fba906152bf565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b614088614658565b73ffffffffffffffffffffffffffffffffffffffff166140a6611d59565b73ffffffffffffffffffffffffffffffffffffffff16146140fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016140f3906153ff565b60405180910390fd5b600a60149054906101000a900460ff161561414c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614143906154bf565b60405180910390fd5b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa47a663187732da575fa498cee4f254ed77b7bc0baa7bf09a7da9f55dd604df1600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682614264614658565b6040516142739392919061504a565b60405180910390a15050565b60006004548211156142c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016142bd9061525f565b60405180910390fd5b60026005811115614300577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600084815260200190815260200160002060050160009054906101000a900460ff16600581111561435c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14806143fb57506003600581111561439d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600084815260200190815260200160002060050160009054906101000a900460ff1660058111156143f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b80614498575060058081111561443a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600084815260200190815260200160002060050160009054906101000a900460ff166005811115614496577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6144d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016144ce906153df565b60405180910390fd5b600060026000848152602001908152602001600020600201546002600085815260200190815260200160002060010154118015614645575060026005811115614549577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600085815260200190815260200160002060050160009054906101000a900460ff1660058111156145a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14806146445750600360058111156145e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600085815260200190815260200160002060050160009054906101000a900460ff166005811115614642577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b5b1561464f57600190505b80915050919050565b600033905090565b600063150b7a0260e01b9050949350505050565b828054614680906158b6565b90600052602060002090601f0160209004810192826146a257600085556146e9565b82601f106146bb57805160ff19168380011785556146e9565b828001600101855582156146e9579182015b828111156146e85782518255916020019190600101906146cd565b5b5090506146f691906146fa565b5090565b5b808211156147135760008160009055506001016146fb565b5090565b600061472a61472584615674565b61564f565b90508281526020810184848401111561474257600080fd5b61474d848285615874565b509392505050565b6000614768614763846156a5565b61564f565b90508281526020810184848401111561478057600080fd5b61478b848285615874565b509392505050565b6000813590506147a281615f1f565b92915050565b6000815190506147b781615f1f565b92915050565b6000813590506147cc81615f36565b92915050565b6000815190506147e181615f36565b92915050565b600082601f8301126147f857600080fd5b8135614808848260208601614717565b91505092915050565b600082601f83011261482257600080fd5b8135614832848260208601614755565b91505092915050565b60008135905061484a81615f4d565b92915050565b60008151905061485f81615f4d565b92915050565b60006020828403121561487757600080fd5b600061488584828501614793565b91505092915050565b6000602082840312156148a057600080fd5b60006148ae848285016147a8565b91505092915050565b6000806000606084860312156148cc57600080fd5b60006148da86828701614793565b93505060206148eb86828701614793565b92505060406148fc8682870161483b565b9150509250925092565b6000806000806080858703121561491c57600080fd5b600061492a87828801614793565b945050602061493b87828801614793565b935050604061494c8782880161483b565b925050606085013567ffffffffffffffff81111561496957600080fd5b614975878288016147e7565b91505092959194509250565b6000806040838503121561499457600080fd5b60006149a285828601614793565b92505060206149b38582860161483b565b9150509250929050565b6000602082840312156149cf57600080fd5b60006149dd848285016147d2565b91505092915050565b6000602082840312156149f857600080fd5b600082013567ffffffffffffffff811115614a1257600080fd5b614a1e84828501614811565b91505092915050565b600060208284031215614a3957600080fd5b6000614a478482850161483b565b91505092915050565b600060208284031215614a6257600080fd5b6000614a7084828501614850565b91505092915050565b60008060408385031215614a8c57600080fd5b6000614a9a8582860161483b565b9250506020614aab858286016147bd565b9150509250929050565b6000614ac18383614acd565b60208301905092915050565b614ad6816157ce565b82525050565b614ae5816157ce565b82525050565b6000614af6826156fb565b614b008185615736565b9350614b0b836156d6565b8060005b83811015614b3c578151614b238882614ab5565b9750614b2e8361571c565b925050600181019050614b0f565b5085935050505092915050565b6000614b5482615706565b614b5e8185615736565b9350614b69836156e6565b8060005b83811015614ba157614b7e82615a38565b614b888882614ab5565b9750614b9383615729565b925050600181019050614b6d565b5085935050505092915050565b614bb7816157e0565b82525050565b614bc6816157ec565b82525050565b614bd581615862565b82525050565b6000614be682615711565b614bf08185615747565b9350614c00818560208601615883565b614c0981615a4b565b840191505092915050565b6000614c21601683615747565b9150614c2c82615a69565b602082019050919050565b6000614c44601683615747565b9150614c4f82615a92565b602082019050919050565b6000614c67601583615747565b9150614c7282615abb565b602082019050919050565b6000614c8a601283615747565b9150614c9582615ae4565b602082019050919050565b6000614cad602683615747565b9150614cb882615b0d565b604082019050919050565b6000614cd0601a83615747565b9150614cdb82615b5c565b602082019050919050565b6000614cf3601983615747565b9150614cfe82615b85565b602082019050919050565b6000614d16601f83615747565b9150614d2182615bae565b602082019050919050565b6000614d39601383615747565b9150614d4482615bd7565b602082019050919050565b6000614d5c601b83615747565b9150614d6782615c00565b602082019050919050565b6000614d7f601283615747565b9150614d8a82615c29565b602082019050919050565b6000614da2601e83615747565b9150614dad82615c52565b602082019050919050565b6000614dc5601f83615747565b9150614dd082615c7b565b602082019050919050565b6000614de8601d83615747565b9150614df382615ca4565b602082019050919050565b6000614e0b602083615747565b9150614e1682615ccd565b602082019050919050565b6000614e2e601583615747565b9150614e3982615cf6565b602082019050919050565b6000614e51601f83615747565b9150614e5c82615d1f565b602082019050919050565b6000614e74601b83615747565b9150614e7f82615d48565b602082019050919050565b6000614e97601d83615747565b9150614ea282615d71565b602082019050919050565b6000614eba601383615747565b9150614ec582615d9a565b602082019050919050565b6000614edd601f83615747565b9150614ee882615dc3565b602082019050919050565b6000614f00601d83615747565b9150614f0b82615dec565b602082019050919050565b6000614f23601e83615747565b9150614f2e82615e15565b602082019050919050565b6000614f46601283615747565b9150614f5182615e3e565b602082019050919050565b6000614f69601f83615747565b9150614f7482615e67565b602082019050919050565b6000614f8c601e83615747565b9150614f9782615e90565b602082019050919050565b6000614faf601d83615747565b9150614fba82615eb9565b602082019050919050565b6000614fd2601f83615747565b9150614fdd82615ee2565b602082019050919050565b614ff18161584b565b82525050565b61500081615855565b82525050565b600060208201905061501b6000830184614adc565b92915050565b60006040820190506150366000830185614adc565b6150436020830184614adc565b9392505050565b600060608201905061505f6000830186614adc565b61506c6020830185614adc565b6150796040830184614adc565b949350505050565b60006060820190506150966000830186614adc565b6150a36020830185614adc565b6150b06040830184614fe8565b949350505050565b60006040820190506150cd6000830185614adc565b81810360208301526150df8184614b49565b90509392505050565b60006040820190506150fd6000830185614adc565b61510a6020830184614bae565b9392505050565b60006040820190506151266000830185614adc565b6151336020830184614fe8565b9392505050565b600060808201905061514f6000830187614adc565b61515c6020830186614fe8565b6151696040830185614fe8565b6151766060830184614bae565b95945050505050565b600060208201905081810360008301526151998184614aeb565b905092915050565b60006020820190506151b66000830184614bae565b92915050565b60006020820190506151d16000830184614bbd565b92915050565b600060c08201905081810360008301526151f18189614bdb565b90506152006020830188614fe8565b61520d6040830187614fe8565b61521a6060830186614fe8565b6152276080830185614fe8565b61523460a0830184614ff7565b979650505050505050565b6000602082019050818103600083015261525881614c14565b9050919050565b6000602082019050818103600083015261527881614c37565b9050919050565b6000602082019050818103600083015261529881614c5a565b9050919050565b600060208201905081810360008301526152b881614c7d565b9050919050565b600060208201905081810360008301526152d881614ca0565b9050919050565b600060208201905081810360008301526152f881614cc3565b9050919050565b6000602082019050818103600083015261531881614ce6565b9050919050565b6000602082019050818103600083015261533881614d09565b9050919050565b6000602082019050818103600083015261535881614d2c565b9050919050565b6000602082019050818103600083015261537881614d4f565b9050919050565b6000602082019050818103600083015261539881614d72565b9050919050565b600060208201905081810360008301526153b881614d95565b9050919050565b600060208201905081810360008301526153d881614db8565b9050919050565b600060208201905081810360008301526153f881614ddb565b9050919050565b6000602082019050818103600083015261541881614dfe565b9050919050565b6000602082019050818103600083015261543881614e21565b9050919050565b6000602082019050818103600083015261545881614e44565b9050919050565b6000602082019050818103600083015261547881614e67565b9050919050565b6000602082019050818103600083015261549881614e8a565b9050919050565b600060208201905081810360008301526154b881614ead565b9050919050565b600060208201905081810360008301526154d881614ed0565b9050919050565b600060208201905081810360008301526154f881614ef3565b9050919050565b6000602082019050818103600083015261551881614f16565b9050919050565b6000602082019050818103600083015261553881614f39565b9050919050565b6000602082019050818103600083015261555881614f5c565b9050919050565b6000602082019050818103600083015261557881614f7f565b9050919050565b6000602082019050818103600083015261559881614fa2565b9050919050565b600060208201905081810360008301526155b881614fc5565b9050919050565b60006020820190506155d46000830184614fe8565b92915050565b60006040820190506155ef6000830185614fe8565b6155fc6020830184614bcc565b9392505050565b60006080820190506156186000830187614fe8565b818103602083015261562a8186614bdb565b90506156396040830185614fe8565b6156466060830184614fe8565b95945050505050565b600061565961566a565b90506156658282615902565b919050565b6000604051905090565b600067ffffffffffffffff82111561568f5761568e615a09565b5b61569882615a4b565b9050602081019050919050565b600067ffffffffffffffff8211156156c0576156bf615a09565b5b6156c982615a4b565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006157638261584b565b915061576e8361584b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156157a3576157a261597c565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006157d98261582b565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600081905061582682615f0b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061586d82615818565b9050919050565b82818337600083830152505050565b60005b838110156158a1578082015181840152602081019050615886565b838111156158b0576000848401525b50505050565b600060028204905060018216806158ce57607f821691505b602082108114156158e2576158e16159da565b5b50919050565b60006158fb6158f683615a5c565b6157ae565b9050919050565b61590b82615a4b565b810181811067ffffffffffffffff8211171561592a57615929615a09565b5b80604052505050565b600061593e8261584b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156159715761597061597c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000615a4482546158e8565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b7f5374696c6c20696e20766f74696e6720706572696f6400000000000000000000600082015250565b7f50726f706f73616c20646f65736e277420657869737400000000000000000000600082015250565b7f4552433230207472616e73666572206661696c65640000000000000000000000600082015250565b7f50726f706f73616c2063616e63656c6c65640000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f50726f706f73616c20616c72656164792063616e63656c6c6564000000000000600082015250565b7f50726f706f73616c20616c7265616479207265736f6c76656400000000000000600082015250565b7f63726561746550726f706f73616c3a20746f6b656e206c6f636b206661696c00600082015250565b7f43616e2774206d696e74203020746f6b656e7300000000000000000000000000600082015250565b7f766f746573206e6565646564203e20746f6b656e20737570706c790000000000600082015250565b7f71756f72756d2063616e6e6f7420626520300000000000000000000000000000600082015250565b7f50726f706f73616c206e6f7420696e20564f5445535f46494e49534845440000600082015250565b7f7472616e7366657220746f6b656e73206265666f72652073687574646f776e00600082015250565b7f50726f706f73616c206d75737420626520616674657220766f74696e67000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f766f74653a20746f6b656e206c6f636b206661696c0000000000000000000000600082015250565b7f6475726174696f6e206d757374206265203e3330383530203c31393030303000600082015250565b7f546f6f206561726c7920746f206d6f766520746f20766f74696e670000000000600082015250565b7f6d757374207374616b6520746f206372656174652070726f706f73616c000000600082015250565b7f4e4654207472616e73666572206661696c656400000000000000000000000000600082015250565b7f63616e6e6f742062652063616c6c65642061667465722073687574646f776e00600082015250565b7f43616e27742063616e63656c20696620766f74652066696e6973686564000000600082015250565b7f50726f706f73616c206661696c656420746f206d6565742071756f72756d0000600082015250565b7f6d757374207374616b6520746f20766f74650000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f50726f706f73616c20616c7265616479206661696c65642071756f72756d0000600082015250565b7f50726f706f73616c206e6f7420696e20766f74696e6720706572696f64000000600082015250565b7f416c726561647920766f7465642066726f6d2074686973206164647265737300600082015250565b60068110615f1c57615f1b6159ab565b5b50565b615f28816157ce565b8114615f3357600080fd5b50565b615f3f816157e0565b8114615f4a57600080fd5b50565b615f568161584b565b8114615f6157600080fd5b5056fea26469706673582212200f2546cfb67fcdfda3cbf262ad028319ffbc3699f72dbb0f490f272ddc5fa75264736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA438D208 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC5089DC0 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE82368AB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE82368AB EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xEE8BCCE6 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xF4E0D9AC EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0xF91F88F7 EQ PUSH2 0x5CA JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xC5089DC0 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xC851ED6C EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xDA35C664 EQ PUSH2 0x53C JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xB426D991 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB426D991 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xB6A6D177 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xB8C62AB8 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xBF86D690 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xA438D208 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA6F0F7C7 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xAE77A708 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xB1724B46 EQ PUSH2 0x454 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x49C2A1A6 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x6E768530 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x6E768530 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x8337F8DA EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CC JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x49C2A1A6 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x5BCFADB5 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x69E9CAE1 EQ PUSH2 0x33F JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x19CD0575 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x19CD0575 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x3403C2FC EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x3AAC5ADA EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x441A39F3 EQ PUSH2 0x2CD JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH3 0x76796E EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xE9ED68B EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x11CED45C EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x257 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x51BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x94E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x49E6 JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x48B7 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH2 0x1C19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B6 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F2 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x4981 JUMP JUMPDEST PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45C PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x2138 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH2 0x2646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x264B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D0 PUSH2 0x28D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x517F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x2979 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x4A79 JUMP JUMPDEST PUSH2 0x3405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x544 PUSH2 0x3AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x3ADE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x3CDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x3ED7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x4080 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x427F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x51A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x620 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 GT DUP1 ISZERO PUSH2 0x688 JUMPI POP PUSH3 0x2E630 DUP2 LT JUMPDEST PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0x543F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0xBB3349C4EE7B53DAECA1D3DC1890A839F0A436F8856EAFD80F6E8E64BFD31510 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x87A JUMPI PUSH2 0x7C7 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x867 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x87A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x872 SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B2 JUMP JUMPDEST POP DUP1 PUSH2 0x8EB JUMPI PUSH1 0x8 PUSH2 0x88A PUSH2 0x4658 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH32 0xF45DE2A4EFBDD3CB1D3639C28F1798F2E4C60FF4CD9031FD2097EF76AEBC1536 PUSH2 0x914 PUSH2 0x4658 JUMP JUMPDEST DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x925 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x939 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4660 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x956 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x974 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x553F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xA72 PUSH2 0x102A JUMP JUMPDEST EQ PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP1 PUSH2 0x53BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0xCB7 JUMPI PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAFC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB58 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI POP PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xBF6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x4 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x1A6358448AAE66517D334E312B05813A9F76FCEAD925EFFEA60ACA8B4F0DCA04 PUSH2 0xC8C PUSH2 0x4658 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0xC9B SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 DUP1 PUSH2 0xCAF SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB9 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x51AE58AF PUSH2 0xCFE PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDAE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6B JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE30 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 ADDRESS PUSH2 0xE82 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP3 SWAP2 SWAP1 PUSH2 0x5021 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0xF69 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA22CB465 PUSH2 0xF17 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP3 SWAP2 SWAP1 PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0xF76 SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4F JUMP JUMPDEST POP PUSH32 0x69692121B4C0A67F297222FE92D86727BC02DF6768FF7BE877E607E960DC2DF3 PUSH2 0xFA8 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x40 MLOAD PUSH2 0xFB8 SWAP3 SWAP2 SWAP1 PUSH2 0x50B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x77382E0341A6D8666D1F8ED15B8C933A01F5C1A3E6C5229E2DB8C5DC1C06AE1 PUSH2 0x1004 PUSH2 0x4658 JUMP JUMPDEST NUMBER PUSH1 0x40 MLOAD PUSH2 0x1013 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1123 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP1 PUSH2 0x553F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A02A42D PUSH2 0x11C2 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST GT PUSH2 0x126E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1265 SWAP1 PUSH2 0x547F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD NUMBER PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC SLOAD DUP3 PUSH2 0x1290 SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x12F9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC591AA98 PUSH2 0x1344 PUSH2 0x4658 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1366 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EE SWAP1 PUSH2 0x531F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140A SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1443 SWAP3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x14BD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x5D072FAEAF3FE9518ECA824577834E1EFC3FF209025796DD8819B72706CD0BD5 PUSH1 0x4 SLOAD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14FC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1519 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1537 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 GT DUP1 ISZERO PUSH2 0x159F JUMPI POP PUSH3 0x2E630 DUP2 LT JUMPDEST PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP1 PUSH2 0x543F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x7B618BDDE7807A5FED51719C1D5AF2441AFD29BEE82E35B7C4F2E95B0CAC9BCA DUP2 PUSH1 0x40 MLOAD PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162C PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x164A PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1697 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E7 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1732 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1760 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B4 SWAP2 SWAP1 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x488E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x185A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1851 SWAP1 PUSH2 0x549F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST EQ ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1A12 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x194C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19FF JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19CD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x1A12 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1A0A SWAP1 PUSH2 0x5933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18EE JUMP JUMPDEST POP JUMPDEST PUSH32 0x209EB5082BC3BCBD509AE679A680B3BB2A11B77FEA542A93E205020AF76529FC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 SLOAD DUP8 GT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA1 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B78 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP6 DUP1 SLOAD PUSH2 0x1B84 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BB0 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BFD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BD2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BFD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH2 0x1C21 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C3F PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8C SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D90 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DAE PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFB SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4B SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1E97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8E SWAP1 PUSH2 0x533F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF4 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F33 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F51 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9E SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEE SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2054 SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x206E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A6 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x20E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DC SWAP1 PUSH2 0x527F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x11C182FCC25E52151BF452608F627A605269882587C25B326E9EB16819557B6 PUSH2 0x210E PUSH2 0x4658 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x211F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2E630 DUP2 JUMP JUMPDEST PUSH2 0x2140 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x215E PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AB SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FB SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x2249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2240 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2283 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x22DF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2317 SWAP1 PUSH2 0x54DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x235A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x23B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x23F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23EE SWAP1 PUSH2 0x52FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x2430 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x248C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x24CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C4 SWAP1 PUSH2 0x555F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2507 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2563 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259B SWAP1 PUSH2 0x52DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2604 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3346ABF262AC5179E9052765FB72484E0BAAB1F356F08442BB7A3054147631DE DUP2 PUSH1 0x4 PUSH1 0x40 MLOAD PUSH2 0x263B SWAP3 SWAP2 SWAP1 PUSH2 0x55DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x2653 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2671 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BE SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270E SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x275C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2753 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2796 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x27F2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2829 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2892 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3346ABF262AC5179E9052765FB72484E0BAAB1F356F08442BB7A3054147631DE DUP2 PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x28C9 SWAP3 SWAP2 SWAP1 PUSH2 0x55DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x296F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2925 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C0 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x2A0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A05 SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2A3E SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A6A SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2B6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2BAB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2BE8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C20 SWAP1 PUSH2 0x529F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2C63 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2CA0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2CE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD8 SWAP1 PUSH2 0x52FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x2D1A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2D57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2D98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8F SWAP1 PUSH2 0x54FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2DD2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E0F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x2E1F JUMPI POP DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT JUMPDEST ISZERO PUSH2 0x2E5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E56 SWAP1 PUSH2 0x545F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E99 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2ED6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x2EE7 JUMPI POP DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2EF7 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0x2F37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2E SWAP1 PUSH2 0x523F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT ISZERO DUP1 ISZERO PUSH2 0x2F4F JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2FD0 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2F90 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2FCD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x3057 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3014 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x304E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP PUSH2 0x3312 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD NUMBER LT DUP1 ISZERO PUSH2 0x30DF JUMPI POP PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x309F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x30DC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x3166 JUMPI PUSH1 0x0 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3123 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x315D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP PUSH2 0x3311 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT DUP1 ISZERO PUSH2 0x31EE JUMPI POP PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x31AE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x31EB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x3310 JUMPI PUSH1 0x5 SLOAD DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x320A SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST LT PUSH2 0x3291 JUMPI PUSH1 0x2 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x324E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3288 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP PUSH2 0x330F JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x32D0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x330A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3342 SWAP3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x33BC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x3346ABF262AC5179E9052765FB72484E0BAAB1F356F08442BB7A3054147631DE DUP3 DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x33F9 SWAP3 SWAP2 SWAP1 PUSH2 0x55DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3455 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344C SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A02A42D PUSH2 0x349D PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B9 SWAP2 SWAP1 PUSH2 0x5006 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3509 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x354E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3545 SWAP1 PUSH2 0x551F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x356F PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x35F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F0 SWAP1 PUSH2 0x559F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x3629 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3655 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3677 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3685 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x371E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3756 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3796 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x37D3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x37E4 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD NUMBER GT ISZERO JUMPDEST PUSH2 0x3823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381A SWAP1 PUSH2 0x557F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x3847 JUMPI DUP2 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x383B SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH2 0x3861 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x3859 SWAP2 SWAP1 PUSH2 0x5758 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x3880 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC591AA98 PUSH2 0x3917 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x394B SWAP3 SWAP2 SWAP1 PUSH2 0x5111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399D SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x39DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D3 SWAP1 PUSH2 0x541F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3A0C SWAP3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3A86 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xAB63E912F390A63C02E4C6743DF4F3705588D446BAB0ABCD0F4840DF1A03AC21 PUSH2 0x3AB7 PUSH2 0x4658 JUMP JUMPDEST DUP6 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3ACA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3AE6 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B04 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B51 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3BAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA1 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1B736919E446059718572A81155F93B87161EEC8F2F468E0A2C4F97CFF2EC9C0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x3CC2 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x504A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3CE5 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D03 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D50 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3DA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA0 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3DEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE3 SWAP1 PUSH2 0x537F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8C SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST DUP2 LT PUSH2 0x3ECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC4 SWAP1 PUSH2 0x535F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3EDF PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3EFD PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4A SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3FC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FBA SWAP1 PUSH2 0x52BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4088 PUSH2 0x4658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x40A6 PUSH2 0x1D59 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x40FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F3 SWAP1 PUSH2 0x53FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x414C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4143 SWAP1 PUSH2 0x54BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA47A663187732DA575FA498CEE4F254ED77B7BC0BAA7BF09A7DA9F55DD604DF1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x4264 PUSH2 0x4658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4273 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x504A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x42C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42BD SWAP1 PUSH2 0x525F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4300 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x435C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 PUSH2 0x43FB JUMPI POP PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x439D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x43F9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x4498 JUMPI POP PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0x443A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4496 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST PUSH2 0x44D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44CE SWAP1 PUSH2 0x53DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x4645 JUMPI POP PUSH1 0x2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4549 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x45A5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 PUSH2 0x4644 JUMPI POP PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x45E6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4642 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x464F JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4680 SWAP1 PUSH2 0x58B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x46A2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x46E9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x46BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x46E9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x46E9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x46E8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x46CD JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x46F6 SWAP2 SWAP1 PUSH2 0x46FA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4713 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x46FB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472A PUSH2 0x4725 DUP5 PUSH2 0x5674 JUMP JUMPDEST PUSH2 0x564F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x474D DUP5 DUP3 DUP6 PUSH2 0x5874 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4768 PUSH2 0x4763 DUP5 PUSH2 0x56A5 JUMP JUMPDEST PUSH2 0x564F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x478B DUP5 DUP3 DUP6 PUSH2 0x5874 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47A2 DUP2 PUSH2 0x5F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x47B7 DUP2 PUSH2 0x5F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47CC DUP2 PUSH2 0x5F36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x47E1 DUP2 PUSH2 0x5F36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x47F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4808 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4717 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4832 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4755 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x484A DUP2 PUSH2 0x5F4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x485F DUP2 PUSH2 0x5F4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4885 DUP5 DUP3 DUP6 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48AE DUP5 DUP3 DUP6 ADD PUSH2 0x47A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48DA DUP7 DUP3 DUP8 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x48EB DUP7 DUP3 DUP8 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x48FC DUP7 DUP3 DUP8 ADD PUSH2 0x483B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x491C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x492A DUP8 DUP3 DUP9 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x493B DUP8 DUP3 DUP9 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x494C DUP8 DUP3 DUP9 ADD PUSH2 0x483B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4975 DUP8 DUP3 DUP9 ADD PUSH2 0x47E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49A2 DUP6 DUP3 DUP7 ADD PUSH2 0x4793 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x49B3 DUP6 DUP3 DUP7 ADD PUSH2 0x483B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49DD DUP5 DUP3 DUP6 ADD PUSH2 0x47D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A1E DUP5 DUP3 DUP6 ADD PUSH2 0x4811 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A47 DUP5 DUP3 DUP6 ADD PUSH2 0x483B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A70 DUP5 DUP3 DUP6 ADD PUSH2 0x4850 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A9A DUP6 DUP3 DUP7 ADD PUSH2 0x483B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4AAB DUP6 DUP3 DUP7 ADD PUSH2 0x47BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC1 DUP4 DUP4 PUSH2 0x4ACD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AD6 DUP2 PUSH2 0x57CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4AE5 DUP2 PUSH2 0x57CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF6 DUP3 PUSH2 0x56FB JUMP JUMPDEST PUSH2 0x4B00 DUP2 DUP6 PUSH2 0x5736 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B0B DUP4 PUSH2 0x56D6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B3C JUMPI DUP2 MLOAD PUSH2 0x4B23 DUP9 DUP3 PUSH2 0x4AB5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4B2E DUP4 PUSH2 0x571C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B0F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B54 DUP3 PUSH2 0x5706 JUMP JUMPDEST PUSH2 0x4B5E DUP2 DUP6 PUSH2 0x5736 JUMP JUMPDEST SWAP4 POP PUSH2 0x4B69 DUP4 PUSH2 0x56E6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BA1 JUMPI PUSH2 0x4B7E DUP3 PUSH2 0x5A38 JUMP JUMPDEST PUSH2 0x4B88 DUP9 DUP3 PUSH2 0x4AB5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4B93 DUP4 PUSH2 0x5729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B6D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BB7 DUP2 PUSH2 0x57E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4BC6 DUP2 PUSH2 0x57EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4BD5 DUP2 PUSH2 0x5862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BE6 DUP3 PUSH2 0x5711 JUMP JUMPDEST PUSH2 0x4BF0 DUP2 DUP6 PUSH2 0x5747 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C00 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5883 JUMP JUMPDEST PUSH2 0x4C09 DUP2 PUSH2 0x5A4B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C21 PUSH1 0x16 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C2C DUP3 PUSH2 0x5A69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C44 PUSH1 0x16 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C4F DUP3 PUSH2 0x5A92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C67 PUSH1 0x15 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C72 DUP3 PUSH2 0x5ABB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8A PUSH1 0x12 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C95 DUP3 PUSH2 0x5AE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CAD PUSH1 0x26 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CB8 DUP3 PUSH2 0x5B0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD0 PUSH1 0x1A DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CDB DUP3 PUSH2 0x5B5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CF3 PUSH1 0x19 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CFE DUP3 PUSH2 0x5B85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D16 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D21 DUP3 PUSH2 0x5BAE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D39 PUSH1 0x13 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D44 DUP3 PUSH2 0x5BD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D5C PUSH1 0x1B DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D67 DUP3 PUSH2 0x5C00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D7F PUSH1 0x12 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D8A DUP3 PUSH2 0x5C29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA2 PUSH1 0x1E DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DAD DUP3 PUSH2 0x5C52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC5 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DD0 DUP3 PUSH2 0x5C7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE8 PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DF3 DUP3 PUSH2 0x5CA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E0B PUSH1 0x20 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E16 DUP3 PUSH2 0x5CCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E2E PUSH1 0x15 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E39 DUP3 PUSH2 0x5CF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E51 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E5C DUP3 PUSH2 0x5D1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E74 PUSH1 0x1B DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7F DUP3 PUSH2 0x5D48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E97 PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EA2 DUP3 PUSH2 0x5D71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBA PUSH1 0x13 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EC5 DUP3 PUSH2 0x5D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EDD PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EE8 DUP3 PUSH2 0x5DC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F00 PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F0B DUP3 PUSH2 0x5DEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F23 PUSH1 0x1E DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F2E DUP3 PUSH2 0x5E15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F46 PUSH1 0x12 DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F51 DUP3 PUSH2 0x5E3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F69 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F74 DUP3 PUSH2 0x5E67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8C PUSH1 0x1E DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F97 DUP3 PUSH2 0x5E90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FAF PUSH1 0x1D DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FBA DUP3 PUSH2 0x5EB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD2 PUSH1 0x1F DUP4 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FDD DUP3 PUSH2 0x5EE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF1 DUP2 PUSH2 0x584B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5000 DUP2 PUSH2 0x5855 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x501B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4ADC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5036 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x5043 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4ADC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x505F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x506C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x5079 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4ADC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5096 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x50A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x50B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x50CD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x50DF DUP2 DUP5 PUSH2 0x4B49 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x50FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x510A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4BAE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5126 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x5133 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x514F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4ADC JUMP JUMPDEST PUSH2 0x515C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5169 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5176 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4BAE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5199 DUP2 DUP5 PUSH2 0x4AEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51F1 DUP2 DUP10 PUSH2 0x4BDB JUMP JUMPDEST SWAP1 POP PUSH2 0x5200 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x520D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x521A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5227 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5234 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4FF7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5258 DUP2 PUSH2 0x4C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5278 DUP2 PUSH2 0x4C37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5298 DUP2 PUSH2 0x4C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52B8 DUP2 PUSH2 0x4C7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52D8 DUP2 PUSH2 0x4CA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52F8 DUP2 PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5318 DUP2 PUSH2 0x4CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5338 DUP2 PUSH2 0x4D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5358 DUP2 PUSH2 0x4D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5378 DUP2 PUSH2 0x4D4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5398 DUP2 PUSH2 0x4D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53B8 DUP2 PUSH2 0x4D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53D8 DUP2 PUSH2 0x4DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53F8 DUP2 PUSH2 0x4DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5418 DUP2 PUSH2 0x4DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5438 DUP2 PUSH2 0x4E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5458 DUP2 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5478 DUP2 PUSH2 0x4E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5498 DUP2 PUSH2 0x4E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54B8 DUP2 PUSH2 0x4EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54D8 DUP2 PUSH2 0x4ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54F8 DUP2 PUSH2 0x4EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5518 DUP2 PUSH2 0x4F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5538 DUP2 PUSH2 0x4F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5558 DUP2 PUSH2 0x4F5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5578 DUP2 PUSH2 0x4F7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5598 DUP2 PUSH2 0x4FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55B8 DUP2 PUSH2 0x4FC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x55EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x55FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4BCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5618 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4FE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x562A DUP2 DUP7 PUSH2 0x4BDB JUMP JUMPDEST SWAP1 POP PUSH2 0x5639 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FE8 JUMP JUMPDEST PUSH2 0x5646 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4FE8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5659 PUSH2 0x566A JUMP JUMPDEST SWAP1 POP PUSH2 0x5665 DUP3 DUP3 PUSH2 0x5902 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x568F JUMPI PUSH2 0x568E PUSH2 0x5A09 JUMP JUMPDEST JUMPDEST PUSH2 0x5698 DUP3 PUSH2 0x5A4B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x56C0 JUMPI PUSH2 0x56BF PUSH2 0x5A09 JUMP JUMPDEST JUMPDEST PUSH2 0x56C9 DUP3 PUSH2 0x5A4B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5763 DUP3 PUSH2 0x584B JUMP JUMPDEST SWAP2 POP PUSH2 0x576E DUP4 PUSH2 0x584B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x57A3 JUMPI PUSH2 0x57A2 PUSH2 0x597C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D9 DUP3 PUSH2 0x582B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x5826 DUP3 PUSH2 0x5F0B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586D DUP3 PUSH2 0x5818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5886 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x58B0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x58CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x58E2 JUMPI PUSH2 0x58E1 PUSH2 0x59DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58FB PUSH2 0x58F6 DUP4 PUSH2 0x5A5C JUMP JUMPDEST PUSH2 0x57AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x590B DUP3 PUSH2 0x5A4B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x592A JUMPI PUSH2 0x5929 PUSH2 0x5A09 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593E DUP3 PUSH2 0x584B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5971 JUMPI PUSH2 0x5970 PUSH2 0x597C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A44 DUP3 SLOAD PUSH2 0x58E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374696C6C20696E20766F74696E6720706572696F6400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20646F65736E277420657869737400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C2063616E63656C6C65640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C72656164792063616E63656C6C6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C7265616479207265736F6C76656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x63726561746550726F706F73616C3A20746F6B656E206C6F636B206661696C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206D696E74203020746F6B656E7300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x766F746573206E6565646564203E20746F6B656E20737570706C790000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x71756F72756D2063616E6E6F7420626520300000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206E6F7420696E20564F5445535F46494E49534845440000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7472616E7366657220746F6B656E73206265666F72652073687574646F776E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206D75737420626520616674657220766F74696E67000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x766F74653A20746F6B656E206C6F636B206661696C0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6475726174696F6E206D757374206265203E3330383530203C31393030303000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6F206561726C7920746F206D6F766520746F20766F74696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D757374207374616B6520746F206372656174652070726F706F73616C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x63616E6E6F742062652063616C6C65642061667465722073687574646F776E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E27742063616E63656C20696620766F74652066696E6973686564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206661696C656420746F206D6565742071756F72756D0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D757374207374616B6520746F20766F74650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C7265616479206661696C65642071756F72756D0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F706F73616C206E6F7420696E20766F74696E6720706572696F64000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920766F7465642066726F6D2074686973206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x5F1C JUMPI PUSH2 0x5F1B PUSH2 0x59AB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F28 DUP2 PUSH2 0x57CE JUMP JUMPDEST DUP2 EQ PUSH2 0x5F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F3F DUP2 PUSH2 0x57E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F56 DUP2 PUSH2 0x584B JUMP JUMPDEST DUP2 EQ PUSH2 0x5F61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x25 CHAINID 0xCF 0xB6 PUSH32 0xCDFDA3CBF262AD028319FFBC3699F72DBB0F490F272DDC5FA75264736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "350:20464:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6005:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5439;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20192:620;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5199:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18464:1235;;;:::i;:::-;;1023:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5624:131;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8979:1050;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6783:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15831:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17246:900;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3333:638;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1700:145:0;;;:::i;:::-;;1285:52:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1354:38:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16106:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16566:347;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1628:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13346:922;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1565:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12678:487;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6178:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5881:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10170:2328;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14474:1351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;989:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8403:361;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7246:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1994:240:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7798:427:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4151:916;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6456:321;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1604:1:10::1;6557:11;:26;:56;;;;;1667:6;6587:11;:26;6557:56;6536:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;6712:11;6680:29;:43;;;;6739:31;6758:11;6739:31;;;;;;:::i;:::-;;;;;;;;6456:321:::0;:::o;6005:105::-;6055:7;6081:22;;;;;;;;;;;6074:29;;6005:105;:::o;5439:::-;5493:7;5519:18;;;;;;;;;;;5512:25;;5439:105;:::o;20192:620::-;20361:6;2908:8;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;20379:14:::1;20416:9:::0;20411:199:::1;20435:20;:27;;;;20431:1;:31;20411:199;;;20514:12;:10;:12::i;:::-;20487:39;;:20;20508:1;20487:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;20483:117;;;20558:4;20546:16;;20580:5;;20483:117;20464:3;;;;;:::i;:::-;;;;20411:199;;;;20624:9;20619:55;;20635:20;20661:12;:10;:12::i;:::-;20635:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20619:55;20690:44;20702:12;:10;:12::i;:::-;20716:8;20726:7;20690:44;;;;;;;;:::i;:::-;;;;;;;;20752:53;20775:8;20785:4;20791:7;20800:4;20752:22;:53::i;:::-;20745:60;;;20192:620:::0;;;;;;:::o;5199:97::-;5249:7;5275:14;;5268:21;;5199:97;:::o;18464:1235::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1:1::2;2260:7;;:19;;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;18580:1:10::3;18553:23;:21;:23::i;:::-;:28;18545:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;18721:9;18733:1;18721:13;;18716:370;18741:13;;18736:1;:18;18716:370;;18819:23;18796:46;;;;;;;;;;;;;;;;:9;:12;18806:1;18796:12;;;;;;;;;;;:19;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;:117;;;;;18885:28;18862:51:::0;::::3;;;;;;;;;;;;;;;:9;:12;18872:1;18862:12;;;;;;;;;;;:19;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;18796:117;18775:301;;;18968:24;18946:9;:12;18956:1;18946:12;;;;;;;;;;;:19;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19015;19045:12;:10;:12::i;:::-;19059:1;19015:46;;;;;;;:::i;:::-;;;;;;;;18775:301;18756:3;;;;;:::i;:::-;;;;18716:370;;;;19096:15;;;;;;;;;;;:33;;;19130:12;:10;:12::i;:::-;19096:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;19187:9;19182:353;19206:20;:27;;;;19202:1;:31;19182:353;;;19293:1;19258:37;;:20;19279:1;19258:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;19254:271;;19315:19;19345:20;19366:1;19345:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19315:54;;19392:11;:28;;;19429:4;19436:7;:5;:7::i;:::-;19392:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19387:123;;19466:11;:29;;;19496:7;:5;:7::i;:::-;19505:4;19466:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;19387:123;19254:271;;19235:3;;;;;:::i;:::-;;;;19182:353;;;;19549:56;19570:12;:10;:12::i;:::-;19584:20;19549:56;;;;;;;:::i;:::-;;;;;;;;19627:4;19616:8;;:15;;;;;;;;;;;;;;;;;;19647:45;19665:12;:10;:12::i;:::-;19679;19647:45;;;;;;;:::i;:::-;;;;;;;;1637:1:1::2;2563:7:::0;:22:::2;;;;18464:1235:10:o:0;1023:29::-;;;;:::o;5624:131::-;5678:7;5704:19;;;;;;;;;;;:29;;;5742:4;5704:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5697:51;;5624:131;:::o;8979:1050::-;2908:8;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1:1::1;2260:7;;:19;;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;9166:1:10::2;9117:15;;;;;;;;;;;:32;;;9150:12;:10;:12::i;:::-;9117:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;9096:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;9232:19;9269:29;;9254:12;:44;;;;:::i;:::-;9232:66;;9308:17;9342:15;;9328:11;:29;;;;:::i;:::-;9308:49;;9368:27;9410:218;;;;;;;;9436:7;9410:218;;;;9461:1;9410:218;;;;9491:1;9410:218;;;;9525:11;9410:218;;;;9554:9;9410:218;;;;9581:33;9410:218;;;;;;;;;;;;;;;;;;::::0;9368:260:::2;;9660:15;;;;;;;;;;;:21;;;9682:12;:10;:12::i;:::-;9696:11;:20;;;9660:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9639:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;9801:1;9784:13;;:18;;;;;;;:::i;:::-;;;;;;;;9876:11;9849:9;:24;9859:13;;9849:24;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9959:63;9975:13;;9990:7;9999:11;10012:9;9959:63;;;;;;;;;:::i;:::-;;;;;;;;2419:1:1;;;1637::::1;2563:7:::0;:22:::1;;;;8979:1050:10::0;:::o;6783:305::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1604:1:10::1;6879:11;:26;:56;;;;;1667:6;6909:11;:26;6879:56;6858:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;7020:11;7002:15;:29;;;;7047:34;7069:11;7047:34;;;;;;:::i;:::-;;;;;;;;6783:305:::0;:::o;15831:52::-;;:::o;17246:900::-;17399:4;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;17415:19:::2;17445:18;17415:49;;17474:11;:28;;;17524:4;17543:9;17566:7;17474:137;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;17674:9;17642:41;;:11;:19;;;17662:7;17642:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;17621:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;17783:1;17743:11;:21;;;17773:4;17743:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;17739:310;;;17805:9;17800:239;17824:20;:27;;;;17820:1;:31;17800:239;;;17907:18;17880:45;;:20;17901:1;17880:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;17876:149;;;17956:20;17977:1;17956:23;;;;;;;;;;;;;;;;;;;;;;;;17949:30;;;;;;;;;;;18001:5;;17876:149;17853:3;;;;;:::i;:::-;;;;17800:239;;;;17739:310;18064:54;18079:18;18099:9;18110:7;18064:54;;;;;;;;:::i;:::-;;;;;;;;18135:4;18128:11;;;17246:900:::0;;;;;:::o;3333:638::-;3439:13;3466:7;3487;3508;3529;3550:5;3605:13;;3588;:30;;3580:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3676:9;:24;3686:13;3676:24;;;;;;;;;;;:32;;3722:9;:24;3732:13;3722:24;;;;;;;;;;;:33;;;3769:9;:24;3779:13;3769:24;;;;;;;;;;;:37;;;3820:9;:24;3830:13;3820:24;;;;;;;;;;;:35;;;3869:9;:24;3879:13;3869:24;;;;;;;;;;;:33;;;3922:9;:24;3932:13;3922:24;;;;;;;;;;;:31;;;;;;;;;;;;3916:38;;;;;;;;;;;;;;;;3655:309;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3333:638;;;;;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1285:52:10:-;;;;:::o;1068:85:0:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;1354:38:10:-;;;;:::o;16106:198::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;16205:1:::2;16195:7;:11;16187:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;16249:19;;;;;;;;;;;:24;;;16282:4;16289:7;16249:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;16106:198:::0;:::o;16566:347::-;16693:4;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;16734:19:::2;;;;;;;;;;;:28;;;16763:2;16767:6;16734:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16713:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;16837:48;16860:12;:10;:12::i;:::-;16874:2;16878:6;16837:48;;;;;;;;:::i;:::-;;;;;;;;16902:4;16895:11;;16566:347:::0;;;;:::o;1628:45::-;1667:6;1628:45;:::o;13346:922::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13493:13:::2;;13476;:30;;13468:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;13599:29;13564:64;;;;;;;;;;;;;;;;:9;:24;13574:13;13564:24;;;;;;;;;;;:31;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;13543:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;13749:23;13714:58;;;;;;;;;;;;;;;;:9;:24;13724:13;13714:24;;;;;;;;;;;:31;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;13693:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;13889:28;13854:63:::0;::::2;;;;;;;;;;;;;;;:9;:24;13864:13;13854:24;;;;;;;;;;;:31;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;13833:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;14039:24;14004:59;;;;;;;;;;;;;;;;:9;:24;14014:13;14004:24;;;;;;;;;;;:31;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;13983:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;14160:24;14126:9;:24;14136:13;14126:24;;;;;;;;;;;:31;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14199:62;14221:13;14236:24;14199:62;;;;;;;:::i;:::-;;;;;;;;13346:922:::0;:::o;1565:40::-;1604:1;1565:40;:::o;12678:487::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;12824:13:::2;;12807;:30;;12799:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;12930:29;12895:64;;;;;;;;;;;;;;;;:9;:24;12905:13;12895:24;;;;;;;;;;;:31;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;12874:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;13059:23;13025:9;:24;13035:13;13025:24;;;;;;;;;;;:31;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13097:61;13119:13;13134:23;13097:61;;;;;;;:::i;:::-;;;;;;;;12678:487:::0;:::o;6178:81::-;6221:4;6244:8;;;;;;;;;;;6237:15;;6178:81;:::o;5881:118::-;5937:16;5972:20;5965:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:118;:::o;10170:2328::-;2908:8;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;10277:13:::1;;10260;:30;;10252:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10328:27;10358:9;:24;10368:13;10358:24;;;;;;;;;;;10328:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;10501:24;10479:46;;;;;;;;;;;;;;;;:11;:18;;;:46;;;;;;;;;;;;;;;;;;10458:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;10622:23;10600:45;;;;;;;;;;;;;;;;:11;:18;;;:45;;;;;;;;;;;;;;;;;;10579:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;10749:28;10727:50:::0;::::1;;;;;;;;;;;;;;;:11;:18;;;:50;;;;;;;;;;;;;;;;;;10706:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;10963:33;10941:55;;;;;;;;;;;;;;;;:11;:18;;;:55;;;;;;;;;;;;;;;;;:108;;;;;11027:11;:22;;;11012:12;:37;10941:108;10882:518;;;11074:37;;;;;;;;;;:::i;:::-;;;;;;;;10882:518;11205:21;11183:43;;;;;;;;;;;;;;;;:11;:18;;;:43;;;;;;;;;;;;;;;;;:97;;;;;11258:11;:22;;;11242:12;:38;;11183:97;:149;;;;;11312:11;:20;;;11296:12;:36;;11183:149;11128:272;;;11357:32;;;;;;;;;;:::i;:::-;;;;;;;;11128:272;11443:11;:22;;;11427:12;:38;;:90;;;;;11497:11;:20;;;11481:12;:36;;11427:90;:149;;;;;11555:21;11533:43;;;;;;;;;;;;;;;;:11;:18;;;:43;;;;;;;;;;;;;;;;;;11427:149;11410:913;;;11622:21;11601:11;:18;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;11410:913;;;11692:11;:22;;;11677:12;:37;:108;;;;;11752:33;11730:55;;;;;;;;;;;;;;;;:11;:18;;;:55;;;;;;;;;;;;;;;;;;11677:108;11660:663;;;11831:33;11810:11;:18;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;11660:663;;;11913:11;:20;;;11898:12;:35;:102;;;;;11971:29;11949:51;;;;;;;;;;;;;;;;:11;:18;;;:51;;;;;;;;;;;;;;;;;;11898:102;11881:442;;;12113:14;;12069:11;:24;;;12046:11;:20;;;:47;;;;:::i;:::-;:81;12025:288;;12181:29;12160:11;:18;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;12025:288;;;12270:28;12249:11;:18;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;12025:288;11881:442;11660:663;11410:913;12408:11;12381:9;:24;12391:13;12381:24;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12435:56;12457:13;12472:11;:18;;;12435:56;;;;;;;:::i;:::-;;;;;;;;2962:1;10170:2328:::0;:::o;14474:1351::-;2908:8;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;14552:21:::1;14576:15;;;;;;;;;;;:32;;;14609:12;:10;:12::i;:::-;14576:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14552:70;;14656:1;14640:13;:17;14632:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;14798:5;14760:43;;:5;:20;14766:13;14760:20;;;;;;;;;;;:34;14781:12;:10;:12::i;:::-;14760:34;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;14739:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;14871:27;14901:9;:24;14911:13;14901:24;;;;;;;;;;;14871:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;15056:21;15034:43;;;;;;;;;;;;;;;;:11;:18;;;:43;;;;;;;;;;;;;;;;;:99;;;;;15113:11;:20;;;15097:12;:36;;15034:99;15013:175;;;;;;;;;;;;:::i;:::-;;;;;;;;;15263:5;15259:145;;;15308:13;15284:11;:20;;:37;;;;;;;:::i;:::-;;;;;;::::0;::::1;15259:145;;;15380:13;15352:11;:24;;:41;;;;;;;:::i;:::-;;;;;;::::0;::::1;15259:145;15451:4;15414:5;:20;15420:13;15414:20;;;;;;;;;;;:34;15435:12;:10;:12::i;:::-;15414:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;15486:15;;;;;;;;;;;:21;;;15525:12;:10;:12::i;:::-;15555:9;:24;15565:13;15555:24;;;;;;;;;;;:33;;;15486:116;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15465:184;;;;;;;;;;;;:::i;:::-;;;;;;;;;15735:11;15708:9;:24;15718:13;15708:24;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15762:56;15768:12;:10;:12::i;:::-;15782:13;15797;15812:5;15762:56;;;;;;;;;:::i;:::-;;;;;;;;2962:1;;14474:1351:::0;;:::o;989:28::-;;;;:::o;8403:361::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;8531:18:::2;8552;;;;;;;;;;;8531:39;;8601:20;8580:18;;:41;;;;;;;;;;;;;;;;;;8659:18;;;;;;;;;;;8631:19;;:47;;;;;;;;;;;;;;;;;;8693:64;8712:18;;;;;;;;;;;8732:10;8744:12;:10;:12::i;:::-;8693:64;;;;;;;;:::i;:::-;;;;;;;;2962:1;8403:361:::0;:::o;7246:349::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7389:1:::2;7372:14;:18;7364:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;7461:19;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7444:14;:50;7423:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;7574:14;7557;:31;;;;7246:349:::0;:::o;1994:240:0:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;7798:427:10:-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:8:10::1;;;;;;;;;;;2907:9;2899:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7925:18:::2;7946:22;;;;;;;;;;;7925:43;;8003:23;7978:22;;:48;;;;;;;;;;;;;;;;;;8063:22;;;;;;;;;;;8036:15;;:50;;;;;;;;;;;;;;;;;;8101:117;8136:22;;;;;;;;;;;8172:10;8196:12;:10;:12::i;:::-;8101:117;;;;;;;;:::i;:::-;;;;;;;;2962:1;7798:427:::0;:::o;4151:916::-;4246:4;4291:13;;4274;:30;;4266:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4397:29;4362:64;;;;;;;;;;;;;;;;:9;:24;4372:13;4362:24;;;;;;;;;;;:31;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;:142;;;;4481:23;4446:58;;;;;;;;;;;;;;;;:9;:24;4456:13;4446:24;;;;;;;;;;;:31;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;4362:142;:225;;;;4559:28;4524:63;;;;;;;;;;;;;;;;:9;:24;4534:13;4524:24;;;;;;;;;;;:31;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;4362:225;4341:301;;;;;;;;;;;;:::i;:::-;;;;;;;;;4652:11;4779:9;:24;4789:13;4779:24;;;;;;;;;;;:37;;;4731:9;:24;4741:13;4731:24;;;;;;;;;;;:33;;;:85;:266;;;;;4873:29;4838:64;;;;;;;;;;;;;;;;:9;:24;4848:13;4838:24;;;;;;;;;;;:31;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;:142;;;;4957:23;4922:58;;;;;;;;;;;;;;;;:9;:24;4932:13;4922:24;;;;;;;;;;;:31;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;4838:142;4731:266;4727:310;;;5022:4;5013:13;;4727:310;5054:6;5047:13;;;4151:916;;;:::o;586:96:6:-;639:7;665:10;658:17;;586:96;:::o;530:162:5:-;630:6;655:30;;;648:37;;530:162;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:343:11:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:345::-;434:5;459:66;475:49;517:6;475:49;:::i;:::-;459:66;:::i;:::-;450:75;;548:6;541:5;534:21;586:4;579:5;575:16;624:3;615:6;610:3;606:16;603:25;600:2;;;641:1;638;631:12;600:2;654:41;688:6;683:3;678;654:41;:::i;:::-;440:261;;;;;;:::o;707:139::-;753:5;791:6;778:20;769:29;;807:33;834:5;807:33;:::i;:::-;759:87;;;;:::o;852:143::-;909:5;940:6;934:13;925:22;;956:33;983:5;956:33;:::i;:::-;915:80;;;;:::o;1001:133::-;1044:5;1082:6;1069:20;1060:29;;1098:30;1122:5;1098:30;:::i;:::-;1050:84;;;;:::o;1140:137::-;1194:5;1225:6;1219:13;1210:22;;1241:30;1265:5;1241:30;:::i;:::-;1200:77;;;;:::o;1296:271::-;1351:5;1400:3;1393:4;1385:6;1381:17;1377:27;1367:2;;1418:1;1415;1408:12;1367:2;1458:6;1445:20;1483:78;1557:3;1549:6;1542:4;1534:6;1530:17;1483:78;:::i;:::-;1474:87;;1357:210;;;;;:::o;1587:273::-;1643:5;1692:3;1685:4;1677:6;1673:17;1669:27;1659:2;;1710:1;1707;1700:12;1659:2;1750:6;1737:20;1775:79;1850:3;1842:6;1835:4;1827:6;1823:17;1775:79;:::i;:::-;1766:88;;1649:211;;;;;:::o;1866:139::-;1912:5;1950:6;1937:20;1928:29;;1966:33;1993:5;1966:33;:::i;:::-;1918:87;;;;:::o;2011:143::-;2068:5;2099:6;2093:13;2084:22;;2115:33;2142:5;2115:33;:::i;:::-;2074:80;;;;:::o;2160:262::-;2219:6;2268:2;2256:9;2247:7;2243:23;2239:32;2236:2;;;2284:1;2281;2274:12;2236:2;2327:1;2352:53;2397:7;2388:6;2377:9;2373:22;2352:53;:::i;:::-;2342:63;;2298:117;2226:196;;;;:::o;2428:284::-;2498:6;2547:2;2535:9;2526:7;2522:23;2518:32;2515:2;;;2563:1;2560;2553:12;2515:2;2606:1;2631:64;2687:7;2678:6;2667:9;2663:22;2631:64;:::i;:::-;2621:74;;2577:128;2505:207;;;;:::o;2718:552::-;2795:6;2803;2811;2860:2;2848:9;2839:7;2835:23;2831:32;2828:2;;;2876:1;2873;2866:12;2828:2;2919:1;2944:53;2989:7;2980:6;2969:9;2965:22;2944:53;:::i;:::-;2934:63;;2890:117;3046:2;3072:53;3117:7;3108:6;3097:9;3093:22;3072:53;:::i;:::-;3062:63;;3017:118;3174:2;3200:53;3245:7;3236:6;3225:9;3221:22;3200:53;:::i;:::-;3190:63;;3145:118;2818:452;;;;;:::o;3276:809::-;3371:6;3379;3387;3395;3444:3;3432:9;3423:7;3419:23;3415:33;3412:2;;;3461:1;3458;3451:12;3412:2;3504:1;3529:53;3574:7;3565:6;3554:9;3550:22;3529:53;:::i;:::-;3519:63;;3475:117;3631:2;3657:53;3702:7;3693:6;3682:9;3678:22;3657:53;:::i;:::-;3647:63;;3602:118;3759:2;3785:53;3830:7;3821:6;3810:9;3806:22;3785:53;:::i;:::-;3775:63;;3730:118;3915:2;3904:9;3900:18;3887:32;3946:18;3938:6;3935:30;3932:2;;;3978:1;3975;3968:12;3932:2;4006:62;4060:7;4051:6;4040:9;4036:22;4006:62;:::i;:::-;3996:72;;3858:220;3402:683;;;;;;;:::o;4091:407::-;4159:6;4167;4216:2;4204:9;4195:7;4191:23;4187:32;4184:2;;;4232:1;4229;4222:12;4184:2;4275:1;4300:53;4345:7;4336:6;4325:9;4321:22;4300:53;:::i;:::-;4290:63;;4246:117;4402:2;4428:53;4473:7;4464:6;4453:9;4449:22;4428:53;:::i;:::-;4418:63;;4373:118;4174:324;;;;;:::o;4504:278::-;4571:6;4620:2;4608:9;4599:7;4595:23;4591:32;4588:2;;;4636:1;4633;4626:12;4588:2;4679:1;4704:61;4757:7;4748:6;4737:9;4733:22;4704:61;:::i;:::-;4694:71;;4650:125;4578:204;;;;:::o;4788:375::-;4857:6;4906:2;4894:9;4885:7;4881:23;4877:32;4874:2;;;4922:1;4919;4912:12;4874:2;4993:1;4982:9;4978:17;4965:31;5023:18;5015:6;5012:30;5009:2;;;5055:1;5052;5045:12;5009:2;5083:63;5138:7;5129:6;5118:9;5114:22;5083:63;:::i;:::-;5073:73;;4936:220;4864:299;;;;:::o;5169:262::-;5228:6;5277:2;5265:9;5256:7;5252:23;5248:32;5245:2;;;5293:1;5290;5283:12;5245:2;5336:1;5361:53;5406:7;5397:6;5386:9;5382:22;5361:53;:::i;:::-;5351:63;;5307:117;5235:196;;;;:::o;5437:284::-;5507:6;5556:2;5544:9;5535:7;5531:23;5527:32;5524:2;;;5572:1;5569;5562:12;5524:2;5615:1;5640:64;5696:7;5687:6;5676:9;5672:22;5640:64;:::i;:::-;5630:74;;5586:128;5514:207;;;;:::o;5727:401::-;5792:6;5800;5849:2;5837:9;5828:7;5824:23;5820:32;5817:2;;;5865:1;5862;5855:12;5817:2;5908:1;5933:53;5978:7;5969:6;5958:9;5954:22;5933:53;:::i;:::-;5923:63;;5879:117;6035:2;6061:50;6103:7;6094:6;6083:9;6079:22;6061:50;:::i;:::-;6051:60;;6006:115;5807:321;;;;;:::o;6134:179::-;6203:10;6224:46;6266:3;6258:6;6224:46;:::i;:::-;6302:4;6297:3;6293:14;6279:28;;6214:99;;;;:::o;6319:108::-;6396:24;6414:5;6396:24;:::i;:::-;6391:3;6384:37;6374:53;;:::o;6433:118::-;6520:24;6538:5;6520:24;:::i;:::-;6515:3;6508:37;6498:53;;:::o;6587:732::-;6706:3;6735:54;6783:5;6735:54;:::i;:::-;6805:86;6884:6;6879:3;6805:86;:::i;:::-;6798:93;;6915:56;6965:5;6915:56;:::i;:::-;6994:7;7025:1;7010:284;7035:6;7032:1;7029:13;7010:284;;;7111:6;7105:13;7138:63;7197:3;7182:13;7138:63;:::i;:::-;7131:70;;7224:60;7277:6;7224:60;:::i;:::-;7214:70;;7070:224;7057:1;7054;7050:9;7045:14;;7010:284;;;7014:14;7310:3;7303:10;;6711:608;;;;;;;:::o;7355:751::-;7471:3;7500:51;7545:5;7500:51;:::i;:::-;7567:86;7646:6;7641:3;7567:86;:::i;:::-;7560:93;;7677:53;7724:5;7677:53;:::i;:::-;7753:7;7784:1;7769:312;7794:6;7791:1;7788:13;7769:312;;;7864:44;7901:6;7864:44;:::i;:::-;7928:63;7987:3;7972:13;7928:63;:::i;:::-;7921:70;;8014:57;8064:6;8014:57;:::i;:::-;8004:67;;7829:252;7816:1;7813;7809:9;7804:14;;7769:312;;;7773:14;8097:3;8090:10;;7476:630;;;;;;;:::o;8112:109::-;8193:21;8208:5;8193:21;:::i;:::-;8188:3;8181:34;8171:50;;:::o;8227:115::-;8312:23;8329:5;8312:23;:::i;:::-;8307:3;8300:36;8290:52;;:::o;8348:163::-;8451:53;8498:5;8451:53;:::i;:::-;8446:3;8439:66;8429:82;;:::o;8517:364::-;8605:3;8633:39;8666:5;8633:39;:::i;:::-;8688:71;8752:6;8747:3;8688:71;:::i;:::-;8681:78;;8768:52;8813:6;8808:3;8801:4;8794:5;8790:16;8768:52;:::i;:::-;8845:29;8867:6;8845:29;:::i;:::-;8840:3;8836:39;8829:46;;8609:272;;;;;:::o;8887:366::-;9029:3;9050:67;9114:2;9109:3;9050:67;:::i;:::-;9043:74;;9126:93;9215:3;9126:93;:::i;:::-;9244:2;9239:3;9235:12;9228:19;;9033:220;;;:::o;9259:366::-;9401:3;9422:67;9486:2;9481:3;9422:67;:::i;:::-;9415:74;;9498:93;9587:3;9498:93;:::i;:::-;9616:2;9611:3;9607:12;9600:19;;9405:220;;;:::o;9631:366::-;9773:3;9794:67;9858:2;9853:3;9794:67;:::i;:::-;9787:74;;9870:93;9959:3;9870:93;:::i;:::-;9988:2;9983:3;9979:12;9972:19;;9777:220;;;:::o;10003:366::-;10145:3;10166:67;10230:2;10225:3;10166:67;:::i;:::-;10159:74;;10242:93;10331:3;10242:93;:::i;:::-;10360:2;10355:3;10351:12;10344:19;;10149:220;;;:::o;10375:366::-;10517:3;10538:67;10602:2;10597:3;10538:67;:::i;:::-;10531:74;;10614:93;10703:3;10614:93;:::i;:::-;10732:2;10727:3;10723:12;10716:19;;10521:220;;;:::o;10747:366::-;10889:3;10910:67;10974:2;10969:3;10910:67;:::i;:::-;10903:74;;10986:93;11075:3;10986:93;:::i;:::-;11104:2;11099:3;11095:12;11088:19;;10893:220;;;:::o;11119:366::-;11261:3;11282:67;11346:2;11341:3;11282:67;:::i;:::-;11275:74;;11358:93;11447:3;11358:93;:::i;:::-;11476:2;11471:3;11467:12;11460:19;;11265:220;;;:::o;11491:366::-;11633:3;11654:67;11718:2;11713:3;11654:67;:::i;:::-;11647:74;;11730:93;11819:3;11730:93;:::i;:::-;11848:2;11843:3;11839:12;11832:19;;11637:220;;;:::o;11863:366::-;12005:3;12026:67;12090:2;12085:3;12026:67;:::i;:::-;12019:74;;12102:93;12191:3;12102:93;:::i;:::-;12220:2;12215:3;12211:12;12204:19;;12009:220;;;:::o;12235:366::-;12377:3;12398:67;12462:2;12457:3;12398:67;:::i;:::-;12391:74;;12474:93;12563:3;12474:93;:::i;:::-;12592:2;12587:3;12583:12;12576:19;;12381:220;;;:::o;12607:366::-;12749:3;12770:67;12834:2;12829:3;12770:67;:::i;:::-;12763:74;;12846:93;12935:3;12846:93;:::i;:::-;12964:2;12959:3;12955:12;12948:19;;12753:220;;;:::o;12979:366::-;13121:3;13142:67;13206:2;13201:3;13142:67;:::i;:::-;13135:74;;13218:93;13307:3;13218:93;:::i;:::-;13336:2;13331:3;13327:12;13320:19;;13125:220;;;:::o;13351:366::-;13493:3;13514:67;13578:2;13573:3;13514:67;:::i;:::-;13507:74;;13590:93;13679:3;13590:93;:::i;:::-;13708:2;13703:3;13699:12;13692:19;;13497:220;;;:::o;13723:366::-;13865:3;13886:67;13950:2;13945:3;13886:67;:::i;:::-;13879:74;;13962:93;14051:3;13962:93;:::i;:::-;14080:2;14075:3;14071:12;14064:19;;13869:220;;;:::o;14095:366::-;14237:3;14258:67;14322:2;14317:3;14258:67;:::i;:::-;14251:74;;14334:93;14423:3;14334:93;:::i;:::-;14452:2;14447:3;14443:12;14436:19;;14241:220;;;:::o;14467:366::-;14609:3;14630:67;14694:2;14689:3;14630:67;:::i;:::-;14623:74;;14706:93;14795:3;14706:93;:::i;:::-;14824:2;14819:3;14815:12;14808:19;;14613:220;;;:::o;14839:366::-;14981:3;15002:67;15066:2;15061:3;15002:67;:::i;:::-;14995:74;;15078:93;15167:3;15078:93;:::i;:::-;15196:2;15191:3;15187:12;15180:19;;14985:220;;;:::o;15211:366::-;15353:3;15374:67;15438:2;15433:3;15374:67;:::i;:::-;15367:74;;15450:93;15539:3;15450:93;:::i;:::-;15568:2;15563:3;15559:12;15552:19;;15357:220;;;:::o;15583:366::-;15725:3;15746:67;15810:2;15805:3;15746:67;:::i;:::-;15739:74;;15822:93;15911:3;15822:93;:::i;:::-;15940:2;15935:3;15931:12;15924:19;;15729:220;;;:::o;15955:366::-;16097:3;16118:67;16182:2;16177:3;16118:67;:::i;:::-;16111:74;;16194:93;16283:3;16194:93;:::i;:::-;16312:2;16307:3;16303:12;16296:19;;16101:220;;;:::o;16327:366::-;16469:3;16490:67;16554:2;16549:3;16490:67;:::i;:::-;16483:74;;16566:93;16655:3;16566:93;:::i;:::-;16684:2;16679:3;16675:12;16668:19;;16473:220;;;:::o;16699:366::-;16841:3;16862:67;16926:2;16921:3;16862:67;:::i;:::-;16855:74;;16938:93;17027:3;16938:93;:::i;:::-;17056:2;17051:3;17047:12;17040:19;;16845:220;;;:::o;17071:366::-;17213:3;17234:67;17298:2;17293:3;17234:67;:::i;:::-;17227:74;;17310:93;17399:3;17310:93;:::i;:::-;17428:2;17423:3;17419:12;17412:19;;17217:220;;;:::o;17443:366::-;17585:3;17606:67;17670:2;17665:3;17606:67;:::i;:::-;17599:74;;17682:93;17771:3;17682:93;:::i;:::-;17800:2;17795:3;17791:12;17784:19;;17589:220;;;:::o;17815:366::-;17957:3;17978:67;18042:2;18037:3;17978:67;:::i;:::-;17971:74;;18054:93;18143:3;18054:93;:::i;:::-;18172:2;18167:3;18163:12;18156:19;;17961:220;;;:::o;18187:366::-;18329:3;18350:67;18414:2;18409:3;18350:67;:::i;:::-;18343:74;;18426:93;18515:3;18426:93;:::i;:::-;18544:2;18539:3;18535:12;18528:19;;18333:220;;;:::o;18559:366::-;18701:3;18722:67;18786:2;18781:3;18722:67;:::i;:::-;18715:74;;18798:93;18887:3;18798:93;:::i;:::-;18916:2;18911:3;18907:12;18900:19;;18705:220;;;:::o;18931:366::-;19073:3;19094:67;19158:2;19153:3;19094:67;:::i;:::-;19087:74;;19170:93;19259:3;19170:93;:::i;:::-;19288:2;19283:3;19279:12;19272:19;;19077:220;;;:::o;19303:118::-;19390:24;19408:5;19390:24;:::i;:::-;19385:3;19378:37;19368:53;;:::o;19427:112::-;19510:22;19526:5;19510:22;:::i;:::-;19505:3;19498:35;19488:51;;:::o;19545:222::-;19638:4;19676:2;19665:9;19661:18;19653:26;;19689:71;19757:1;19746:9;19742:17;19733:6;19689:71;:::i;:::-;19643:124;;;;:::o;19773:332::-;19894:4;19932:2;19921:9;19917:18;19909:26;;19945:71;20013:1;20002:9;19998:17;19989:6;19945:71;:::i;:::-;20026:72;20094:2;20083:9;20079:18;20070:6;20026:72;:::i;:::-;19899:206;;;;;:::o;20111:442::-;20260:4;20298:2;20287:9;20283:18;20275:26;;20311:71;20379:1;20368:9;20364:17;20355:6;20311:71;:::i;:::-;20392:72;20460:2;20449:9;20445:18;20436:6;20392:72;:::i;:::-;20474;20542:2;20531:9;20527:18;20518:6;20474:72;:::i;:::-;20265:288;;;;;;:::o;20559:442::-;20708:4;20746:2;20735:9;20731:18;20723:26;;20759:71;20827:1;20816:9;20812:17;20803:6;20759:71;:::i;:::-;20840:72;20908:2;20897:9;20893:18;20884:6;20840:72;:::i;:::-;20922;20990:2;20979:9;20975:18;20966:6;20922:72;:::i;:::-;20713:288;;;;;;:::o;21007:477::-;21175:4;21213:2;21202:9;21198:18;21190:26;;21226:71;21294:1;21283:9;21279:17;21270:6;21226:71;:::i;:::-;21344:9;21338:4;21334:20;21329:2;21318:9;21314:18;21307:48;21372:105;21472:4;21463:6;21372:105;:::i;:::-;21364:113;;21180:304;;;;;:::o;21490:320::-;21605:4;21643:2;21632:9;21628:18;21620:26;;21656:71;21724:1;21713:9;21709:17;21700:6;21656:71;:::i;:::-;21737:66;21799:2;21788:9;21784:18;21775:6;21737:66;:::i;:::-;21610:200;;;;;:::o;21816:332::-;21937:4;21975:2;21964:9;21960:18;21952:26;;21988:71;22056:1;22045:9;22041:17;22032:6;21988:71;:::i;:::-;22069:72;22137:2;22126:9;22122:18;22113:6;22069:72;:::i;:::-;21942:206;;;;;:::o;22154:541::-;22325:4;22363:3;22352:9;22348:19;22340:27;;22377:71;22445:1;22434:9;22430:17;22421:6;22377:71;:::i;:::-;22458:72;22526:2;22515:9;22511:18;22502:6;22458:72;:::i;:::-;22540;22608:2;22597:9;22593:18;22584:6;22540:72;:::i;:::-;22622:66;22684:2;22673:9;22669:18;22660:6;22622:66;:::i;:::-;22330:365;;;;;;;:::o;22701:373::-;22844:4;22882:2;22871:9;22867:18;22859:26;;22931:9;22925:4;22921:20;22917:1;22906:9;22902:17;22895:47;22959:108;23062:4;23053:6;22959:108;:::i;:::-;22951:116;;22849:225;;;;:::o;23080:210::-;23167:4;23205:2;23194:9;23190:18;23182:26;;23218:65;23280:1;23269:9;23265:17;23256:6;23218:65;:::i;:::-;23172:118;;;;:::o;23296:218::-;23387:4;23425:2;23414:9;23410:18;23402:26;;23438:69;23504:1;23493:9;23489:17;23480:6;23438:69;:::i;:::-;23392:122;;;;:::o;23520:858::-;23769:4;23807:3;23796:9;23792:19;23784:27;;23857:9;23851:4;23847:20;23843:1;23832:9;23828:17;23821:47;23885:78;23958:4;23949:6;23885:78;:::i;:::-;23877:86;;23973:72;24041:2;24030:9;24026:18;24017:6;23973:72;:::i;:::-;24055;24123:2;24112:9;24108:18;24099:6;24055:72;:::i;:::-;24137;24205:2;24194:9;24190:18;24181:6;24137:72;:::i;:::-;24219:73;24287:3;24276:9;24272:19;24263:6;24219:73;:::i;:::-;24302:69;24366:3;24355:9;24351:19;24342:6;24302:69;:::i;:::-;23774:604;;;;;;;;;:::o;24384:419::-;24550:4;24588:2;24577:9;24573:18;24565:26;;24637:9;24631:4;24627:20;24623:1;24612:9;24608:17;24601:47;24665:131;24791:4;24665:131;:::i;:::-;24657:139;;24555:248;;;:::o;24809:419::-;24975:4;25013:2;25002:9;24998:18;24990:26;;25062:9;25056:4;25052:20;25048:1;25037:9;25033:17;25026:47;25090:131;25216:4;25090:131;:::i;:::-;25082:139;;24980:248;;;:::o;25234:419::-;25400:4;25438:2;25427:9;25423:18;25415:26;;25487:9;25481:4;25477:20;25473:1;25462:9;25458:17;25451:47;25515:131;25641:4;25515:131;:::i;:::-;25507:139;;25405:248;;;:::o;25659:419::-;25825:4;25863:2;25852:9;25848:18;25840:26;;25912:9;25906:4;25902:20;25898:1;25887:9;25883:17;25876:47;25940:131;26066:4;25940:131;:::i;:::-;25932:139;;25830:248;;;:::o;26084:419::-;26250:4;26288:2;26277:9;26273:18;26265:26;;26337:9;26331:4;26327:20;26323:1;26312:9;26308:17;26301:47;26365:131;26491:4;26365:131;:::i;:::-;26357:139;;26255:248;;;:::o;26509:419::-;26675:4;26713:2;26702:9;26698:18;26690:26;;26762:9;26756:4;26752:20;26748:1;26737:9;26733:17;26726:47;26790:131;26916:4;26790:131;:::i;:::-;26782:139;;26680:248;;;:::o;26934:419::-;27100:4;27138:2;27127:9;27123:18;27115:26;;27187:9;27181:4;27177:20;27173:1;27162:9;27158:17;27151:47;27215:131;27341:4;27215:131;:::i;:::-;27207:139;;27105:248;;;:::o;27359:419::-;27525:4;27563:2;27552:9;27548:18;27540:26;;27612:9;27606:4;27602:20;27598:1;27587:9;27583:17;27576:47;27640:131;27766:4;27640:131;:::i;:::-;27632:139;;27530:248;;;:::o;27784:419::-;27950:4;27988:2;27977:9;27973:18;27965:26;;28037:9;28031:4;28027:20;28023:1;28012:9;28008:17;28001:47;28065:131;28191:4;28065:131;:::i;:::-;28057:139;;27955:248;;;:::o;28209:419::-;28375:4;28413:2;28402:9;28398:18;28390:26;;28462:9;28456:4;28452:20;28448:1;28437:9;28433:17;28426:47;28490:131;28616:4;28490:131;:::i;:::-;28482:139;;28380:248;;;:::o;28634:419::-;28800:4;28838:2;28827:9;28823:18;28815:26;;28887:9;28881:4;28877:20;28873:1;28862:9;28858:17;28851:47;28915:131;29041:4;28915:131;:::i;:::-;28907:139;;28805:248;;;:::o;29059:419::-;29225:4;29263:2;29252:9;29248:18;29240:26;;29312:9;29306:4;29302:20;29298:1;29287:9;29283:17;29276:47;29340:131;29466:4;29340:131;:::i;:::-;29332:139;;29230:248;;;:::o;29484:419::-;29650:4;29688:2;29677:9;29673:18;29665:26;;29737:9;29731:4;29727:20;29723:1;29712:9;29708:17;29701:47;29765:131;29891:4;29765:131;:::i;:::-;29757:139;;29655:248;;;:::o;29909:419::-;30075:4;30113:2;30102:9;30098:18;30090:26;;30162:9;30156:4;30152:20;30148:1;30137:9;30133:17;30126:47;30190:131;30316:4;30190:131;:::i;:::-;30182:139;;30080:248;;;:::o;30334:419::-;30500:4;30538:2;30527:9;30523:18;30515:26;;30587:9;30581:4;30577:20;30573:1;30562:9;30558:17;30551:47;30615:131;30741:4;30615:131;:::i;:::-;30607:139;;30505:248;;;:::o;30759:419::-;30925:4;30963:2;30952:9;30948:18;30940:26;;31012:9;31006:4;31002:20;30998:1;30987:9;30983:17;30976:47;31040:131;31166:4;31040:131;:::i;:::-;31032:139;;30930:248;;;:::o;31184:419::-;31350:4;31388:2;31377:9;31373:18;31365:26;;31437:9;31431:4;31427:20;31423:1;31412:9;31408:17;31401:47;31465:131;31591:4;31465:131;:::i;:::-;31457:139;;31355:248;;;:::o;31609:419::-;31775:4;31813:2;31802:9;31798:18;31790:26;;31862:9;31856:4;31852:20;31848:1;31837:9;31833:17;31826:47;31890:131;32016:4;31890:131;:::i;:::-;31882:139;;31780:248;;;:::o;32034:419::-;32200:4;32238:2;32227:9;32223:18;32215:26;;32287:9;32281:4;32277:20;32273:1;32262:9;32258:17;32251:47;32315:131;32441:4;32315:131;:::i;:::-;32307:139;;32205:248;;;:::o;32459:419::-;32625:4;32663:2;32652:9;32648:18;32640:26;;32712:9;32706:4;32702:20;32698:1;32687:9;32683:17;32676:47;32740:131;32866:4;32740:131;:::i;:::-;32732:139;;32630:248;;;:::o;32884:419::-;33050:4;33088:2;33077:9;33073:18;33065:26;;33137:9;33131:4;33127:20;33123:1;33112:9;33108:17;33101:47;33165:131;33291:4;33165:131;:::i;:::-;33157:139;;33055:248;;;:::o;33309:419::-;33475:4;33513:2;33502:9;33498:18;33490:26;;33562:9;33556:4;33552:20;33548:1;33537:9;33533:17;33526:47;33590:131;33716:4;33590:131;:::i;:::-;33582:139;;33480:248;;;:::o;33734:419::-;33900:4;33938:2;33927:9;33923:18;33915:26;;33987:9;33981:4;33977:20;33973:1;33962:9;33958:17;33951:47;34015:131;34141:4;34015:131;:::i;:::-;34007:139;;33905:248;;;:::o;34159:419::-;34325:4;34363:2;34352:9;34348:18;34340:26;;34412:9;34406:4;34402:20;34398:1;34387:9;34383:17;34376:47;34440:131;34566:4;34440:131;:::i;:::-;34432:139;;34330:248;;;:::o;34584:419::-;34750:4;34788:2;34777:9;34773:18;34765:26;;34837:9;34831:4;34827:20;34823:1;34812:9;34808:17;34801:47;34865:131;34991:4;34865:131;:::i;:::-;34857:139;;34755:248;;;:::o;35009:419::-;35175:4;35213:2;35202:9;35198:18;35190:26;;35262:9;35256:4;35252:20;35248:1;35237:9;35233:17;35226:47;35290:131;35416:4;35290:131;:::i;:::-;35282:139;;35180:248;;;:::o;35434:419::-;35600:4;35638:2;35627:9;35623:18;35615:26;;35687:9;35681:4;35677:20;35673:1;35662:9;35658:17;35651:47;35715:131;35841:4;35715:131;:::i;:::-;35707:139;;35605:248;;;:::o;35859:419::-;36025:4;36063:2;36052:9;36048:18;36040:26;;36112:9;36106:4;36102:20;36098:1;36087:9;36083:17;36076:47;36140:131;36266:4;36140:131;:::i;:::-;36132:139;;36030:248;;;:::o;36284:222::-;36377:4;36415:2;36404:9;36400:18;36392:26;;36428:71;36496:1;36485:9;36481:17;36472:6;36428:71;:::i;:::-;36382:124;;;;:::o;36512:364::-;36649:4;36687:2;36676:9;36672:18;36664:26;;36700:71;36768:1;36757:9;36753:17;36744:6;36700:71;:::i;:::-;36781:88;36865:2;36854:9;36850:18;36841:6;36781:88;:::i;:::-;36654:222;;;;;:::o;36882:644::-;37079:4;37117:3;37106:9;37102:19;37094:27;;37131:71;37199:1;37188:9;37184:17;37175:6;37131:71;:::i;:::-;37249:9;37243:4;37239:20;37234:2;37223:9;37219:18;37212:48;37277:78;37350:4;37341:6;37277:78;:::i;:::-;37269:86;;37365:72;37433:2;37422:9;37418:18;37409:6;37365:72;:::i;:::-;37447;37515:2;37504:9;37500:18;37491:6;37447:72;:::i;:::-;37084:442;;;;;;;:::o;37532:129::-;37566:6;37593:20;;:::i;:::-;37583:30;;37622:33;37650:4;37642:6;37622:33;:::i;:::-;37573:88;;;:::o;37667:75::-;37700:6;37733:2;37727:9;37717:19;;37707:35;:::o;37748:307::-;37809:4;37899:18;37891:6;37888:30;37885:2;;;37921:18;;:::i;:::-;37885:2;37959:29;37981:6;37959:29;:::i;:::-;37951:37;;38043:4;38037;38033:15;38025:23;;37814:241;;;:::o;38061:308::-;38123:4;38213:18;38205:6;38202:30;38199:2;;;38235:18;;:::i;:::-;38199:2;38273:29;38295:6;38273:29;:::i;:::-;38265:37;;38357:4;38351;38347:15;38339:23;;38128:241;;;:::o;38375:132::-;38442:4;38465:3;38457:11;;38495:4;38490:3;38486:14;38478:22;;38447:60;;;:::o;38513:156::-;38577:4;38600:3;38592:11;;38623:3;38620:1;38613:14;38657:4;38654:1;38644:18;38636:26;;38582:87;;;:::o;38675:114::-;38742:6;38776:5;38770:12;38760:22;;38749:40;;;:::o;38795:111::-;38859:6;38893:5;38887:12;38877:22;;38866:40;;;:::o;38912:99::-;38964:6;38998:5;38992:12;38982:22;;38971:40;;;:::o;39017:113::-;39087:4;39119;39114:3;39110:14;39102:22;;39092:38;;;:::o;39136:110::-;39203:4;39235;39230:3;39226:14;39218:22;;39208:38;;;:::o;39252:184::-;39351:11;39385:6;39380:3;39373:19;39425:4;39420:3;39416:14;39401:29;;39363:73;;;;:::o;39442:169::-;39526:11;39560:6;39555:3;39548:19;39600:4;39595:3;39591:14;39576:29;;39538:73;;;;:::o;39617:305::-;39657:3;39676:20;39694:1;39676:20;:::i;:::-;39671:25;;39710:20;39728:1;39710:20;:::i;:::-;39705:25;;39864:1;39796:66;39792:74;39789:1;39786:81;39783:2;;;39870:18;;:::i;:::-;39783:2;39914:1;39911;39907:9;39900:16;;39661:261;;;;:::o;39928:139::-;39978:7;40018:42;40011:5;40007:54;39996:65;;39986:81;;;:::o;40073:96::-;40110:7;40139:24;40157:5;40139:24;:::i;:::-;40128:35;;40118:51;;;:::o;40175:90::-;40209:7;40252:5;40245:13;40238:21;40227:32;;40217:48;;;:::o;40271:149::-;40307:7;40347:66;40340:5;40336:78;40325:89;;40315:105;;;:::o;40426:147::-;40481:7;40510:5;40499:16;;40516:51;40561:5;40516:51;:::i;:::-;40489:84;;;:::o;40579:126::-;40616:7;40656:42;40649:5;40645:54;40634:65;;40624:81;;;:::o;40711:77::-;40748:7;40777:5;40766:16;;40756:32;;;:::o;40794:86::-;40829:7;40869:4;40862:5;40858:16;40847:27;;40837:43;;;:::o;40886:147::-;40952:9;40985:42;41021:5;40985:42;:::i;:::-;40972:55;;40962:71;;;:::o;41039:154::-;41123:6;41118:3;41113;41100:30;41185:1;41176:6;41171:3;41167:16;41160:27;41090:103;;;:::o;41199:307::-;41267:1;41277:113;41291:6;41288:1;41285:13;41277:113;;;41376:1;41371:3;41367:11;41361:18;41357:1;41352:3;41348:11;41341:39;41313:2;41310:1;41306:10;41301:15;;41277:113;;;41408:6;41405:1;41402:13;41399:2;;;41488:1;41479:6;41474:3;41470:16;41463:27;41399:2;41248:258;;;;:::o;41512:320::-;41556:6;41593:1;41587:4;41583:12;41573:22;;41640:1;41634:4;41630:12;41661:18;41651:2;;41717:4;41709:6;41705:17;41695:27;;41651:2;41779;41771:6;41768:14;41748:18;41745:38;41742:2;;;41798:18;;:::i;:::-;41742:2;41563:269;;;;:::o;41838:166::-;41907:5;41932:66;41963:34;41986:10;41963:34;:::i;:::-;41932:66;:::i;:::-;41923:75;;41913:91;;;:::o;42010:281::-;42093:27;42115:4;42093:27;:::i;:::-;42085:6;42081:40;42223:6;42211:10;42208:22;42187:18;42175:10;42172:34;42169:62;42166:2;;;42234:18;;:::i;:::-;42166:2;42274:10;42270:2;42263:22;42053:238;;;:::o;42297:233::-;42336:3;42359:24;42377:5;42359:24;:::i;:::-;42350:33;;42405:66;42398:5;42395:77;42392:2;;;42475:18;;:::i;:::-;42392:2;42522:1;42515:5;42511:13;42504:20;;42340:190;;;:::o;42536:180::-;42584:77;42581:1;42574:88;42681:4;42678:1;42671:15;42705:4;42702:1;42695:15;42722:180;42770:77;42767:1;42760:88;42867:4;42864:1;42857:15;42891:4;42888:1;42881:15;42908:180;42956:77;42953:1;42946:88;43053:4;43050:1;43043:15;43077:4;43074:1;43067:15;43094:180;43142:77;43139:1;43132:88;43239:4;43236:1;43229:15;43263:4;43260:1;43253:15;43280:144;43335:5;43360:57;43411:4;43405:11;43360:57;:::i;:::-;43351:66;;43341:83;;;:::o;43430:102::-;43471:6;43522:2;43518:7;43513:2;43506:5;43502:14;43498:28;43488:38;;43478:54;;;:::o;43538:102::-;43580:8;43627:5;43624:1;43620:13;43599:34;;43589:51;;;:::o;43646:172::-;43786:24;43782:1;43774:6;43770:14;43763:48;43752:66;:::o;43824:172::-;43964:24;43960:1;43952:6;43948:14;43941:48;43930:66;:::o;44002:171::-;44142:23;44138:1;44130:6;44126:14;44119:47;44108:65;:::o;44179:168::-;44319:20;44315:1;44307:6;44303:14;44296:44;44285:62;:::o;44353:225::-;44493:34;44489:1;44481:6;44477:14;44470:58;44562:8;44557:2;44549:6;44545:15;44538:33;44459:119;:::o;44584:176::-;44724:28;44720:1;44712:6;44708:14;44701:52;44690:70;:::o;44766:175::-;44906:27;44902:1;44894:6;44890:14;44883:51;44872:69;:::o;44947:181::-;45087:33;45083:1;45075:6;45071:14;45064:57;45053:75;:::o;45134:169::-;45274:21;45270:1;45262:6;45258:14;45251:45;45240:63;:::o;45309:177::-;45449:29;45445:1;45437:6;45433:14;45426:53;45415:71;:::o;45492:168::-;45632:20;45628:1;45620:6;45616:14;45609:44;45598:62;:::o;45666:180::-;45806:32;45802:1;45794:6;45790:14;45783:56;45772:74;:::o;45852:181::-;45992:33;45988:1;45980:6;45976:14;45969:57;45958:75;:::o;46039:179::-;46179:31;46175:1;46167:6;46163:14;46156:55;46145:73;:::o;46224:182::-;46364:34;46360:1;46352:6;46348:14;46341:58;46330:76;:::o;46412:171::-;46552:23;46548:1;46540:6;46536:14;46529:47;46518:65;:::o;46589:181::-;46729:33;46725:1;46717:6;46713:14;46706:57;46695:75;:::o;46776:177::-;46916:29;46912:1;46904:6;46900:14;46893:53;46882:71;:::o;46959:179::-;47099:31;47095:1;47087:6;47083:14;47076:55;47065:73;:::o;47144:169::-;47284:21;47280:1;47272:6;47268:14;47261:45;47250:63;:::o;47319:181::-;47459:33;47455:1;47447:6;47443:14;47436:57;47425:75;:::o;47506:179::-;47646:31;47642:1;47634:6;47630:14;47623:55;47612:73;:::o;47691:180::-;47831:32;47827:1;47819:6;47815:14;47808:56;47797:74;:::o;47877:168::-;48017:20;48013:1;48005:6;48001:14;47994:44;47983:62;:::o;48051:181::-;48191:33;48187:1;48179:6;48175:14;48168:57;48157:75;:::o;48238:180::-;48378:32;48374:1;48366:6;48362:14;48355:56;48344:74;:::o;48424:179::-;48564:31;48560:1;48552:6;48548:14;48541:55;48530:73;:::o;48609:181::-;48749:33;48745:1;48737:6;48733:14;48726:57;48715:75;:::o;48796:123::-;48887:1;48880:5;48877:12;48867:2;;48893:18;;:::i;:::-;48867:2;48857:62;:::o;48925:122::-;48998:24;49016:5;48998:24;:::i;:::-;48991:5;48988:35;48978:2;;49037:1;49034;49027:12;48978:2;48968:79;:::o;49053:116::-;49123:21;49138:5;49123:21;:::i;:::-;49116:5;49113:32;49103:2;;49159:1;49156;49149:12;49103:2;49093:76;:::o;49175:122::-;49248:24;49266:5;49248:24;:::i;:::-;49241:5;49238:35;49228:2;;49287:1;49284;49277:12;49228:2;49218:79;:::o"
            },
            "methodIdentifiers": {
              "CREATE_TO_VOTE_PROPOSAL_DELAY()": "8337f8da",
              "MAX_DURATION()": "b1724b46",
              "MIN_DURATION()": "b6a6d177",
              "VOTING_DURATION()": "a438d208",
              "createProposal(string)": "49c2a1a6",
              "delegate(address)": "5c19a95c",
              "emergencyShutdown()": "3403c2fc",
              "getMinVotesNeeded()": "19cd0575",
              "getNativeTokenAddress()": "11ced45c",
              "getNativeTokenBalance()": "441a39f3",
              "getNftContractAddresses()": "c5089dc0",
              "getProposalData(uint256)": "6e768530",
              "getProposalResult(uint256)": "f91f88f7",
              "getStakingAddress()": "0e9ed68b",
              "isShutdown()": "bf86d690",
              "minVotesNeeded()": "3aac5ada",
              "mintNativeToken(uint256)": "a6f0f7c7",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "owner()": "8da5cb5b",
              "proposalCount()": "da35c664",
              "renounceOwnership()": "715018a6",
              "setMinVotesNeeded(uint256)": "ee8bcce6",
              "setNativeTokenAddress(address)": "e82368ab",
              "setProposalToCancelled(uint256)": "b426d991",
              "setProposalToResolved(uint256)": "b8c62ab8",
              "setStakingAddress(address)": "f4e0d9ac",
              "setVotingDelayDuration(uint256)": "0076796e",
              "setVotingDuration(uint256)": "5bcfadb5",
              "transferNFT(address,address,uint256)": "69e9cae1",
              "transferNativeToken(address,uint256)": "ae77a708",
              "transferOwnership(address)": "f2fde38b",
              "updateProposalStatus(uint256)": "c851ed6c",
              "vote(uint256,bool)": "c9d27afe"
            }
          }
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              411
            ],
            "Ownable": [
              109
            ]
          },
          "id": 110,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 110,
              "sourceUnit": 412,
              "src": "58:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 411,
                    "src": "613:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "613:7:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "89:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 109,
              "linearizedBaseContracts": [
                109,
                411
              ],
              "name": "Ownable",
              "nameLocation": "602:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "643:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "627:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "662:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "699:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "683:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "730:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "714:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "682:57:0"
                  },
                  "src": "656:84:0"
                },
                {
                  "body": {
                    "id": 34,
                    "nodeType": "Block",
                    "src": "857:135:0",
                    "statements": [
                      {
                        "assignments": [
                          18
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nameLocation": "875:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 34,
                            "src": "867:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 17,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "867:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "887:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "887:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "867:32:0"
                      },
                      {
                        "expression": {
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 22,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "909:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 23,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "918:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "909:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25,
                        "nodeType": "ExpressionStatement",
                        "src": "909:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 29,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "971:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 28,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "963:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 27,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "963:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "963:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 31,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "975:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "942:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "EmitStatement",
                        "src": "937:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "746:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 35,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "854:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "857:0:0"
                  },
                  "scope": 109,
                  "src": "842:150:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "1123:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1140:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 40,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "1133:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "998:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 44,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1077:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1082:2:0"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1114:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:9:0"
                  },
                  "scope": 109,
                  "src": "1068:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1262:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 48,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "1280:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1280:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 50,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 399,
                                  "src": "1291:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 51,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1291:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1280:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1305:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 47,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1272:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1272:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1272:68:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1350:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1159:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1250:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:2:0"
                  },
                  "src": "1241:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1754:91:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1790:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 68,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1806:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1798:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1798:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1798:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 64,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1769:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1769:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "EmitStatement",
                        "src": "1764:45:0"
                      },
                      {
                        "expression": {
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 72,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1819:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1836:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1828:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1828:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1828:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1819:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1819:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1364:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 62,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 61,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1744:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1744:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1709:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1726:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1754:0:0"
                  },
                  "scope": 109,
                  "src": "1700:145:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "2064:170:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 89,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "2082:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2102:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 91,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2094:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 90,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2094:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2094:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2082:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2106:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 88,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2074:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2074:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "ExpressionStatement",
                        "src": "2074:73:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 99,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2183:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2191:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 98,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2162:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2162:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "2157:43:0"
                      },
                      {
                        "expression": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 103,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2210:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 104,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2219:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2210:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "2210:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "1851:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 86,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 85,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2054:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2054:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2003:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2029:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "2021:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2021:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2020:18:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2064:0:0"
                  },
                  "scope": 109,
                  "src": "1994:240:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 110,
              "src": "584:1652:0",
              "usedErrors": []
            }
          ],
          "src": "33:2204:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              149
            ]
          },
          "id": 150,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 111,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 112,
                "nodeType": "StructuredDocumentation",
                "src": "58:750:1",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 149,
              "linearizedBaseContracts": [
                149
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "827:15:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 115,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1622:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1597:41:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1637:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 118,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1669:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1644:37:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1680:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1704:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1688:23:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "1733:39:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 123,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "1743:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 124,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1753:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1743:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1743:22:1"
                      }
                    ]
                  },
                  "id": 128,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1730:2:1"
                  },
                  "returnParameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1733:0:1"
                  },
                  "scope": 149,
                  "src": "1718:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "2171:421:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 132,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "2260:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 133,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "2271:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2260:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2281:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 131,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2252:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2252:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 137,
                        "nodeType": "ExpressionStatement",
                        "src": "2252:63:1"
                      },
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 138,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "2390:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 139,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2400:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2390:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "2390:18:1"
                      },
                      {
                        "id": 142,
                        "nodeType": "PlaceholderStatement",
                        "src": "2419:1:1"
                      },
                      {
                        "expression": {
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 143,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "2563:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 144,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2573:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2563:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "2563:22:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "1778:364:1",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
                  },
                  "id": 148,
                  "name": "nonReentrant",
                  "nameLocation": "2156:12:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2168:2:1"
                  },
                  "src": "2147:445:1",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 150,
              "src": "809:1785:1",
              "usedErrors": []
            }
          ],
          "src": "33:2562:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              227
            ]
          },
          "id": 228,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 151,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 152,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:2",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 227,
              "linearizedBaseContracts": [
                227
              ],
              "name": "IERC20",
              "nameLocation": "139:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:2",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 158,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "232:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:2"
                  },
                  "returnParameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "269:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:2"
                  },
                  "scope": 227,
                  "src": "223:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:2",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 166,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "370:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "388:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "380:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:2"
                  },
                  "returnParameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "420:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:2"
                  },
                  "scope": 227,
                  "src": "361:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:2",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 176,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "658:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "675:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "667:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "694:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "686:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:2"
                  },
                  "returnParameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "720:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:2"
                  },
                  "scope": 227,
                  "src": "649:77:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 186,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1010:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1028:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "1020:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1043:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "1035:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:2"
                  },
                  "returnParameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "1075:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:2"
                  },
                  "scope": 227,
                  "src": "1001:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 187,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:2",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 196,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1746:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1762:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1754:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1779:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1771:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:2"
                  },
                  "returnParameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1805:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:2"
                  },
                  "scope": 227,
                  "src": "1737:74:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:2",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 208,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2127:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2148:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "2140:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2140:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2164:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "2156:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2156:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2183:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "2175:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:51:2"
                  },
                  "returnParameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "2209:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2209:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2208:6:2"
                  },
                  "scope": 227,
                  "src": "2118:97:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:158:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 217,
                  "name": "Transfer",
                  "nameLocation": "2390:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 211,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2415:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2399:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2399:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2437:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2421:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2421:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2449:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2441:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:57:2"
                  },
                  "src": "2384:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "2462:148:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 226,
                  "name": "Approval",
                  "nameLocation": "2621:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2646:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "2630:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2669:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "2653:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2686:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "2678:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2678:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2629:63:2"
                  },
                  "src": "2615:78:2"
                }
              ],
              "scope": 228,
              "src": "129:2566:2",
              "usedErrors": []
            }
          ],
          "src": "33:2663:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              423
            ],
            "IERC721": [
              343
            ]
          },
          "id": 344,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 229,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 230,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 344,
              "sourceUnit": 424,
              "src": "58:47:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 232,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 423,
                    "src": "196:7:3"
                  },
                  "id": 233,
                  "nodeType": "InheritanceSpecifier",
                  "src": "196:7:3"
                }
              ],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 231,
                "nodeType": "StructuredDocumentation",
                "src": "107:67:3",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 343,
              "linearizedBaseContracts": [
                343,
                423
              ],
              "name": "IERC721",
              "nameLocation": "185:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "210:88:3",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "id": 242,
                  "name": "Transfer",
                  "nameLocation": "309:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "334:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "318:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 238,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "356:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "340:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 240,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "376:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "360:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "360:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "317:67:3"
                  },
                  "src": "303:82:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 243,
                    "nodeType": "StructuredDocumentation",
                    "src": "391:94:3",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "id": 251,
                  "name": "Approval",
                  "nameLocation": "496:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "521:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "505:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "544:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "528:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "528:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "570:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "554:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "554:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:74:3"
                  },
                  "src": "490:89:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 252,
                    "nodeType": "StructuredDocumentation",
                    "src": "585:117:3",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "id": 260,
                  "name": "ApprovalForAll",
                  "nameLocation": "713:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "744:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "728:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "767:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "751:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "751:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "782:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "777:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:64:3"
                  },
                  "src": "707:85:3"
                },
                {
                  "documentation": {
                    "id": 261,
                    "nodeType": "StructuredDocumentation",
                    "src": "798:76:3",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 268,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "888:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "906:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "898:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "898:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "897:15:3"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "944:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "936:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "936:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "935:17:3"
                  },
                  "scope": 343,
                  "src": "879:74:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "959:131:3",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 276,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "1104:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1120:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1112:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1111:17:3"
                  },
                  "returnParameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1160:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1152:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1151:15:3"
                  },
                  "scope": 343,
                  "src": "1095:72:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "1173:690:3",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 286,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1877:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1902:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "1894:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1894:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1916:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "1908:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1908:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1928:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "1920:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1920:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1893:43:3"
                  },
                  "returnParameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1945:0:3"
                  },
                  "scope": 343,
                  "src": "1868:78:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 287,
                    "nodeType": "StructuredDocumentation",
                    "src": "1952:504:3",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 296,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2470:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2491:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2483:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2483:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2505:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2497:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2497:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2517:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2509:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2509:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2482:43:3"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2534:0:3"
                  },
                  "scope": 343,
                  "src": "2461:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "2541:452:3",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 304,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3007:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3023:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "3015:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3015:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3035:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "3027:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3027:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3014:29:3"
                  },
                  "returnParameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3052:0:3"
                  },
                  "scope": 343,
                  "src": "2998:55:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 305,
                    "nodeType": "StructuredDocumentation",
                    "src": "3059:139:3",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 312,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nameLocation": "3212:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3232:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "3224:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3224:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3223:17:3"
                  },
                  "returnParameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3272:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "3264:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3264:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3263:18:3"
                  },
                  "scope": 343,
                  "src": "3203:79:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "3288:309:3",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "3611:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3637:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "3629:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3629:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nameLocation": "3652:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "3647:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3647:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3628:34:3"
                  },
                  "returnParameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3671:0:3"
                  },
                  "scope": 343,
                  "src": "3602:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:138:3",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "3830:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3855:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "3847:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3847:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3870:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "3862:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3862:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3846:33:3"
                  },
                  "returnParameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "3903:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3903:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3902:6:3"
                  },
                  "scope": 343,
                  "src": "3821:88:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 331,
                    "nodeType": "StructuredDocumentation",
                    "src": "3915:568:3",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 342,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "4497:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4522:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "4514:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4514:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4536:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "4528:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4528:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4548:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "4540:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4540:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4572:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "4557:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4557:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4513:64:3"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4586:0:3"
                  },
                  "scope": 343,
                  "src": "4488:99:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 344,
              "src": "175:4414:3",
              "usedErrors": []
            }
          ],
          "src": "33:4557:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
          "exportedSymbols": {
            "IERC721Receiver": [
              361
            ]
          },
          "id": 362,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 345,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 346,
                "nodeType": "StructuredDocumentation",
                "src": "58:152:4",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 361,
              "linearizedBaseContracts": [
                361
              ],
              "name": "IERC721Receiver",
              "nameLocation": "221:15:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 347,
                    "nodeType": "StructuredDocumentation",
                    "src": "243:485:4",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 360,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "742:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "767:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "759:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "785:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "777:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "799:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "791:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 355,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "823:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "808:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 354,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:70:4"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "847:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "846:8:4"
                  },
                  "scope": 361,
                  "src": "733:122:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 362,
              "src": "211:646:4",
              "usedErrors": []
            }
          ],
          "src": "33:825:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
          "exportedSymbols": {
            "ERC721Holder": [
              388
            ],
            "IERC721Receiver": [
              361
            ]
          },
          "id": 389,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 363,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "file": "../IERC721Receiver.sol",
              "id": 364,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 389,
              "sourceUnit": 362,
              "src": "58:32:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 366,
                    "name": "IERC721Receiver",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 361,
                    "src": "365:15:5"
                  },
                  "id": 367,
                  "nodeType": "InheritanceSpecifier",
                  "src": "365:15:5"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 365,
                "nodeType": "StructuredDocumentation",
                "src": "94:245:5",
                "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
              },
              "fullyImplemented": true,
              "id": 388,
              "linearizedBaseContracts": [
                388,
                361
              ],
              "name": "ERC721Holder",
              "nameLocation": "349:12:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    360
                  ],
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "638:54:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 382,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "655:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Holder_$388",
                                "typeString": "contract ERC721Holder"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 387,
                            "src": "655:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "655:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 381,
                        "id": 385,
                        "nodeType": "Return",
                        "src": "648:37:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 368,
                    "nodeType": "StructuredDocumentation",
                    "src": "388:137:5",
                    "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 387,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "539:16:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 378,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "612:8:5"
                  },
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "556:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "556:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "565:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "574:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "574:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "583:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "555:41:5"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "630:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "630:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "629:8:5"
                  },
                  "scope": 388,
                  "src": "530:162:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 389,
              "src": "340:354:5",
              "usedErrors": []
            }
          ],
          "src": "33:662:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              411
            ]
          },
          "id": 412,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 390,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 411,
              "linearizedBaseContracts": [
                411
              ],
              "name": "Context",
              "nameLocation": "572:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 398,
                    "nodeType": "Block",
                    "src": "648:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 395,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "665:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "665:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 394,
                        "id": 397,
                        "nodeType": "Return",
                        "src": "658:17:6"
                      }
                    ]
                  },
                  "id": 399,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "595:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "605:2:6"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "639:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "639:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "638:9:6"
                  },
                  "scope": 411,
                  "src": "586:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "755:165:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 404,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "765:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$411",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "765:4:6"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 406,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "905:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "905:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 403,
                        "id": 408,
                        "nodeType": "Return",
                        "src": "898:15:6"
                      }
                    ]
                  },
                  "id": 410,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "697:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "705:2:6"
                  },
                  "returnParameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "739:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "738:16:6"
                  },
                  "scope": 411,
                  "src": "688:232:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 412,
              "src": "554:368:6",
              "usedErrors": []
            }
          ],
          "src": "33:890:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              423
            ]
          },
          "id": 424,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 413,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 414,
                "nodeType": "StructuredDocumentation",
                "src": "58:279:7",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 423,
              "linearizedBaseContracts": [
                423
              ],
              "name": "IERC165",
              "nameLocation": "348:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "362:340:7",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 422,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "716:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "741:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 422,
                        "src": "734:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "734:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:20:7"
                  },
                  "returnParameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 422,
                        "src": "777:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:6:7"
                  },
                  "scope": 423,
                  "src": "707:76:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 424,
              "src": "338:447:7",
              "usedErrors": []
            }
          ],
          "src": "33:753:7"
        },
        "id": 7
      },
      "contracts/IStaking.sol": {
        "ast": {
          "absolutePath": "contracts/IStaking.sol",
          "exportedSymbols": {
            "IStaking": [
              469
            ]
          },
          "id": 470,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 425,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:23:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 469,
              "linearizedBaseContracts": [
                469
              ],
              "name": "IStaking",
              "nameLocation": "66:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "3a02a42d",
                  "id": 432,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakedBalance",
                  "nameLocation": "89:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "staker",
                        "nameLocation": "114:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "106:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "106:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "105:16:8"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "144:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "144:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "143:9:8"
                  },
                  "scope": 469,
                  "src": "80:73:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dbed1e88",
                  "id": 439,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUnlockTime",
                  "nameLocation": "167:13:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "staker",
                        "nameLocation": "189:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "181:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "181:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "180:16:8"
                  },
                  "returnParameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "219:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "219:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "218:9:8"
                  },
                  "scope": 469,
                  "src": "158:70:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bf86d690",
                  "id": 444,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isShutdown",
                  "nameLocation": "242:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "252:2:8"
                  },
                  "returnParameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "277:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "276:6:8"
                  },
                  "scope": 469,
                  "src": "233:50:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c591aa98",
                  "id": 453,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "voted",
                  "nameLocation": "297:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "voter",
                        "nameLocation": "311:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "303:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "endBlock",
                        "nameLocation": "326:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "318:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:33:8"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "353:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "352:6:8"
                  },
                  "scope": 469,
                  "src": "288:71:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a694fc3a",
                  "id": 458,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stake",
                  "nameLocation": "373:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "387:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "379:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "379:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "378:16:8"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "403:0:8"
                  },
                  "scope": 469,
                  "src": "364:40:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 463,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "418:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "435:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "427:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "426:16:8"
                  },
                  "returnParameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "451:0:8"
                  },
                  "scope": 469,
                  "src": "409:43:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "51ae58af",
                  "id": 468,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "emergencyShutdown",
                  "nameLocation": "466:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "492:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "484:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "484:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "483:15:8"
                  },
                  "returnParameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "507:0:8"
                  },
                  "scope": 469,
                  "src": "457:51:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 470,
              "src": "56:454:8",
              "usedErrors": []
            }
          ],
          "src": "31:479:8"
        },
        "id": 8
      },
      "contracts/IVITA.sol": {
        "ast": {
          "absolutePath": "contracts/IVITA.sol",
          "exportedSymbols": {
            "IERC20": [
              227
            ],
            "IVITA": [
              482
            ]
          },
          "id": 483,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 471,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 472,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 483,
              "sourceUnit": 228,
              "src": "57:56:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 473,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 227,
                    "src": "134:6:9"
                  },
                  "id": 474,
                  "nodeType": "InheritanceSpecifier",
                  "src": "134:6:9"
                }
              ],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 482,
              "linearizedBaseContracts": [
                482,
                227
              ],
              "name": "IVITA",
              "nameLocation": "125:5:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "40c10f19",
                  "id": 481,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "156:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "169:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "161:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "161:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "186:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "178:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "178:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "160:33:9"
                  },
                  "returnParameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "202:0:9"
                  },
                  "scope": 482,
                  "src": "147:56:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 483,
              "src": "115:90:9",
              "usedErrors": []
            }
          ],
          "src": "33:173:9"
        },
        "id": 9
      },
      "contracts/Raphael.sol": {
        "ast": {
          "absolutePath": "contracts/Raphael.sol",
          "exportedSymbols": {
            "Context": [
              411
            ],
            "ERC721Holder": [
              388
            ],
            "IERC165": [
              423
            ],
            "IERC20": [
              227
            ],
            "IERC721": [
              343
            ],
            "IERC721Receiver": [
              361
            ],
            "IStaking": [
              469
            ],
            "IVITA": [
              482
            ],
            "Ownable": [
              109
            ],
            "Raphael": [
              1884
            ],
            "ReentrancyGuard": [
              149
            ]
          },
          "id": 1885,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 484,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 485,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1885,
              "sourceUnit": 344,
              "src": "57:58:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
              "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
              "id": 486,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1885,
              "sourceUnit": 389,
              "src": "116:69:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 487,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1885,
              "sourceUnit": 110,
              "src": "186:52:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 488,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1885,
              "sourceUnit": 150,
              "src": "239:62:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IStaking.sol",
              "file": "./IStaking.sol",
              "id": 489,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1885,
              "sourceUnit": 470,
              "src": "302:24:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IVITA.sol",
              "file": "./IVITA.sol",
              "id": 490,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1885,
              "sourceUnit": 483,
              "src": "327:21:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 491,
                    "name": "ERC721Holder",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 388,
                    "src": "370:12:10"
                  },
                  "id": 492,
                  "nodeType": "InheritanceSpecifier",
                  "src": "370:12:10"
                },
                {
                  "baseName": {
                    "id": 493,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 109,
                    "src": "384:7:10"
                  },
                  "id": 494,
                  "nodeType": "InheritanceSpecifier",
                  "src": "384:7:10"
                },
                {
                  "baseName": {
                    "id": 495,
                    "name": "ReentrancyGuard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 149,
                    "src": "393:15:10"
                  },
                  "id": 496,
                  "nodeType": "InheritanceSpecifier",
                  "src": "393:15:10"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1884,
              "linearizedBaseContracts": [
                1884,
                149,
                109,
                411,
                388,
                361
              ],
              "name": "Raphael",
              "nameLocation": "359:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Raphael.ProposalStatus",
                  "id": 503,
                  "members": [
                    {
                      "id": 497,
                      "name": "VOTING_NOT_STARTED",
                      "nameLocation": "483:18:10",
                      "nodeType": "EnumValue",
                      "src": "483:18:10"
                    },
                    {
                      "id": 498,
                      "name": "VOTING",
                      "nameLocation": "511:6:10",
                      "nodeType": "EnumValue",
                      "src": "511:6:10"
                    },
                    {
                      "id": 499,
                      "name": "VOTES_FINISHED",
                      "nameLocation": "527:14:10",
                      "nodeType": "EnumValue",
                      "src": "527:14:10"
                    },
                    {
                      "id": 500,
                      "name": "RESOLVED",
                      "nameLocation": "551:8:10",
                      "nodeType": "EnumValue",
                      "src": "551:8:10"
                    },
                    {
                      "id": 501,
                      "name": "CANCELLED",
                      "nameLocation": "569:9:10",
                      "nodeType": "EnumValue",
                      "src": "569:9:10"
                    },
                    {
                      "id": 502,
                      "name": "QUORUM_FAILED",
                      "nameLocation": "588:13:10",
                      "nodeType": "EnumValue",
                      "src": "588:13:10"
                    }
                  ],
                  "name": "ProposalStatus",
                  "nameLocation": "458:14:10",
                  "nodeType": "EnumDefinition",
                  "src": "453:154:10"
                },
                {
                  "canonicalName": "Raphael.Proposal",
                  "id": 517,
                  "members": [
                    {
                      "constant": false,
                      "id": 505,
                      "mutability": "mutable",
                      "name": "details",
                      "nameLocation": "646:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 517,
                      "src": "639:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 504,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "639:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "votesFor",
                      "nameLocation": "671:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 517,
                      "src": "663:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 506,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 509,
                      "mutability": "mutable",
                      "name": "votesAgainst",
                      "nameLocation": "697:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 517,
                      "src": "689:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 508,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "689:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 511,
                      "mutability": "mutable",
                      "name": "startBlock",
                      "nameLocation": "727:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 517,
                      "src": "719:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "719:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "endBlock",
                      "nameLocation": "755:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 517,
                      "src": "747:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "747:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "788:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 517,
                      "src": "773:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$503",
                        "typeString": "enum Raphael.ProposalStatus"
                      },
                      "typeName": {
                        "id": 515,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 514,
                          "name": "ProposalStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 503,
                          "src": "773:14:10"
                        },
                        "referencedDeclaration": 503,
                        "src": "773:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$503",
                          "typeString": "enum Raphael.ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Proposal",
                  "nameLocation": "620:8:10",
                  "nodeType": "StructDefinition",
                  "scope": 1884,
                  "src": "613:188:10",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "proposals",
                  "nameLocation": "885:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "848:46:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                    "typeString": "mapping(uint256 => struct Raphael.Proposal)"
                  },
                  "typeName": {
                    "id": 521,
                    "keyType": {
                      "id": 518,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "856:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "848:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                      "typeString": "mapping(uint256 => struct Raphael.Proposal)"
                    },
                    "valueType": {
                      "id": 520,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 519,
                        "name": "Proposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 517,
                        "src": "867:8:10"
                      },
                      "referencedDeclaration": 517,
                      "src": "867:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$517_storage_ptr",
                        "typeString": "struct Raphael.Proposal"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "voted",
                  "nameLocation": "954:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "901:58:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                    "typeString": "mapping(uint256 => mapping(address => bool))"
                  },
                  "typeName": {
                    "id": 527,
                    "keyType": {
                      "id": 523,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "909:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "901:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                      "typeString": "mapping(uint256 => mapping(address => bool))"
                    },
                    "valueType": {
                      "id": 526,
                      "keyType": {
                        "id": 524,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "928:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "920:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "valueType": {
                        "id": 525,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "da35c664",
                  "id": 530,
                  "mutability": "mutable",
                  "name": "proposalCount",
                  "nameLocation": "1004:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "989:28:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3aac5ada",
                  "id": 532,
                  "mutability": "mutable",
                  "name": "minVotesNeeded",
                  "nameLocation": "1038:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1023:29:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "nativeTokenAddress",
                  "nameLocation": "1075:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1059:34:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "stakingContractAddress",
                  "nameLocation": "1115:22:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1099:38:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "nftContractAddresses",
                  "nameLocation": "1161:20:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1143:38:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 537,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1143:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 538,
                    "nodeType": "ArrayTypeName",
                    "src": "1143:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "nativeTokenContract",
                  "nameLocation": "1193:19:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1187:25:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVITA_$482",
                    "typeString": "contract IVITA"
                  },
                  "typeName": {
                    "id": 541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 540,
                      "name": "IVITA",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 482,
                      "src": "1187:5:10"
                    },
                    "referencedDeclaration": 482,
                    "src": "1187:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVITA_$482",
                      "typeString": "contract IVITA"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "stakingContract",
                  "nameLocation": "1227:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1218:24:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStaking_$469",
                    "typeString": "contract IStaking"
                  },
                  "typeName": {
                    "id": 544,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 543,
                      "name": "IStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 469,
                      "src": "1218:8:10"
                    },
                    "referencedDeclaration": 469,
                    "src": "1218:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$469",
                      "typeString": "contract IStaking"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "shutdown",
                  "nameLocation": "1262:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1249:29:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1273:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "8337f8da",
                  "id": 551,
                  "mutability": "mutable",
                  "name": "CREATE_TO_VOTE_PROPOSAL_DELAY",
                  "nameLocation": "1300:29:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1285:52:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3138353030",
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1332:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18500_by_1",
                      "typeString": "int_const 18500"
                    },
                    "value": "18500"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a438d208",
                  "id": 554,
                  "mutability": "mutable",
                  "name": "VOTING_DURATION",
                  "nameLocation": "1369:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1354:38:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3330383530",
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1387:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_30850_by_1",
                      "typeString": "int_const 30850"
                    },
                    "value": "30850"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "b6a6d177",
                  "id": 557,
                  "mutability": "constant",
                  "name": "MIN_DURATION",
                  "nameLocation": "1589:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1565:40:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35",
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1604:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "b1724b46",
                  "id": 560,
                  "mutability": "constant",
                  "name": "MAX_DURATION",
                  "nameLocation": "1652:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "1628:45:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313930303030",
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1667:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_190000_by_1",
                      "typeString": "int_const 190000"
                    },
                    "value": "190000"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 564,
                  "name": "VotingDelayChanged",
                  "nameLocation": "1698:18:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newDuration",
                        "nameLocation": "1725:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 564,
                        "src": "1717:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1717:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1716:21:10"
                  },
                  "src": "1692:46:10"
                },
                {
                  "anonymous": false,
                  "id": 568,
                  "name": "VotingDurationChanged",
                  "nameLocation": "1749:21:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 566,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newDuration",
                        "nameLocation": "1779:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "1771:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1770:21:10"
                  },
                  "src": "1743:49:10"
                },
                {
                  "anonymous": false,
                  "id": 576,
                  "name": "NativeTokenChanged",
                  "nameLocation": "1803:18:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 570,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAddress",
                        "nameLocation": "1839:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1831:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1831:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 572,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldAddress",
                        "nameLocation": "1867:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1859:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1859:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 574,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "1895:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1887:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1887:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1821:89:10"
                  },
                  "src": "1797:114:10"
                },
                {
                  "anonymous": false,
                  "id": 584,
                  "name": "StakingAddressChanged",
                  "nameLocation": "1922:21:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAddress",
                        "nameLocation": "1961:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "1953:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1953:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldAddress",
                        "nameLocation": "1989:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "1981:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1981:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2017:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "2009:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1943:89:10"
                  },
                  "src": "1916:117:10"
                },
                {
                  "anonymous": false,
                  "id": 592,
                  "name": "NativeTokenTransferred",
                  "nameLocation": "2044:22:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 586,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "authorizedBy",
                        "nameLocation": "2084:12:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "2076:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2076:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 588,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2114:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "2106:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2106:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 590,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2134:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "2126:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2126:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2066:80:10"
                  },
                  "src": "2038:109:10"
                },
                {
                  "anonymous": false,
                  "id": 600,
                  "name": "NFTReceived",
                  "nameLocation": "2158:11:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftContract",
                        "nameLocation": "2178:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "2170:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2170:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 596,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2199:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "2191:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2191:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 598,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2215:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "2207:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2207:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2169:54:10"
                  },
                  "src": "2152:72:10"
                },
                {
                  "anonymous": false,
                  "id": 608,
                  "name": "NFTTransferred",
                  "nameLocation": "2235:14:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 602,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftContract",
                        "nameLocation": "2258:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "2250:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2250:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 604,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2279:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "2271:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 603,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 606,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2291:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "2283:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2283:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2249:50:10"
                  },
                  "src": "2229:71:10"
                },
                {
                  "anonymous": false,
                  "id": 614,
                  "name": "EmergencyShutdown",
                  "nameLocation": "2311:17:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 610,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2337:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 614,
                        "src": "2329:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2329:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 612,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "currentBlock",
                        "nameLocation": "2358:12:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 614,
                        "src": "2350:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2350:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2328:43:10"
                  },
                  "src": "2305:67:10"
                },
                {
                  "anonymous": false,
                  "id": 620,
                  "name": "EmergencyProposalCancellation",
                  "nameLocation": "2383:29:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2421:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "2413:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2413:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 618,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2442:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "2434:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2434:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2412:36:10"
                  },
                  "src": "2377:72:10"
                },
                {
                  "anonymous": false,
                  "id": 627,
                  "name": "EmergencyNFTApproval",
                  "nameLocation": "2460:20:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2498:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "2490:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2490:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftContractAddresses",
                        "nameLocation": "2529:20:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "2519:30:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2519:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 624,
                          "nodeType": "ArrayTypeName",
                          "src": "2519:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2480:75:10"
                  },
                  "src": "2454:102:10"
                },
                {
                  "anonymous": false,
                  "id": 637,
                  "name": "ProposalCreated",
                  "nameLocation": "2568:15:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 629,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "2601:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "2593:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2593:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 631,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "details",
                        "nameLocation": "2628:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "2621:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2621:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 633,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vote_start",
                        "nameLocation": "2653:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "2645:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2645:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 635,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vote_end",
                        "nameLocation": "2681:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "2673:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2673:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2583:112:10"
                  },
                  "src": "2562:134:10"
                },
                {
                  "anonymous": false,
                  "id": 644,
                  "name": "ProposalStatusChanged",
                  "nameLocation": "2707:21:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "2737:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "2729:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2729:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 642,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStatus",
                        "nameLocation": "2764:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "2749:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$503",
                          "typeString": "enum Raphael.ProposalStatus"
                        },
                        "typeName": {
                          "id": 641,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 640,
                            "name": "ProposalStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 503,
                            "src": "2749:14:10"
                          },
                          "referencedDeclaration": 503,
                          "src": "2749:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$503",
                            "typeString": "enum Raphael.ProposalStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2728:46:10"
                  },
                  "src": "2701:74:10"
                },
                {
                  "anonymous": false,
                  "id": 654,
                  "name": "Voted",
                  "nameLocation": "2787:5:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voter",
                        "nameLocation": "2801:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 654,
                        "src": "2793:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2793:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 648,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "2816:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 654,
                        "src": "2808:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "weight",
                        "nameLocation": "2836:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 654,
                        "src": "2828:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2828:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 652,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "direction",
                        "nameLocation": "2849:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 654,
                        "src": "2844:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2844:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2792:67:10"
                  },
                  "src": "2781:79:10"
                },
                {
                  "body": {
                    "id": 663,
                    "nodeType": "Block",
                    "src": "2889:81:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2907:9:10",
                              "subExpression": {
                                "id": 657,
                                "name": "shutdown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 548,
                                "src": "2908:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616e6e6f742062652063616c6c65642061667465722073687574646f776e",
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2918:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0",
                                "typeString": "literal_string \"cannot be called after shutdown\""
                              },
                              "value": "cannot be called after shutdown"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cea17b83aec1731adba241564895ca7de2ec3516b18667c65a3feb904412e3c0",
                                "typeString": "literal_string \"cannot be called after shutdown\""
                              }
                            ],
                            "id": 656,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2899:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2899:53:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 661,
                        "nodeType": "ExpressionStatement",
                        "src": "2899:53:10"
                      },
                      {
                        "id": 662,
                        "nodeType": "PlaceholderStatement",
                        "src": "2962:1:10"
                      }
                    ]
                  },
                  "id": 664,
                  "name": "notShutdown",
                  "nameLocation": "2875:11:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2886:2:10"
                  },
                  "src": "2866:104:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 679,
                    "nodeType": "Block",
                    "src": "3000:131:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 669,
                            "name": "proposalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "3010:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3026:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3010:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "3010:17:10"
                      },
                      {
                        "expression": {
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 673,
                            "name": "minVotesNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "3063:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_rational_964483200000000000000000_by_1",
                              "typeString": "int_const 964483200000000000000000"
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "39363434383332",
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3080:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9644832_by_1",
                                "typeString": "int_const 9644832"
                              },
                              "value": "9644832"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653137",
                              "id": 675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3090:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "1e17"
                            },
                            "src": "3080:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_964483200000000000000000_by_1",
                              "typeString": "int_const 964483200000000000000000"
                            }
                          },
                          "src": "3063:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 678,
                        "nodeType": "ExpressionStatement",
                        "src": "3063:31:10"
                      }
                    ]
                  },
                  "id": 680,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 667,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 666,
                        "name": "Ownable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 109,
                        "src": "2990:7:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2990:9:10"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2987:2:10"
                  },
                  "returnParameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3000:0:10"
                  },
                  "scope": 1884,
                  "src": "2976:155:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "3570:401:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 699,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "3588:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 700,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "3605:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3588:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20646f65736e2774206578697374",
                              "id": 702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3620:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              },
                              "value": "Proposal doesn't exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              }
                            ],
                            "id": 698,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3580:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3580:65:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 704,
                        "nodeType": "ExpressionStatement",
                        "src": "3580:65:10"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 705,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "3676:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 707,
                                "indexExpression": {
                                  "id": 706,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "3686:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3676:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "details",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 505,
                              "src": "3676:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 709,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "3722:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 711,
                                "indexExpression": {
                                  "id": 710,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "3732:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3722:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 712,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votesFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 507,
                              "src": "3722:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 713,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "3769:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 715,
                                "indexExpression": {
                                  "id": 714,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "3779:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3769:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 716,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votesAgainst",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 509,
                              "src": "3769:37:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 717,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "3820:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 719,
                                "indexExpression": {
                                  "id": 718,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "3830:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3820:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 511,
                              "src": "3820:35:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 721,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "3869:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 723,
                                "indexExpression": {
                                  "id": 722,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "3879:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3869:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 513,
                              "src": "3869:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 727,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 522,
                                      "src": "3922:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                        "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                      }
                                    },
                                    "id": 729,
                                    "indexExpression": {
                                      "id": 728,
                                      "name": "proposalIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 683,
                                      "src": "3932:13:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3922:24:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                      "typeString": "struct Raphael.Proposal storage ref"
                                    }
                                  },
                                  "id": 730,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 516,
                                  "src": "3922:31:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                ],
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3916:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 725,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3916:5:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3916:38:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "id": 732,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3662:302:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$",
                            "typeString": "tuple(string storage ref,uint256,uint256,uint256,uint256,uint8)"
                          }
                        },
                        "functionReturnParameters": 697,
                        "id": 733,
                        "nodeType": "Return",
                        "src": "3655:309:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 681,
                    "nodeType": "StructuredDocumentation",
                    "src": "3137:191:10",
                    "text": " @dev returns all data for a specified proposal\n @param proposalIndex           uint index of proposal\n @return string, 5 x uint (the parts of a Proposal object)"
                  },
                  "functionSelector": "6e768530",
                  "id": 735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProposalData",
                  "nameLocation": "3342:15:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "proposalIndex",
                        "nameLocation": "3366:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3358:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3358:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3357:23:10"
                  },
                  "returnParameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3439:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3439:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3466:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3487:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3487:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 692,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3508:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3508:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3529:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3529:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3550:5:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3550:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3425:140:10"
                  },
                  "scope": 1884,
                  "src": "3333:638:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 814,
                    "nodeType": "Block",
                    "src": "4256:811:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 744,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "4274:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 745,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "4291:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4274:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20646f65736e2774206578697374",
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4306:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              },
                              "value": "Proposal doesn't exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              }
                            ],
                            "id": 743,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4266:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4266:65:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 749,
                        "nodeType": "ExpressionStatement",
                        "src": "4266:65:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  },
                                  "id": 757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 751,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 522,
                                        "src": "4362:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                          "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                        }
                                      },
                                      "id": 753,
                                      "indexExpression": {
                                        "id": 752,
                                        "name": "proposalIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 738,
                                        "src": "4372:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4362:24:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                        "typeString": "struct Raphael.Proposal storage ref"
                                      }
                                    },
                                    "id": 754,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "4362:31:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 755,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "4397:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "VOTES_FINISHED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 499,
                                    "src": "4397:29:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "4362:64:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  },
                                  "id": 764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 758,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 522,
                                        "src": "4446:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                          "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                        }
                                      },
                                      "id": 760,
                                      "indexExpression": {
                                        "id": 759,
                                        "name": "proposalIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 738,
                                        "src": "4456:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4446:24:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                        "typeString": "struct Raphael.Proposal storage ref"
                                      }
                                    },
                                    "id": 761,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "4446:31:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 762,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "4481:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "RESOLVED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 500,
                                    "src": "4481:23:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "4446:58:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4362:142:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                },
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 766,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 522,
                                      "src": "4524:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                        "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                      }
                                    },
                                    "id": 768,
                                    "indexExpression": {
                                      "id": 767,
                                      "name": "proposalIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 738,
                                      "src": "4534:13:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4524:24:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                      "typeString": "struct Raphael.Proposal storage ref"
                                    }
                                  },
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 516,
                                  "src": "4524:31:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 770,
                                    "name": "ProposalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "4559:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                      "typeString": "type(enum Raphael.ProposalStatus)"
                                    }
                                  },
                                  "id": 771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "QUORUM_FAILED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 502,
                                  "src": "4559:28:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "src": "4524:63:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4362:225:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c206d75737420626520616674657220766f74696e67",
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4601:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8",
                                "typeString": "literal_string \"Proposal must be after voting\""
                              },
                              "value": "Proposal must be after voting"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac0bf581218beca7c03195b27abca145843ec7b29777abe04944cec118510b8",
                                "typeString": "literal_string \"Proposal must be after voting\""
                              }
                            ],
                            "id": 750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4341:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4341:301:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 776,
                        "nodeType": "ExpressionStatement",
                        "src": "4341:301:10"
                      },
                      {
                        "assignments": [
                          778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 778,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "4657:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 814,
                            "src": "4652:11:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 777,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4652:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 779,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4652:11:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 780,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "4731:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 782,
                                "indexExpression": {
                                  "id": 781,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 738,
                                  "src": "4741:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4731:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 783,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votesFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 507,
                              "src": "4731:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 784,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "4779:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                    "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                  }
                                },
                                "id": 786,
                                "indexExpression": {
                                  "id": 785,
                                  "name": "proposalIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 738,
                                  "src": "4789:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4779:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                  "typeString": "struct Raphael.Proposal storage ref"
                                }
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votesAgainst",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 509,
                              "src": "4779:37:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4731:85:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 789,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 522,
                                        "src": "4838:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                          "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                        }
                                      },
                                      "id": 791,
                                      "indexExpression": {
                                        "id": 790,
                                        "name": "proposalIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 738,
                                        "src": "4848:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4838:24:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                        "typeString": "struct Raphael.Proposal storage ref"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "4838:31:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 793,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "4873:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "VOTES_FINISHED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 499,
                                    "src": "4873:29:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "4838:64:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  },
                                  "id": 802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 796,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 522,
                                        "src": "4922:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                          "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                        }
                                      },
                                      "id": 798,
                                      "indexExpression": {
                                        "id": 797,
                                        "name": "proposalIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 738,
                                        "src": "4932:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4922:24:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                        "typeString": "struct Raphael.Proposal storage ref"
                                      }
                                    },
                                    "id": 799,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "4922:31:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 800,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "4957:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "RESOLVED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 500,
                                    "src": "4957:23:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "4922:58:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4838:142:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 804,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4820:177:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4731:266:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 811,
                        "nodeType": "IfStatement",
                        "src": "4727:310:10",
                        "trueBody": {
                          "id": 810,
                          "nodeType": "Block",
                          "src": "4999:38:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 806,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 778,
                                  "src": "5013:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5022:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5013:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 809,
                              "nodeType": "ExpressionStatement",
                              "src": "5013:13:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 812,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "5054:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 742,
                        "id": 813,
                        "nodeType": "Return",
                        "src": "5047:13:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 736,
                    "nodeType": "StructuredDocumentation",
                    "src": "3977:169:10",
                    "text": " @dev returns result of a proposal\n @param proposalIndex           uint index of proposal\n @return true if proposal passed, otherwise false"
                  },
                  "functionSelector": "f91f88f7",
                  "id": 815,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProposalResult",
                  "nameLocation": "4160:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "proposalIndex",
                        "nameLocation": "4186:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "4178:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4178:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4177:23:10"
                  },
                  "returnParameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "4246:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4246:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4245:6:10"
                  },
                  "scope": 1884,
                  "src": "4151:916:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 823,
                    "nodeType": "Block",
                    "src": "5258:38:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 821,
                          "name": "minVotesNeeded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "5275:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 820,
                        "id": 822,
                        "nodeType": "Return",
                        "src": "5268:21:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 816,
                    "nodeType": "StructuredDocumentation",
                    "src": "5073:121:10",
                    "text": " @dev returns minimum amount of votes needed for a proposal to pass\n @return minVotesNeeded value"
                  },
                  "functionSelector": "19cd0575",
                  "id": 824,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMinVotesNeeded",
                  "nameLocation": "5208:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 817,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5225:2:10"
                  },
                  "returnParameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 819,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "5249:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5249:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5248:9:10"
                  },
                  "scope": 1884,
                  "src": "5199:97:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "5502:42:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 830,
                          "name": "nativeTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "5519:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 829,
                        "id": 831,
                        "nodeType": "Return",
                        "src": "5512:25:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 825,
                    "nodeType": "StructuredDocumentation",
                    "src": "5302:132:10",
                    "text": " @dev returns address of the token associated with the DAO\n @return the address of the token contract"
                  },
                  "functionSelector": "11ced45c",
                  "id": 833,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNativeTokenAddress",
                  "nameLocation": "5448:21:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5469:2:10"
                  },
                  "returnParameters": {
                    "id": 829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 828,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "5493:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5493:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5492:9:10"
                  },
                  "scope": 1884,
                  "src": "5439:105:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 847,
                    "nodeType": "Block",
                    "src": "5687:68:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 843,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5742:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raphael_$1884",
                                    "typeString": "contract Raphael"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raphael_$1884",
                                    "typeString": "contract Raphael"
                                  }
                                ],
                                "id": 842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5734:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 841,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5734:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5734:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 839,
                              "name": "nativeTokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "5704:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVITA_$482",
                                "typeString": "contract IVITA"
                              }
                            },
                            "id": 840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "5704:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5704:44:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 838,
                        "id": 846,
                        "nodeType": "Return",
                        "src": "5697:51:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 834,
                    "nodeType": "StructuredDocumentation",
                    "src": "5550:69:10",
                    "text": " @dev returns the DAO's balance of the native token"
                  },
                  "functionSelector": "441a39f3",
                  "id": 848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNativeTokenBalance",
                  "nameLocation": "5633:21:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5654:2:10"
                  },
                  "returnParameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "5678:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5678:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5677:9:10"
                  },
                  "scope": 1884,
                  "src": "5624:131:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 857,
                    "nodeType": "Block",
                    "src": "5955:44:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 855,
                          "name": "nftContractAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 539,
                          "src": "5972:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 854,
                        "id": 856,
                        "nodeType": "Return",
                        "src": "5965:27:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "5761:115:10",
                    "text": " @dev returns an array of the NFTs owned by the DAO\n @return an array of nft structs"
                  },
                  "functionSelector": "c5089dc0",
                  "id": 858,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNftContractAddresses",
                  "nameLocation": "5890:23:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5913:2:10"
                  },
                  "returnParameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "5937:16:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 851,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5937:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 852,
                          "nodeType": "ArrayTypeName",
                          "src": "5937:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5936:18:10"
                  },
                  "scope": 1884,
                  "src": "5881:118:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 865,
                    "nodeType": "Block",
                    "src": "6064:46:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 863,
                          "name": "stakingContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "6081:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 862,
                        "id": 864,
                        "nodeType": "Return",
                        "src": "6074:29:10"
                      }
                    ]
                  },
                  "functionSelector": "0e9ed68b",
                  "id": 866,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakingAddress",
                  "nameLocation": "6014:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 859,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6031:2:10"
                  },
                  "returnParameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "6055:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6055:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6054:9:10"
                  },
                  "scope": 1884,
                  "src": "6005:105:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "6227:32:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 872,
                          "name": "shutdown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "6244:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 871,
                        "id": 873,
                        "nodeType": "Return",
                        "src": "6237:15:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 867,
                    "nodeType": "StructuredDocumentation",
                    "src": "6116:57:10",
                    "text": " @dev returns if DAO is shutdown or not"
                  },
                  "functionSelector": "bf86d690",
                  "id": 875,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isShutdown",
                  "nameLocation": "6187:10:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 868,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6197:2:10"
                  },
                  "returnParameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "6221:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6221:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6220:6:10"
                  },
                  "scope": 1884,
                  "src": "6178:81:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "6526:251:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 883,
                                  "name": "newDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 877,
                                  "src": "6557:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 884,
                                  "name": "MIN_DURATION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 557,
                                  "src": "6571:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6557:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 886,
                                  "name": "newDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 877,
                                  "src": "6587:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 887,
                                  "name": "MAX_DURATION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "6601:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6587:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6557:56:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6475726174696f6e206d757374206265203e3330383530203c313930303030",
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6627:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd",
                                "typeString": "literal_string \"duration must be >30850 <190000\""
                              },
                              "value": "duration must be >30850 <190000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd",
                                "typeString": "literal_string \"duration must be >30850 <190000\""
                              }
                            ],
                            "id": 882,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6536:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6536:134:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "6536:134:10"
                      },
                      {
                        "expression": {
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 893,
                            "name": "CREATE_TO_VOTE_PROPOSAL_DELAY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "6680:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 894,
                            "name": "newDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "6712:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6680:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "6680:43:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 898,
                              "name": "newDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "6758:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 897,
                            "name": "VotingDelayChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "6739:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6739:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 900,
                        "nodeType": "EmitStatement",
                        "src": "6734:36:10"
                      }
                    ]
                  },
                  "functionSelector": "0076796e",
                  "id": 902,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 880,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 879,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6516:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6516:9:10"
                    }
                  ],
                  "name": "setVotingDelayDuration",
                  "nameLocation": "6465:22:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 877,
                        "mutability": "mutable",
                        "name": "newDuration",
                        "nameLocation": "6496:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "6488:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 876,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:21:10"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6526:0:10"
                  },
                  "scope": 1884,
                  "src": "6456:321:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 928,
                    "nodeType": "Block",
                    "src": "6848:240:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 910,
                                  "name": "newDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "6879:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 911,
                                  "name": "MIN_DURATION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 557,
                                  "src": "6893:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6879:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 913,
                                  "name": "newDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "6909:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 914,
                                  "name": "MAX_DURATION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "6923:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6909:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6879:56:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6475726174696f6e206d757374206265203e3330383530203c313930303030",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6949:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd",
                                "typeString": "literal_string \"duration must be >30850 <190000\""
                              },
                              "value": "duration must be >30850 <190000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9f50f8cc3b494b647554523264bc1dc1a273a08a2383f270b94fe1c553a89dfd",
                                "typeString": "literal_string \"duration must be >30850 <190000\""
                              }
                            ],
                            "id": 909,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6858:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6858:134:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "6858:134:10"
                      },
                      {
                        "expression": {
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 920,
                            "name": "VOTING_DURATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "7002:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 921,
                            "name": "newDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "7020:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7002:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 923,
                        "nodeType": "ExpressionStatement",
                        "src": "7002:29:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 925,
                              "name": "newDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "7069:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 924,
                            "name": "VotingDurationChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "7047:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7047:34:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 927,
                        "nodeType": "EmitStatement",
                        "src": "7042:39:10"
                      }
                    ]
                  },
                  "functionSelector": "5bcfadb5",
                  "id": 929,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 907,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 906,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6838:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6838:9:10"
                    }
                  ],
                  "name": "setVotingDuration",
                  "nameLocation": "6792:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "newDuration",
                        "nameLocation": "6818:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 929,
                        "src": "6810:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:21:10"
                  },
                  "returnParameters": {
                    "id": 908,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6848:0:10"
                  },
                  "scope": 1884,
                  "src": "6783:305:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "7354:241:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 940,
                                "name": "newVotesNeeded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 932,
                                "src": "7372:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7389:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7372:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "71756f72756d2063616e6e6f742062652030",
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7392:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682",
                                "typeString": "literal_string \"quorum cannot be 0\""
                              },
                              "value": "quorum cannot be 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_795dd36369bf6e49f88bd7d7b7486c7fb4fb7795951e8fd11cdc28fa0cb24682",
                                "typeString": "literal_string \"quorum cannot be 0\""
                              }
                            ],
                            "id": 939,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7364:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7364:49:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 945,
                        "nodeType": "ExpressionStatement",
                        "src": "7364:49:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 947,
                                "name": "newVotesNeeded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 932,
                                "src": "7444:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 948,
                                    "name": "nativeTokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 542,
                                    "src": "7461:19:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVITA_$482",
                                      "typeString": "contract IVITA"
                                    }
                                  },
                                  "id": 949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 158,
                                  "src": "7461:31:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7461:33:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7444:50:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "766f746573206e6565646564203e20746f6b656e20737570706c79",
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7508:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e",
                                "typeString": "literal_string \"votes needed > token supply\""
                              },
                              "value": "votes needed > token supply"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_67ba727f04e96b956dd02bc950af4c34167a277c41ca088e7d0a67e8ea0c4d8e",
                                "typeString": "literal_string \"votes needed > token supply\""
                              }
                            ],
                            "id": 946,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7423:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7423:124:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 954,
                        "nodeType": "ExpressionStatement",
                        "src": "7423:124:10"
                      },
                      {
                        "expression": {
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 955,
                            "name": "minVotesNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "7557:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 956,
                            "name": "newVotesNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "7574:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7557:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "7557:31:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 930,
                    "nodeType": "StructuredDocumentation",
                    "src": "7094:147:10",
                    "text": " @dev Updates the min total votes needed for a proposal to pass\n @param newVotesNeeded          uint new min vote threshold"
                  },
                  "functionSelector": "ee8bcce6",
                  "id": 960,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 935,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 934,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7320:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7320:9:10"
                    },
                    {
                      "id": 937,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 936,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "7338:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7338:11:10"
                    }
                  ],
                  "name": "setMinVotesNeeded",
                  "nameLocation": "7255:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "newVotesNeeded",
                        "nameLocation": "7281:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 960,
                        "src": "7273:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7273:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7272:24:10"
                  },
                  "returnParameters": {
                    "id": 938,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7354:0:10"
                  },
                  "scope": 1884,
                  "src": "7246:349:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 991,
                    "nodeType": "Block",
                    "src": "7915:310:10",
                    "statements": [
                      {
                        "assignments": [
                          971
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 971,
                            "mutability": "mutable",
                            "name": "oldAddress",
                            "nameLocation": "7933:10:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 991,
                            "src": "7925:18:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 970,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7925:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 973,
                        "initialValue": {
                          "id": 972,
                          "name": "stakingContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "7946:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7925:43:10"
                      },
                      {
                        "expression": {
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 974,
                            "name": "stakingContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "7978:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 975,
                            "name": "_stakingContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "8003:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7978:48:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "7978:48:10"
                      },
                      {
                        "expression": {
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 978,
                            "name": "stakingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "8036:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStaking_$469",
                              "typeString": "contract IStaking"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 980,
                                "name": "stakingContractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "8063:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 979,
                              "name": "IStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "8054:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IStaking_$469_$",
                                "typeString": "type(contract IStaking)"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8054:32:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStaking_$469",
                              "typeString": "contract IStaking"
                            }
                          },
                          "src": "8036:50:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStaking_$469",
                            "typeString": "contract IStaking"
                          }
                        },
                        "id": 983,
                        "nodeType": "ExpressionStatement",
                        "src": "8036:50:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 985,
                              "name": "stakingContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "8136:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 986,
                              "name": "oldAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "8172:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 987,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "8196:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8196:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 984,
                            "name": "StakingAddressChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "8101:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8101:117:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 990,
                        "nodeType": "EmitStatement",
                        "src": "8096:122:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 961,
                    "nodeType": "StructuredDocumentation",
                    "src": "7601:192:10",
                    "text": " @dev allows admins to set the address of the staking contract associated with the DAO\n @param _stakingContractAddress  the (new) address of the staking contract"
                  },
                  "functionSelector": "f4e0d9ac",
                  "id": 992,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 966,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 965,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7881:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7881:9:10"
                    },
                    {
                      "id": 968,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 967,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "7899:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7899:11:10"
                    }
                  ],
                  "name": "setStakingAddress",
                  "nameLocation": "7807:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 963,
                        "mutability": "mutable",
                        "name": "_stakingContractAddress",
                        "nameLocation": "7833:23:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "7825:31:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7825:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7824:33:10"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7915:0:10"
                  },
                  "scope": 1884,
                  "src": "7798:427:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "8521:243:10",
                    "statements": [
                      {
                        "assignments": [
                          1003
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1003,
                            "mutability": "mutable",
                            "name": "oldAddress",
                            "nameLocation": "8539:10:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1023,
                            "src": "8531:18:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1002,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8531:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1005,
                        "initialValue": {
                          "id": 1004,
                          "name": "nativeTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "8552:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8531:39:10"
                      },
                      {
                        "expression": {
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1006,
                            "name": "nativeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "8580:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1007,
                            "name": "tokenContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "8601:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8580:41:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "8580:41:10"
                      },
                      {
                        "expression": {
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1010,
                            "name": "nativeTokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "8631:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVITA_$482",
                              "typeString": "contract IVITA"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1012,
                                "name": "nativeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 534,
                                "src": "8659:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1011,
                              "name": "IVITA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "8653:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVITA_$482_$",
                                "typeString": "type(contract IVITA)"
                              }
                            },
                            "id": 1013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8653:25:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVITA_$482",
                              "typeString": "contract IVITA"
                            }
                          },
                          "src": "8631:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVITA_$482",
                            "typeString": "contract IVITA"
                          }
                        },
                        "id": 1015,
                        "nodeType": "ExpressionStatement",
                        "src": "8631:47:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1017,
                              "name": "nativeTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "8712:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1018,
                              "name": "oldAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "8732:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1019,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "8744:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8744:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1016,
                            "name": "NativeTokenChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "8693:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8693:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1022,
                        "nodeType": "EmitStatement",
                        "src": "8688:69:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 993,
                    "nodeType": "StructuredDocumentation",
                    "src": "8231:167:10",
                    "text": " @dev allows admins to set the address of the token associated with the DAO\n @param tokenContractAddress  the address of the ERC20 asset"
                  },
                  "functionSelector": "e82368ab",
                  "id": 1024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 998,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 997,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8487:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8487:9:10"
                    },
                    {
                      "id": 1000,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 999,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "8505:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8505:11:10"
                    }
                  ],
                  "name": "setNativeTokenAddress",
                  "nameLocation": "8412:21:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "tokenContractAddress",
                        "nameLocation": "8442:20:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "8434:28:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8434:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8433:30:10"
                  },
                  "returnParameters": {
                    "id": 1001,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8521:0:10"
                  },
                  "scope": 1884,
                  "src": "8403:361:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1099,
                    "nodeType": "Block",
                    "src": "9086:943:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1037,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 399,
                                      "src": "9150:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 1038,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9150:12:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1035,
                                    "name": "stakingContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 545,
                                    "src": "9117:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStaking_$469",
                                      "typeString": "contract IStaking"
                                    }
                                  },
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getStakedBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 432,
                                  "src": "9117:32:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9117:46:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9166:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9117:50:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d757374207374616b6520746f206372656174652070726f706f73616c",
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9181:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd",
                                "typeString": "literal_string \"must stake to create proposal\""
                              },
                              "value": "must stake to create proposal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af162bd4f5f1932032bf45d18ac7bb1418cbec775281f25fa01ac4e1dda303cd",
                                "typeString": "literal_string \"must stake to create proposal\""
                              }
                            ],
                            "id": 1034,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9096:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9096:126:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1044,
                        "nodeType": "ExpressionStatement",
                        "src": "9096:126:10"
                      },
                      {
                        "assignments": [
                          1046
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1046,
                            "mutability": "mutable",
                            "name": "start_block",
                            "nameLocation": "9240:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1099,
                            "src": "9232:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1045,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9232:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1051,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1047,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9254:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "9254:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1049,
                            "name": "CREATE_TO_VOTE_PROPOSAL_DELAY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "9269:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9254:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9232:66:10"
                      },
                      {
                        "assignments": [
                          1053
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1053,
                            "mutability": "mutable",
                            "name": "end_block",
                            "nameLocation": "9316:9:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1099,
                            "src": "9308:17:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1052,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9308:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1057,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1054,
                            "name": "start_block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "9328:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1055,
                            "name": "VOTING_DURATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "9342:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9328:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9308:49:10"
                      },
                      {
                        "assignments": [
                          1060
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1060,
                            "mutability": "mutable",
                            "name": "newProposal",
                            "nameLocation": "9384:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1099,
                            "src": "9368:27:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                              "typeString": "struct Raphael.Proposal"
                            },
                            "typeName": {
                              "id": 1059,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1058,
                                "name": "Proposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 517,
                                "src": "9368:8:10"
                              },
                              "referencedDeclaration": 517,
                              "src": "9368:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$517_storage_ptr",
                                "typeString": "struct Raphael.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1070,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1062,
                              "name": "details",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "9436:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9461:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 1064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9491:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1065,
                              "name": "start_block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1046,
                              "src": "9525:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1066,
                              "name": "end_block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "9554:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1067,
                                "name": "ProposalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "9581:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                  "typeString": "type(enum Raphael.ProposalStatus)"
                                }
                              },
                              "id": 1068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "VOTING_NOT_STARTED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 497,
                              "src": "9581:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            ],
                            "id": 1061,
                            "name": "Proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "9410:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Proposal_$517_storage_ptr_$",
                              "typeString": "type(struct Raphael.Proposal storage pointer)"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9410:218:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                            "typeString": "struct Raphael.Proposal memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9368:260:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1074,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 399,
                                    "src": "9682:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9682:12:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1076,
                                    "name": "newProposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1060,
                                    "src": "9696:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1077,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 513,
                                  "src": "9696:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1072,
                                  "name": "stakingContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 545,
                                  "src": "9660:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStaking_$469",
                                    "typeString": "contract IStaking"
                                  }
                                },
                                "id": 1073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 453,
                                "src": "9660:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9660:57:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63726561746550726f706f73616c3a20746f6b656e206c6f636b206661696c",
                              "id": 1079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9731:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1",
                                "typeString": "literal_string \"createProposal: token lock fail\""
                              },
                              "value": "createProposal: token lock fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_419b84f078557be2ce94a906aac459605c8d9ce76447ffb32679ee6051c64aa1",
                                "typeString": "literal_string \"createProposal: token lock fail\""
                              }
                            ],
                            "id": 1071,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9639:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9639:135:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1081,
                        "nodeType": "ExpressionStatement",
                        "src": "9639:135:10"
                      },
                      {
                        "expression": {
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1082,
                            "name": "proposalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "9784:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9801:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9784:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "9784:18:10"
                      },
                      {
                        "expression": {
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1086,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "9849:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                              }
                            },
                            "id": 1088,
                            "indexExpression": {
                              "id": 1087,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "9859:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9849:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_storage",
                              "typeString": "struct Raphael.Proposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1089,
                            "name": "newProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "9876:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                              "typeString": "struct Raphael.Proposal memory"
                            }
                          },
                          "src": "9849:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$517_storage",
                            "typeString": "struct Raphael.Proposal storage ref"
                          }
                        },
                        "id": 1091,
                        "nodeType": "ExpressionStatement",
                        "src": "9849:38:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1093,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "9975:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1094,
                              "name": "details",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "9990:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1095,
                              "name": "start_block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1046,
                              "src": "9999:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1096,
                              "name": "end_block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "10012:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1092,
                            "name": "ProposalCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "9959:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,string memory,uint256,uint256)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9959:63:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1098,
                        "nodeType": "EmitStatement",
                        "src": "9954:68:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1025,
                    "nodeType": "StructuredDocumentation",
                    "src": "8864:110:10",
                    "text": " @dev Creates a proposal\n @param details           string with proposal details"
                  },
                  "functionSelector": "49c2a1a6",
                  "id": 1100,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1030,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1029,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "9049:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9049:11:10"
                    },
                    {
                      "id": 1032,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1031,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 148,
                        "src": "9069:12:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9069:12:10"
                    }
                  ],
                  "name": "createProposal",
                  "nameLocation": "8988:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1028,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "mutability": "mutable",
                        "name": "details",
                        "nameLocation": "9017:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "9003:21:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9003:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9002:23:10"
                  },
                  "returnParameters": {
                    "id": 1033,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9086:0:10"
                  },
                  "scope": 1884,
                  "src": "8979:1050:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1284,
                    "nodeType": "Block",
                    "src": "10242:2256:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1109,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1103,
                                "src": "10260:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1110,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "10277:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10260:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20646f65736e2774206578697374",
                              "id": 1112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10292:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              },
                              "value": "Proposal doesn't exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              }
                            ],
                            "id": 1108,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10252:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10252:65:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1114,
                        "nodeType": "ExpressionStatement",
                        "src": "10252:65:10"
                      },
                      {
                        "assignments": [
                          1117
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1117,
                            "mutability": "mutable",
                            "name": "currentProp",
                            "nameLocation": "10344:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1284,
                            "src": "10328:27:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                              "typeString": "struct Raphael.Proposal"
                            },
                            "typeName": {
                              "id": 1116,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1115,
                                "name": "Proposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 517,
                                "src": "10328:8:10"
                              },
                              "referencedDeclaration": 517,
                              "src": "10328:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$517_storage_ptr",
                                "typeString": "struct Raphael.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1121,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1118,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "10358:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                              "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                            }
                          },
                          "id": 1120,
                          "indexExpression": {
                            "id": 1119,
                            "name": "proposalIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "10368:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10358:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$517_storage",
                            "typeString": "struct Raphael.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10328:54:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1123,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "10479:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "10479:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1125,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "10501:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CANCELLED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 501,
                                "src": "10501:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "10479:46:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c2063616e63656c6c6564",
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10539:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe",
                                "typeString": "literal_string \"Proposal cancelled\""
                              },
                              "value": "Proposal cancelled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ca0db95289ee1f8846d028949cd42688b063e7298757cac2a8457a59f59bbe",
                                "typeString": "literal_string \"Proposal cancelled\""
                              }
                            ],
                            "id": 1122,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10458:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10458:111:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "10458:111:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1132,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "10600:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1133,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "10600:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1134,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "10622:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "RESOLVED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 500,
                                "src": "10622:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "10600:45:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20616c7265616479207265736f6c766564",
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10659:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d",
                                "typeString": "literal_string \"Proposal already resolved\""
                              },
                              "value": "Proposal already resolved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d",
                                "typeString": "literal_string \"Proposal already resolved\""
                              }
                            ],
                            "id": 1131,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10579:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10579:117:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1139,
                        "nodeType": "ExpressionStatement",
                        "src": "10579:117:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1141,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "10727:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "10727:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1143,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "10749:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "QUORUM_FAILED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 502,
                                "src": "10749:28:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "10727:50:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c206661696c656420746f206d6565742071756f72756d",
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10791:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6",
                                "typeString": "literal_string \"Proposal failed to meet quorum\""
                              },
                              "value": "Proposal failed to meet quorum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df63669f440dee7cadc99fcb30857fcf052dbba633eaeb9caa2f7700f3f3bbe6",
                                "typeString": "literal_string \"Proposal failed to meet quorum\""
                              }
                            ],
                            "id": 1140,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10706:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10706:127:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1148,
                        "nodeType": "ExpressionStatement",
                        "src": "10706:127:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                              "typeString": "enum Raphael.ProposalStatus"
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1149,
                                "name": "currentProp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1117,
                                "src": "10941:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                  "typeString": "struct Raphael.Proposal memory"
                                }
                              },
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 516,
                              "src": "10941:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1151,
                                "name": "ProposalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "10963:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                  "typeString": "type(enum Raphael.ProposalStatus)"
                                }
                              },
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "VOTING_NOT_STARTED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 497,
                              "src": "10963:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            },
                            "src": "10941:55:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1154,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11012:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "11012:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 1156,
                                "name": "currentProp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1117,
                                "src": "11027:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                  "typeString": "struct Raphael.Proposal memory"
                                }
                              },
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 511,
                              "src": "11027:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11012:37:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10941:108:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1165,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "11183:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1166,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 516,
                                  "src": "11183:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1167,
                                    "name": "ProposalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "11205:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                      "typeString": "type(enum Raphael.ProposalStatus)"
                                    }
                                  },
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "VOTING",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 498,
                                  "src": "11205:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "src": "11183:43:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1170,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11242:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "11242:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1172,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "11258:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 511,
                                  "src": "11258:22:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11242:38:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11183:97:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1176,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11296:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "11296:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1178,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "11312:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 513,
                                "src": "11312:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11296:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11183:149:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1187,
                          "nodeType": "IfStatement",
                          "src": "11128:272:10",
                          "trueBody": {
                            "id": 1186,
                            "nodeType": "Block",
                            "src": "11343:57:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "5374696c6c20696e20766f74696e6720706572696f64",
                                      "id": 1183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11364:24:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2",
                                        "typeString": "literal_string \"Still in voting period\""
                                      },
                                      "value": "Still in voting period"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_10868ad51330a6daa0f5da347205810a4c24b4cdb1cb0c6ab13f7189ca7afed2",
                                        "typeString": "literal_string \"Still in voting period\""
                                      }
                                    ],
                                    "id": 1182,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -19,
                                      -19
                                    ],
                                    "referencedDeclaration": -19,
                                    "src": "11357:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory) pure"
                                    }
                                  },
                                  "id": 1184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11357:32:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1185,
                                "nodeType": "ExpressionStatement",
                                "src": "11357:32:10"
                              }
                            ]
                          }
                        },
                        "id": 1188,
                        "nodeType": "IfStatement",
                        "src": "10882:518:10",
                        "trueBody": {
                          "id": 1164,
                          "nodeType": "Block",
                          "src": "11060:62:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "546f6f206561726c7920746f206d6f766520746f20766f74696e67",
                                    "id": 1161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11081:29:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0",
                                      "typeString": "literal_string \"Too early to move to voting\""
                                    },
                                    "value": "Too early to move to voting"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_a3563f4bc8315dc918e5152dbbef8f558f6759e4ead61f77c88fc0fe78f54bd0",
                                      "typeString": "literal_string \"Too early to move to voting\""
                                    }
                                  ],
                                  "id": 1160,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "11074:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11074:37:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1163,
                              "nodeType": "ExpressionStatement",
                              "src": "11074:37:10"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1189,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11427:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "11427:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1191,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "11443:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1192,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 511,
                                "src": "11443:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11427:38:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1194,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11481:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "11481:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1196,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "11497:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 513,
                                "src": "11497:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11481:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11427:90:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                              "typeString": "enum Raphael.ProposalStatus"
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1200,
                                "name": "currentProp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1117,
                                "src": "11533:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                  "typeString": "struct Raphael.Proposal memory"
                                }
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 516,
                              "src": "11533:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 1202,
                                "name": "ProposalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "11555:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                  "typeString": "type(enum Raphael.ProposalStatus)"
                                }
                              },
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "VOTING",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 498,
                              "src": "11555:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            },
                            "src": "11533:43:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11427:149:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1214,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11677:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "11677:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1216,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "11692:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 511,
                                "src": "11692:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11677:37:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1219,
                                  "name": "currentProp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "11730:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                    "typeString": "struct Raphael.Proposal memory"
                                  }
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "11730:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1221,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "11752:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "VOTING_NOT_STARTED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 497,
                                "src": "11752:33:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "11730:55:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11677:108:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1233,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11898:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "11898:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1235,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "11913:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1236,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 513,
                                  "src": "11913:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11898:35:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                },
                                "id": 1242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1238,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "11949:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1239,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 516,
                                  "src": "11949:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1240,
                                    "name": "ProposalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "11971:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                      "typeString": "type(enum Raphael.ProposalStatus)"
                                    }
                                  },
                                  "id": 1241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "VOTES_FINISHED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 499,
                                  "src": "11971:29:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "src": "11949:51:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11898:102:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1269,
                            "nodeType": "IfStatement",
                            "src": "11881:442:10",
                            "trueBody": {
                              "id": 1268,
                              "nodeType": "Block",
                              "src": "12011:312:10",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1250,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1248,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1244,
                                          "name": "currentProp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1117,
                                          "src": "12046:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                            "typeString": "struct Raphael.Proposal memory"
                                          }
                                        },
                                        "id": 1245,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votesFor",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 507,
                                        "src": "12046:20:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1246,
                                          "name": "currentProp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1117,
                                          "src": "12069:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                            "typeString": "struct Raphael.Proposal memory"
                                          }
                                        },
                                        "id": 1247,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votesAgainst",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 509,
                                        "src": "12069:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12046:47:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 1249,
                                      "name": "minVotesNeeded",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 532,
                                      "src": "12113:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12046:81:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1266,
                                    "nodeType": "Block",
                                    "src": "12231:82:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1264,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "expression": {
                                              "id": 1259,
                                              "name": "currentProp",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1117,
                                              "src": "12249:11:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                                "typeString": "struct Raphael.Proposal memory"
                                              }
                                            },
                                            "id": 1261,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "status",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 516,
                                            "src": "12249:18:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                              "typeString": "enum Raphael.ProposalStatus"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "expression": {
                                              "id": 1262,
                                              "name": "ProposalStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 503,
                                              "src": "12270:14:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                                "typeString": "type(enum Raphael.ProposalStatus)"
                                              }
                                            },
                                            "id": 1263,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "QUORUM_FAILED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 502,
                                            "src": "12270:28:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                              "typeString": "enum Raphael.ProposalStatus"
                                            }
                                          },
                                          "src": "12249:49:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                            "typeString": "enum Raphael.ProposalStatus"
                                          }
                                        },
                                        "id": 1265,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12249:49:10"
                                      }
                                    ]
                                  },
                                  "id": 1267,
                                  "nodeType": "IfStatement",
                                  "src": "12025:288:10",
                                  "trueBody": {
                                    "id": 1258,
                                    "nodeType": "Block",
                                    "src": "12142:83:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1256,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "expression": {
                                              "id": 1251,
                                              "name": "currentProp",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1117,
                                              "src": "12160:11:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                                "typeString": "struct Raphael.Proposal memory"
                                              }
                                            },
                                            "id": 1253,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "status",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 516,
                                            "src": "12160:18:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                              "typeString": "enum Raphael.ProposalStatus"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "expression": {
                                              "id": 1254,
                                              "name": "ProposalStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 503,
                                              "src": "12181:14:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                                "typeString": "type(enum Raphael.ProposalStatus)"
                                              }
                                            },
                                            "id": 1255,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "VOTES_FINISHED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 499,
                                            "src": "12181:29:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                              "typeString": "enum Raphael.ProposalStatus"
                                            }
                                          },
                                          "src": "12160:50:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                            "typeString": "enum Raphael.ProposalStatus"
                                          }
                                        },
                                        "id": 1257,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12160:50:10"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "id": 1270,
                          "nodeType": "IfStatement",
                          "src": "11660:663:10",
                          "trueBody": {
                            "id": 1232,
                            "nodeType": "Block",
                            "src": "11796:79:10",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 1225,
                                      "name": "currentProp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1117,
                                      "src": "11810:11:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                        "typeString": "struct Raphael.Proposal memory"
                                      }
                                    },
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "11810:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 1228,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "11831:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 1229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "VOTING_NOT_STARTED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 497,
                                    "src": "11831:33:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "11810:54:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "id": 1231,
                                "nodeType": "ExpressionStatement",
                                "src": "11810:54:10"
                              }
                            ]
                          }
                        },
                        "id": 1271,
                        "nodeType": "IfStatement",
                        "src": "11410:913:10",
                        "trueBody": {
                          "id": 1213,
                          "nodeType": "Block",
                          "src": "11587:67:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1206,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "11601:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1208,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 516,
                                  "src": "11601:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1209,
                                    "name": "ProposalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "11622:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                      "typeString": "type(enum Raphael.ProposalStatus)"
                                    }
                                  },
                                  "id": 1210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "VOTING",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 498,
                                  "src": "11622:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "src": "11601:42:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "id": 1212,
                              "nodeType": "ExpressionStatement",
                              "src": "11601:42:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1272,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "12381:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                              }
                            },
                            "id": 1274,
                            "indexExpression": {
                              "id": 1273,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "12391:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12381:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_storage",
                              "typeString": "struct Raphael.Proposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1275,
                            "name": "currentProp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "12408:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                              "typeString": "struct Raphael.Proposal memory"
                            }
                          },
                          "src": "12381:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$517_storage",
                            "typeString": "struct Raphael.Proposal storage ref"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "12381:38:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1279,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "12457:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1280,
                                "name": "currentProp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1117,
                                "src": "12472:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                  "typeString": "struct Raphael.Proposal memory"
                                }
                              },
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 516,
                              "src": "12472:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            ],
                            "id": 1278,
                            "name": "ProposalStatusChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "12435:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_ProposalStatus_$503_$returns$__$",
                              "typeString": "function (uint256,enum Raphael.ProposalStatus)"
                            }
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12435:56:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1283,
                        "nodeType": "EmitStatement",
                        "src": "12430:61:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1101,
                    "nodeType": "StructuredDocumentation",
                    "src": "10035:130:10",
                    "text": " @dev Moves proposal to the status it should be in\n @param proposalIndex          uint proposal key"
                  },
                  "functionSelector": "c851ed6c",
                  "id": 1285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1106,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1105,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "10230:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10230:11:10"
                    }
                  ],
                  "name": "updateProposalStatus",
                  "nameLocation": "10179:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "proposalIndex",
                        "nameLocation": "10208:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1285,
                        "src": "10200:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10200:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10199:23:10"
                  },
                  "returnParameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10242:0:10"
                  },
                  "scope": 1884,
                  "src": "10170:2328:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1327,
                    "nodeType": "Block",
                    "src": "12789:376:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1296,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1288,
                                "src": "12807:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1297,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "12824:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12807:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20646f65736e2774206578697374",
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12839:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              },
                              "value": "Proposal doesn't exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              }
                            ],
                            "id": 1295,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12799:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12799:65:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1301,
                        "nodeType": "ExpressionStatement",
                        "src": "12799:65:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1303,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "12895:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                      "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                    }
                                  },
                                  "id": 1305,
                                  "indexExpression": {
                                    "id": 1304,
                                    "name": "proposalIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1288,
                                    "src": "12905:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12895:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                    "typeString": "struct Raphael.Proposal storage ref"
                                  }
                                },
                                "id": 1306,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "12895:31:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1307,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "12930:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "VOTES_FINISHED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 499,
                                "src": "12930:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "12895:64:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c206e6f7420696e20564f5445535f46494e4953484544",
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12973:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e",
                                "typeString": "literal_string \"Proposal not in VOTES_FINISHED\""
                              },
                              "value": "Proposal not in VOTES_FINISHED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f3cbd800d0aaab4d96bf6b77616419cd170eeef3e843c78659c3276367ba03e",
                                "typeString": "literal_string \"Proposal not in VOTES_FINISHED\""
                              }
                            ],
                            "id": 1302,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12874:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12874:141:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "12874:141:10"
                      },
                      {
                        "expression": {
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1313,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 522,
                                "src": "13025:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                  "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                }
                              },
                              "id": 1315,
                              "indexExpression": {
                                "id": 1314,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1288,
                                "src": "13035:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13025:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                "typeString": "struct Raphael.Proposal storage ref"
                              }
                            },
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 516,
                            "src": "13025:31:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                              "typeString": "enum Raphael.ProposalStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1317,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "13059:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                "typeString": "type(enum Raphael.ProposalStatus)"
                              }
                            },
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "RESOLVED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 500,
                            "src": "13059:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                              "typeString": "enum Raphael.ProposalStatus"
                            }
                          },
                          "src": "13025:57:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$503",
                            "typeString": "enum Raphael.ProposalStatus"
                          }
                        },
                        "id": 1320,
                        "nodeType": "ExpressionStatement",
                        "src": "13025:57:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1322,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1288,
                              "src": "13119:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1323,
                                "name": "ProposalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "13134:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                  "typeString": "type(enum Raphael.ProposalStatus)"
                                }
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RESOLVED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 500,
                              "src": "13134:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            ],
                            "id": 1321,
                            "name": "ProposalStatusChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "13097:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_ProposalStatus_$503_$returns$__$",
                              "typeString": "function (uint256,enum Raphael.ProposalStatus)"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13097:61:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1326,
                        "nodeType": "EmitStatement",
                        "src": "13092:66:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "12504:169:10",
                    "text": " @dev Only for setting proposal to RESOLVED.\n @dev Only callable from the multi-sig\n @param proposalIndex          uint proposal key"
                  },
                  "functionSelector": "b8c62ab8",
                  "id": 1328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1291,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1290,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12755:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12755:9:10"
                    },
                    {
                      "id": 1293,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1292,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "12773:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12773:11:10"
                    }
                  ],
                  "name": "setProposalToResolved",
                  "nameLocation": "12687:21:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1288,
                        "mutability": "mutable",
                        "name": "proposalIndex",
                        "nameLocation": "12717:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1328,
                        "src": "12709:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12709:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12708:23:10"
                  },
                  "returnParameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12789:0:10"
                  },
                  "scope": 1884,
                  "src": "12678:487:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1403,
                    "nodeType": "Block",
                    "src": "13458:810:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1339,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1331,
                                "src": "13476:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1340,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "13493:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13476:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20646f65736e2774206578697374",
                              "id": 1342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13508:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              },
                              "value": "Proposal doesn't exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_130eeeec9033a435ae07ccf2ce36110fe1c9dbf2f1ca86b8529cf978b427ec0e",
                                "typeString": "literal_string \"Proposal doesn't exist\""
                              }
                            ],
                            "id": 1338,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13468:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13468:65:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1344,
                        "nodeType": "ExpressionStatement",
                        "src": "13468:65:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1346,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "13564:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                      "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                    }
                                  },
                                  "id": 1348,
                                  "indexExpression": {
                                    "id": 1347,
                                    "name": "proposalIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1331,
                                    "src": "13574:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13564:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                    "typeString": "struct Raphael.Proposal storage ref"
                                  }
                                },
                                "id": 1349,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "13564:31:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1350,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "13599:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "VOTES_FINISHED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 499,
                                "src": "13599:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "13564:64:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e27742063616e63656c20696620766f74652066696e6973686564",
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13642:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4",
                                "typeString": "literal_string \"Can't cancel if vote finished\""
                              },
                              "value": "Can't cancel if vote finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d1146c6ebb077fe26706f5d9a3acd93aaab714f8c2a898aada9b0a4c8e3c21e4",
                                "typeString": "literal_string \"Can't cancel if vote finished\""
                              }
                            ],
                            "id": 1345,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13543:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13543:140:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1355,
                        "nodeType": "ExpressionStatement",
                        "src": "13543:140:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1357,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "13714:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                      "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                    }
                                  },
                                  "id": 1359,
                                  "indexExpression": {
                                    "id": 1358,
                                    "name": "proposalIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1331,
                                    "src": "13724:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13714:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                    "typeString": "struct Raphael.Proposal storage ref"
                                  }
                                },
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "13714:31:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1361,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "13749:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "RESOLVED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 500,
                                "src": "13749:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "13714:58:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20616c7265616479207265736f6c766564",
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13786:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d",
                                "typeString": "literal_string \"Proposal already resolved\""
                              },
                              "value": "Proposal already resolved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4160ae2b60c4161103afc97adb6fc6def05baf05c4e122d69cad09772248147d",
                                "typeString": "literal_string \"Proposal already resolved\""
                              }
                            ],
                            "id": 1356,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13693:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13693:130:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "13693:130:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1368,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "13854:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                      "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                    }
                                  },
                                  "id": 1370,
                                  "indexExpression": {
                                    "id": 1369,
                                    "name": "proposalIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1331,
                                    "src": "13864:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13854:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                    "typeString": "struct Raphael.Proposal storage ref"
                                  }
                                },
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "13854:31:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1372,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "13889:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "QUORUM_FAILED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 502,
                                "src": "13889:28:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "13854:63:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20616c7265616479206661696c65642071756f72756d",
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13931:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079",
                                "typeString": "literal_string \"Proposal already failed quorum\""
                              },
                              "value": "Proposal already failed quorum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ef4b15c630475208e70d008c167096f7c5fd839df84d8c3788788ce8b84e9079",
                                "typeString": "literal_string \"Proposal already failed quorum\""
                              }
                            ],
                            "id": 1367,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13833:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13833:140:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ExpressionStatement",
                        "src": "13833:140:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1379,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "14004:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                      "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                    }
                                  },
                                  "id": 1381,
                                  "indexExpression": {
                                    "id": 1380,
                                    "name": "proposalIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1331,
                                    "src": "14014:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14004:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                    "typeString": "struct Raphael.Proposal storage ref"
                                  }
                                },
                                "id": 1382,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "14004:31:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1383,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "14039:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                    "typeString": "type(enum Raphael.ProposalStatus)"
                                  }
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CANCELLED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 501,
                                "src": "14039:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                }
                              },
                              "src": "14004:59:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20616c72656164792063616e63656c6c6564",
                              "id": 1386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14077:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f",
                                "typeString": "literal_string \"Proposal already cancelled\""
                              },
                              "value": "Proposal already cancelled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e17bfcd355060e4798c0d940327e9e82091039c8817e9bd1bb8653b1bc06f8f",
                                "typeString": "literal_string \"Proposal already cancelled\""
                              }
                            ],
                            "id": 1378,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13983:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13983:132:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1388,
                        "nodeType": "ExpressionStatement",
                        "src": "13983:132:10"
                      },
                      {
                        "expression": {
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1389,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 522,
                                "src": "14126:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                  "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                }
                              },
                              "id": 1391,
                              "indexExpression": {
                                "id": 1390,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1331,
                                "src": "14136:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14126:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                "typeString": "struct Raphael.Proposal storage ref"
                              }
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 516,
                            "src": "14126:31:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                              "typeString": "enum Raphael.ProposalStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1393,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "14160:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                "typeString": "type(enum Raphael.ProposalStatus)"
                              }
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CANCELLED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 501,
                            "src": "14160:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$503",
                              "typeString": "enum Raphael.ProposalStatus"
                            }
                          },
                          "src": "14126:58:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$503",
                            "typeString": "enum Raphael.ProposalStatus"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "14126:58:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1398,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1331,
                              "src": "14221:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1399,
                                "name": "ProposalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "14236:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                  "typeString": "type(enum Raphael.ProposalStatus)"
                                }
                              },
                              "id": 1400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CANCELLED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 501,
                              "src": "14236:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                "typeString": "enum Raphael.ProposalStatus"
                              }
                            ],
                            "id": 1397,
                            "name": "ProposalStatusChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "14199:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_ProposalStatus_$503_$returns$__$",
                              "typeString": "function (uint256,enum Raphael.ProposalStatus)"
                            }
                          },
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14199:62:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1402,
                        "nodeType": "EmitStatement",
                        "src": "14194:67:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1329,
                    "nodeType": "StructuredDocumentation",
                    "src": "13171:170:10",
                    "text": " @dev Only for setting proposal to CANCELLED.\n @dev Only callable from the multi-sig\n @param proposalIndex          uint proposal key"
                  },
                  "functionSelector": "b426d991",
                  "id": 1404,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1334,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1333,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13424:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13424:9:10"
                    },
                    {
                      "id": 1336,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1335,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "13442:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13442:11:10"
                    }
                  ],
                  "name": "setProposalToCancelled",
                  "nameLocation": "13355:22:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "proposalIndex",
                        "nameLocation": "13386:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "13378:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13378:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13377:23:10"
                  },
                  "returnParameters": {
                    "id": 1337,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13458:0:10"
                  },
                  "scope": 1884,
                  "src": "13346:922:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1515,
                    "nodeType": "Block",
                    "src": "14542:1283:10",
                    "statements": [
                      {
                        "assignments": [
                          1415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1415,
                            "mutability": "mutable",
                            "name": "stakedBalance",
                            "nameLocation": "14560:13:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1515,
                            "src": "14552:21:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1414,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14552:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1421,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1418,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "14609:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14609:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1416,
                              "name": "stakingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "14576:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaking_$469",
                                "typeString": "contract IStaking"
                              }
                            },
                            "id": 1417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getStakedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 432,
                            "src": "14576:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14576:46:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14552:70:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1423,
                                "name": "stakedBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1415,
                                "src": "14640:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14656:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14640:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d757374207374616b6520746f20766f7465",
                              "id": 1426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14659:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278",
                                "typeString": "literal_string \"must stake to vote\""
                              },
                              "value": "must stake to vote"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e1878736a5bfd6d5229a88764bc6d4e6b777b7f577f5e65267d17281aba24278",
                                "typeString": "literal_string \"must stake to vote\""
                              }
                            ],
                            "id": 1422,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14632:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14632:48:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1428,
                        "nodeType": "ExpressionStatement",
                        "src": "14632:48:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1430,
                                    "name": "voted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 528,
                                    "src": "14760:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => bool))"
                                    }
                                  },
                                  "id": 1432,
                                  "indexExpression": {
                                    "id": 1431,
                                    "name": "proposalIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1407,
                                    "src": "14766:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14760:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1435,
                                "indexExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1433,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 399,
                                    "src": "14781:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14781:12:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14760:34:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 1436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14798:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "14760:43:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c726561647920766f7465642066726f6d20746869732061646472657373",
                              "id": 1438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14817:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086",
                                "typeString": "literal_string \"Already voted from this address\""
                              },
                              "value": "Already voted from this address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7504991390b972e5288bcbfd20194d838f58d1f758ed75c63a7c5224122a086",
                                "typeString": "literal_string \"Already voted from this address\""
                              }
                            ],
                            "id": 1429,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14739:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14739:121:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1440,
                        "nodeType": "ExpressionStatement",
                        "src": "14739:121:10"
                      },
                      {
                        "assignments": [
                          1443
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1443,
                            "mutability": "mutable",
                            "name": "currentProp",
                            "nameLocation": "14887:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1515,
                            "src": "14871:27:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                              "typeString": "struct Raphael.Proposal"
                            },
                            "typeName": {
                              "id": 1442,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1441,
                                "name": "Proposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 517,
                                "src": "14871:8:10"
                              },
                              "referencedDeclaration": 517,
                              "src": "14871:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$517_storage_ptr",
                                "typeString": "struct Raphael.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1447,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1444,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "14901:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                              "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                            }
                          },
                          "id": 1446,
                          "indexExpression": {
                            "id": 1445,
                            "name": "proposalIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "14911:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14901:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$517_storage",
                            "typeString": "struct Raphael.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14871:54:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                  "typeString": "enum Raphael.ProposalStatus"
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1449,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1443,
                                    "src": "15034:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1450,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 516,
                                  "src": "15034:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1451,
                                    "name": "ProposalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "15056:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                      "typeString": "type(enum Raphael.ProposalStatus)"
                                    }
                                  },
                                  "id": 1452,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "VOTING",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 498,
                                  "src": "15056:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  }
                                },
                                "src": "15034:43:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1454,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15097:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "15097:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1456,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1443,
                                    "src": "15113:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1457,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 513,
                                  "src": "15113:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15097:36:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15034:99:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c206e6f7420696e20766f74696e6720706572696f64",
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15147:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09",
                                "typeString": "literal_string \"Proposal not in voting period\""
                              },
                              "value": "Proposal not in voting period"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f060ccceb0b6a8e3931d9346a569c6f39e0969d0739e709a053a1966198cbc09",
                                "typeString": "literal_string \"Proposal not in voting period\""
                              }
                            ],
                            "id": 1448,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15013:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15013:175:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1462,
                        "nodeType": "ExpressionStatement",
                        "src": "15013:175:10"
                      },
                      {
                        "condition": {
                          "id": 1463,
                          "name": "_vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1409,
                          "src": "15263:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1477,
                          "nodeType": "Block",
                          "src": "15338:66:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1471,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1443,
                                    "src": "15352:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1473,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "votesAgainst",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 509,
                                  "src": "15352:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1474,
                                  "name": "stakedBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "15380:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15352:41:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1476,
                              "nodeType": "ExpressionStatement",
                              "src": "15352:41:10"
                            }
                          ]
                        },
                        "id": 1478,
                        "nodeType": "IfStatement",
                        "src": "15259:145:10",
                        "trueBody": {
                          "id": 1470,
                          "nodeType": "Block",
                          "src": "15270:62:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1464,
                                    "name": "currentProp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1443,
                                    "src": "15284:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                                      "typeString": "struct Raphael.Proposal memory"
                                    }
                                  },
                                  "id": 1466,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "votesFor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 507,
                                  "src": "15284:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1467,
                                  "name": "stakedBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "15308:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15284:37:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1469,
                              "nodeType": "ExpressionStatement",
                              "src": "15284:37:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1479,
                                "name": "voted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 528,
                                "src": "15414:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => bool))"
                                }
                              },
                              "id": 1483,
                              "indexExpression": {
                                "id": 1480,
                                "name": "proposalIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1407,
                                "src": "15420:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15414:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1484,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1481,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "15435:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15435:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15414:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15451:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15414:41:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1487,
                        "nodeType": "ExpressionStatement",
                        "src": "15414:41:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1491,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 399,
                                    "src": "15525:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15525:12:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1493,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 522,
                                      "src": "15555:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                        "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                      }
                                    },
                                    "id": 1495,
                                    "indexExpression": {
                                      "id": 1494,
                                      "name": "proposalIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1407,
                                      "src": "15565:13:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15555:24:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                      "typeString": "struct Raphael.Proposal storage ref"
                                    }
                                  },
                                  "id": 1496,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 513,
                                  "src": "15555:33:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1489,
                                  "name": "stakingContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 545,
                                  "src": "15486:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStaking_$469",
                                    "typeString": "contract IStaking"
                                  }
                                },
                                "id": 1490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 453,
                                "src": "15486:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15486:116:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "766f74653a20746f6b656e206c6f636b206661696c",
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15616:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c",
                                "typeString": "literal_string \"vote: token lock fail\""
                              },
                              "value": "vote: token lock fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9f312e6fd33d2e7869294ec86fd8a47cdba3bbf5c14c80f0a817963a24fc444c",
                                "typeString": "literal_string \"vote: token lock fail\""
                              }
                            ],
                            "id": 1488,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15465:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15465:184:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1500,
                        "nodeType": "ExpressionStatement",
                        "src": "15465:184:10"
                      },
                      {
                        "expression": {
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1501,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "15708:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                              }
                            },
                            "id": 1503,
                            "indexExpression": {
                              "id": 1502,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "15718:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15708:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_storage",
                              "typeString": "struct Raphael.Proposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1504,
                            "name": "currentProp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "15735:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$517_memory_ptr",
                              "typeString": "struct Raphael.Proposal memory"
                            }
                          },
                          "src": "15708:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$517_storage",
                            "typeString": "struct Raphael.Proposal storage ref"
                          }
                        },
                        "id": 1506,
                        "nodeType": "ExpressionStatement",
                        "src": "15708:38:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1508,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "15768:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15768:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1510,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "15782:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1511,
                              "name": "stakedBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1415,
                              "src": "15797:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1512,
                              "name": "_vote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1409,
                              "src": "15812:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1507,
                            "name": "Voted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 654,
                            "src": "15762:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bool)"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15762:56:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1514,
                        "nodeType": "EmitStatement",
                        "src": "15757:61:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1405,
                    "nodeType": "StructuredDocumentation",
                    "src": "14274:195:10",
                    "text": " @dev Allows any address to vote on a proposal\n @param proposalIndex           key to proposal in mapping\n @param _vote                   true = for, false = against"
                  },
                  "functionSelector": "c9d27afe",
                  "id": 1516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1412,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1411,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "14530:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14530:11:10"
                    }
                  ],
                  "name": "vote",
                  "nameLocation": "14483:4:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1407,
                        "mutability": "mutable",
                        "name": "proposalIndex",
                        "nameLocation": "14496:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "14488:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14488:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1409,
                        "mutability": "mutable",
                        "name": "_vote",
                        "nameLocation": "14516:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "14511:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1408,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14511:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14487:35:10"
                  },
                  "returnParameters": {
                    "id": 1413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14542:0:10"
                  },
                  "scope": 1884,
                  "src": "14474:1351:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1521,
                    "nodeType": "Block",
                    "src": "15881:2:10",
                    "statements": []
                  },
                  "functionSelector": "5c19a95c",
                  "id": 1522,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delegate",
                  "nameLocation": "15840:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1518,
                        "mutability": "mutable",
                        "name": "delegateAddress",
                        "nameLocation": "15857:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1522,
                        "src": "15849:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15849:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15848:25:10"
                  },
                  "returnParameters": {
                    "id": 1520,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15881:0:10"
                  },
                  "scope": 1884,
                  "src": "15831:52:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1549,
                    "nodeType": "Block",
                    "src": "16177:127:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1533,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1525,
                                "src": "16195:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16205:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "16195:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e2774206d696e74203020746f6b656e73",
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16208:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217",
                                "typeString": "literal_string \"Can't mint 0 tokens\""
                              },
                              "value": "Can't mint 0 tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59693708b8077c37ebafa93cdac6396965a35daa6bf882d34b0be7071ebc8217",
                                "typeString": "literal_string \"Can't mint 0 tokens\""
                              }
                            ],
                            "id": 1532,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16187:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16187:43:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1538,
                        "nodeType": "ExpressionStatement",
                        "src": "16187:43:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1544,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16282:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raphael_$1884",
                                    "typeString": "contract Raphael"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raphael_$1884",
                                    "typeString": "contract Raphael"
                                  }
                                ],
                                "id": 1543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16274:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1542,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16274:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16274:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1546,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "16289:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1539,
                              "name": "nativeTokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "16249:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVITA_$482",
                                "typeString": "contract IVITA"
                              }
                            },
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "16249:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16249:48:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1548,
                        "nodeType": "ExpressionStatement",
                        "src": "16249:48:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1523,
                    "nodeType": "StructuredDocumentation",
                    "src": "15971:130:10",
                    "text": " @dev                 enables DAO to mint native tokens\n @param _amount       the amount of tokens to mint"
                  },
                  "functionSelector": "a6f0f7c7",
                  "id": 1550,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1528,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1527,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "16155:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16155:9:10"
                    },
                    {
                      "id": 1530,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1529,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "16165:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16165:11:10"
                    }
                  ],
                  "name": "mintNativeToken",
                  "nameLocation": "16115:15:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1525,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "16139:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1550,
                        "src": "16131:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16131:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16130:17:10"
                  },
                  "returnParameters": {
                    "id": 1531,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16177:0:10"
                  },
                  "scope": 1884,
                  "src": "16106:198:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1582,
                    "nodeType": "Block",
                    "src": "16703:210:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1567,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1553,
                                  "src": "16763:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1568,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1555,
                                  "src": "16767:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1565,
                                  "name": "nativeTokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 542,
                                  "src": "16734:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVITA_$482",
                                    "typeString": "contract IVITA"
                                  }
                                },
                                "id": 1566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 176,
                                "src": "16734:28:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16734:40:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16788:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1564,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16713:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16713:108:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1572,
                        "nodeType": "ExpressionStatement",
                        "src": "16713:108:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1574,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "16860:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16860:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1576,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1553,
                              "src": "16874:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1577,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "16878:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1573,
                            "name": "NativeTokenTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "16837:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16837:48:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1579,
                        "nodeType": "EmitStatement",
                        "src": "16832:53:10"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16902:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1563,
                        "id": 1581,
                        "nodeType": "Return",
                        "src": "16895:11:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1551,
                    "nodeType": "StructuredDocumentation",
                    "src": "16311:250:10",
                    "text": " @dev enables DAO to transfer the token it is associated with\n @param to                    the address to send tokens to\n @param amount                the amount to send\n @return success or fail bool"
                  },
                  "functionSelector": "ae77a708",
                  "id": 1583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1558,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1557,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "16646:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16646:9:10"
                    },
                    {
                      "id": 1560,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1559,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "16664:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16664:11:10"
                    }
                  ],
                  "name": "transferNativeToken",
                  "nameLocation": "16575:19:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1553,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "16603:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1583,
                        "src": "16595:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1552,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16595:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "16615:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1583,
                        "src": "16607:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16607:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16594:28:10"
                  },
                  "returnParameters": {
                    "id": 1563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1562,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1583,
                        "src": "16693:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1561,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16693:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16692:6:10"
                  },
                  "scope": 1884,
                  "src": "16566:347:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1672,
                    "nodeType": "Block",
                    "src": "17405:741:10",
                    "statements": [
                      {
                        "assignments": [
                          1601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1601,
                            "mutability": "mutable",
                            "name": "nftContract",
                            "nameLocation": "17423:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1672,
                            "src": "17415:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$343",
                              "typeString": "contract IERC721"
                            },
                            "typeName": {
                              "id": 1600,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1599,
                                "name": "IERC721",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 343,
                                "src": "17415:7:10"
                              },
                              "referencedDeclaration": 343,
                              "src": "17415:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$343",
                                "typeString": "contract IERC721"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1605,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1603,
                              "name": "nftContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "17445:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1602,
                            "name": "IERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 343,
                            "src": "17437:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721_$343_$",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17437:27:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$343",
                            "typeString": "contract IERC721"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17415:49:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1611,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17524:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raphael_$1884",
                                    "typeString": "contract Raphael"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raphael_$1884",
                                    "typeString": "contract Raphael"
                                  }
                                ],
                                "id": 1610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17516:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1609,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17516:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17516:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1613,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "17543:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1614,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "17566:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1606,
                              "name": "nftContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1601,
                              "src": "17474:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$343",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 286,
                            "src": "17474:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17474:137:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1616,
                        "nodeType": "ExpressionStatement",
                        "src": "17474:137:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1620,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "17662:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1618,
                                    "name": "nftContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1601,
                                    "src": "17642:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721_$343",
                                      "typeString": "contract IERC721"
                                    }
                                  },
                                  "id": 1619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "ownerOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 276,
                                  "src": "17642:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 1621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17642:28:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1622,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "17674:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17642:41:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4654207472616e73666572206661696c6564",
                              "id": 1624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17697:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7",
                                "typeString": "literal_string \"NFT transfer failed\""
                              },
                              "value": "NFT transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c88d9d174be44fa1e463ddefff5f5799025dd5d16d94cbb2c57e1446c49a0fc7",
                                "typeString": "literal_string \"NFT transfer failed\""
                              }
                            ],
                            "id": 1617,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17621:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17621:107:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1626,
                        "nodeType": "ExpressionStatement",
                        "src": "17621:107:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1631,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "17773:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Raphael_$1884",
                                      "typeString": "contract Raphael"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Raphael_$1884",
                                      "typeString": "contract Raphael"
                                    }
                                  ],
                                  "id": 1630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "17765:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1629,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17765:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17765:13:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1627,
                                "name": "nftContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1601,
                                "src": "17743:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$343",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 268,
                              "src": "17743:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17743:36:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17783:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17743:41:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1663,
                        "nodeType": "IfStatement",
                        "src": "17739:310:10",
                        "trueBody": {
                          "id": 1662,
                          "nodeType": "Block",
                          "src": "17786:263:10",
                          "statements": [
                            {
                              "body": {
                                "id": 1660,
                                "nodeType": "Block",
                                "src": "17858:181:10",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 1651,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1647,
                                          "name": "nftContractAddresses",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 539,
                                          "src": "17880:20:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1649,
                                        "indexExpression": {
                                          "id": 1648,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1637,
                                          "src": "17901:1:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "17880:23:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 1650,
                                        "name": "nftContractAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1586,
                                        "src": "17907:18:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "17880:45:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1659,
                                    "nodeType": "IfStatement",
                                    "src": "17876:149:10",
                                    "trueBody": {
                                      "id": 1658,
                                      "nodeType": "Block",
                                      "src": "17927:98:10",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1655,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "delete",
                                            "prefix": true,
                                            "src": "17949:30:10",
                                            "subExpression": {
                                              "baseExpression": {
                                                "id": 1652,
                                                "name": "nftContractAddresses",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 539,
                                                "src": "17956:20:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1654,
                                              "indexExpression": {
                                                "id": 1653,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1637,
                                                "src": "17977:1:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "17956:23:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 1656,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17949:30:10"
                                        },
                                        {
                                          "id": 1657,
                                          "nodeType": "Break",
                                          "src": "18001:5:10"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1640,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1637,
                                  "src": "17820:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1641,
                                    "name": "nftContractAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "17824:20:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17824:27:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17820:31:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1661,
                              "initializationExpression": {
                                "assignments": [
                                  1637
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1637,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "17813:1:10",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1661,
                                    "src": "17805:9:10",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1636,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "17805:7:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1639,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17817:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "17805:13:10"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 1645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "17853:3:10",
                                  "subExpression": {
                                    "id": 1644,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1637,
                                    "src": "17853:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1646,
                                "nodeType": "ExpressionStatement",
                                "src": "17853:3:10"
                              },
                              "nodeType": "ForStatement",
                              "src": "17800:239:10"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1665,
                              "name": "nftContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "18079:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1666,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "18099:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1667,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "18110:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1664,
                            "name": "NFTTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "18064:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18064:54:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1669,
                        "nodeType": "EmitStatement",
                        "src": "18059:59:10"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18135:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1598,
                        "id": 1671,
                        "nodeType": "Return",
                        "src": "18128:11:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1584,
                    "nodeType": "StructuredDocumentation",
                    "src": "16919:322:10",
                    "text": " @dev enables DAO to transfer NFTs received\n @param nftContractAddress    the address of the NFT contract\n @param recipient             the address to send the NFT to\n @param tokenId               the id of the token in the NFT contract\n @return success or fail bool"
                  },
                  "functionSelector": "69e9cae1",
                  "id": 1673,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1593,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1592,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "17368:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17368:9:10"
                    },
                    {
                      "id": 1595,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1594,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "17378:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17378:11:10"
                    }
                  ],
                  "name": "transferNFT",
                  "nameLocation": "17255:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1586,
                        "mutability": "mutable",
                        "name": "nftContractAddress",
                        "nameLocation": "17284:18:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1673,
                        "src": "17276:26:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17276:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1588,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "17320:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1673,
                        "src": "17312:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17312:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1590,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "17347:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1673,
                        "src": "17339:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17339:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17266:94:10"
                  },
                  "returnParameters": {
                    "id": 1598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1597,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1673,
                        "src": "17399:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1596,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17399:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17398:6:10"
                  },
                  "scope": 1884,
                  "src": "17246:900:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1809,
                    "nodeType": "Block",
                    "src": "18535:1164:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1684,
                                  "name": "getNativeTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 848,
                                  "src": "18553:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18553:23:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18580:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "18553:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e7366657220746f6b656e73206265666f72652073687574646f776e",
                              "id": 1688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18583:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20",
                                "typeString": "literal_string \"transfer tokens before shutdown\""
                              },
                              "value": "transfer tokens before shutdown"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8303c43c395e00fc9d254239bc677e5fcbd5c9734a8c4e8e1334c71a4bb05c20",
                                "typeString": "literal_string \"transfer tokens before shutdown\""
                              }
                            ],
                            "id": 1683,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18545:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18545:72:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1690,
                        "nodeType": "ExpressionStatement",
                        "src": "18545:72:10"
                      },
                      {
                        "body": {
                          "id": 1732,
                          "nodeType": "Block",
                          "src": "18761:325:10",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  },
                                  "id": 1707,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1701,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 522,
                                        "src": "18796:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                          "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                        }
                                      },
                                      "id": 1703,
                                      "indexExpression": {
                                        "id": 1702,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1692,
                                        "src": "18806:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18796:12:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                        "typeString": "struct Raphael.Proposal storage ref"
                                      }
                                    },
                                    "id": 1704,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "18796:19:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1705,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "18819:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 1706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "RESOLVED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 500,
                                    "src": "18819:23:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "18796:46:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                    "typeString": "enum Raphael.ProposalStatus"
                                  },
                                  "id": 1714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1708,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 522,
                                        "src": "18862:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                          "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                        }
                                      },
                                      "id": 1710,
                                      "indexExpression": {
                                        "id": 1709,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1692,
                                        "src": "18872:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18862:12:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                        "typeString": "struct Raphael.Proposal storage ref"
                                      }
                                    },
                                    "id": 1711,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 516,
                                    "src": "18862:19:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1712,
                                      "name": "ProposalStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 503,
                                      "src": "18885:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                        "typeString": "type(enum Raphael.ProposalStatus)"
                                      }
                                    },
                                    "id": 1713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "QUORUM_FAILED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 502,
                                    "src": "18885:28:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                      "typeString": "enum Raphael.ProposalStatus"
                                    }
                                  },
                                  "src": "18862:51:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "18796:117:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1731,
                              "nodeType": "IfStatement",
                              "src": "18775:301:10",
                              "trueBody": {
                                "id": 1730,
                                "nodeType": "Block",
                                "src": "18928:148:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1722,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1716,
                                            "name": "proposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 522,
                                            "src": "18946:9:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$517_storage_$",
                                              "typeString": "mapping(uint256 => struct Raphael.Proposal storage ref)"
                                            }
                                          },
                                          "id": 1718,
                                          "indexExpression": {
                                            "id": 1717,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1692,
                                            "src": "18956:1:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18946:12:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$517_storage",
                                            "typeString": "struct Raphael.Proposal storage ref"
                                          }
                                        },
                                        "id": 1719,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "status",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 516,
                                        "src": "18946:19:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                          "typeString": "enum Raphael.ProposalStatus"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 1720,
                                          "name": "ProposalStatus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 503,
                                          "src": "18968:14:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$503_$",
                                            "typeString": "type(enum Raphael.ProposalStatus)"
                                          }
                                        },
                                        "id": 1721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "CANCELLED",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 501,
                                        "src": "18968:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                          "typeString": "enum Raphael.ProposalStatus"
                                        }
                                      },
                                      "src": "18946:46:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ProposalStatus_$503",
                                        "typeString": "enum Raphael.ProposalStatus"
                                      }
                                    },
                                    "id": 1723,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18946:46:10"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 1725,
                                            "name": "_msgSender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 399,
                                            "src": "19045:10:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                              "typeString": "function () view returns (address)"
                                            }
                                          },
                                          "id": 1726,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "19045:12:10",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1727,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1692,
                                          "src": "19059:1:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1724,
                                        "name": "EmergencyProposalCancellation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 620,
                                        "src": "19015:29:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 1728,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19015:46:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1729,
                                    "nodeType": "EmitStatement",
                                    "src": "19010:51:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1695,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "18736:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1696,
                            "name": "proposalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "18741:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18736:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1733,
                        "initializationExpression": {
                          "assignments": [
                            1692
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1692,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18729:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 1733,
                              "src": "18721:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1691,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18721:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1694,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 1693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18733:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18721:13:10"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18756:3:10",
                            "subExpression": {
                              "id": 1698,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1692,
                              "src": "18756:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1700,
                          "nodeType": "ExpressionStatement",
                          "src": "18756:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "18716:370:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1737,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "19130:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19130:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1734,
                              "name": "stakingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "19096:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaking_$469",
                                "typeString": "contract IStaking"
                              }
                            },
                            "id": 1736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "emergencyShutdown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 468,
                            "src": "19096:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19096:47:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1740,
                        "nodeType": "ExpressionStatement",
                        "src": "19096:47:10"
                      },
                      {
                        "body": {
                          "id": 1790,
                          "nodeType": "Block",
                          "src": "19240:295:10",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1752,
                                    "name": "nftContractAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "19258:20:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1754,
                                  "indexExpression": {
                                    "id": 1753,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1742,
                                    "src": "19279:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19258:23:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1757,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19293:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "19285:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1755,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "19285:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19285:10:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "19258:37:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1789,
                              "nodeType": "IfStatement",
                              "src": "19254:271:10",
                              "trueBody": {
                                "id": 1788,
                                "nodeType": "Block",
                                "src": "19297:228:10",
                                "statements": [
                                  {
                                    "assignments": [
                                      1762
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1762,
                                        "mutability": "mutable",
                                        "name": "nftContract",
                                        "nameLocation": "19323:11:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1788,
                                        "src": "19315:19:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$343",
                                          "typeString": "contract IERC721"
                                        },
                                        "typeName": {
                                          "id": 1761,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 1760,
                                            "name": "IERC721",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 343,
                                            "src": "19315:7:10"
                                          },
                                          "referencedDeclaration": 343,
                                          "src": "19315:7:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721_$343",
                                            "typeString": "contract IERC721"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1768,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1764,
                                            "name": "nftContractAddresses",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 539,
                                            "src": "19345:20:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1766,
                                          "indexExpression": {
                                            "id": 1765,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1742,
                                            "src": "19366:1:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19345:23:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1763,
                                        "name": "IERC721",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 343,
                                        "src": "19337:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC721_$343_$",
                                          "typeString": "type(contract IERC721)"
                                        }
                                      },
                                      "id": 1767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19337:32:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$343",
                                        "typeString": "contract IERC721"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "19315:54:10"
                                  },
                                  {
                                    "condition": {
                                      "id": 1778,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "19391:53:10",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 1773,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "19429:4:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Raphael_$1884",
                                                  "typeString": "contract Raphael"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Raphael_$1884",
                                                  "typeString": "contract Raphael"
                                                }
                                              ],
                                              "id": 1772,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "19421:7:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1771,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "19421:7:10",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1774,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19421:13:10",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 1775,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 44,
                                              "src": "19436:5:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                "typeString": "function () view returns (address)"
                                              }
                                            },
                                            "id": 1776,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19436:7:10",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1769,
                                            "name": "nftContract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1762,
                                            "src": "19392:11:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC721_$343",
                                              "typeString": "contract IERC721"
                                            }
                                          },
                                          "id": 1770,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "isApprovedForAll",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 330,
                                          "src": "19392:28:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address,address) view external returns (bool)"
                                          }
                                        },
                                        "id": 1777,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19392:52:10",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1787,
                                    "nodeType": "IfStatement",
                                    "src": "19387:123:10",
                                    "trueBody": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 1782,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 44,
                                              "src": "19496:5:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                "typeString": "function () view returns (address)"
                                              }
                                            },
                                            "id": 1783,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19496:7:10",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "74727565",
                                            "id": 1784,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19505:4:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "value": "true"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1779,
                                            "name": "nftContract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1762,
                                            "src": "19466:11:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC721_$343",
                                              "typeString": "contract IERC721"
                                            }
                                          },
                                          "id": 1781,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "setApprovalForAll",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 320,
                                          "src": "19466:29:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                                            "typeString": "function (address,bool) external"
                                          }
                                        },
                                        "id": 1785,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19466:44:10",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1786,
                                      "nodeType": "ExpressionStatement",
                                      "src": "19466:44:10"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1745,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "19202:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1746,
                              "name": "nftContractAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "19206:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19206:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19202:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1791,
                        "initializationExpression": {
                          "assignments": [
                            1742
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1742,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19195:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 1791,
                              "src": "19187:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1741,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19187:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1744,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19199:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19187:13:10"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "19235:3:10",
                            "subExpression": {
                              "id": 1749,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "19235:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1751,
                          "nodeType": "ExpressionStatement",
                          "src": "19235:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "19182:353:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1793,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "19570:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19570:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1795,
                              "name": "nftContractAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "19584:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            ],
                            "id": 1792,
                            "name": "EmergencyNFTApproval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "19549:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address[] memory)"
                            }
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19549:56:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1797,
                        "nodeType": "EmitStatement",
                        "src": "19544:61:10"
                      },
                      {
                        "expression": {
                          "id": 1800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1798,
                            "name": "shutdown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "19616:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19627:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19616:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1801,
                        "nodeType": "ExpressionStatement",
                        "src": "19616:15:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1803,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "19665:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19665:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1805,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "19679:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "19679:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1802,
                            "name": "EmergencyShutdown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "19647:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19647:45:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1808,
                        "nodeType": "EmitStatement",
                        "src": "19642:50:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1674,
                    "nodeType": "StructuredDocumentation",
                    "src": "18240:219:10",
                    "text": " @dev allows the admins to shut down the DAO (proposals, voting, transfers)\n and also sweeps out any NFTs and native tokens owned by the DAO\n @notice this is an irreversible process!"
                  },
                  "functionSelector": "3403c2fc",
                  "id": 1810,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1677,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1676,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "18500:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18500:9:10"
                    },
                    {
                      "id": 1679,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1678,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "18510:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18510:11:10"
                    },
                    {
                      "id": 1681,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1680,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 148,
                        "src": "18522:12:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18522:12:10"
                    }
                  ],
                  "name": "emergencyShutdown",
                  "nameLocation": "18473:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18490:2:10"
                  },
                  "returnParameters": {
                    "id": 1682,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18535:0:10"
                  },
                  "scope": 1884,
                  "src": "18464:1235:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    387
                  ],
                  "body": {
                    "id": 1882,
                    "nodeType": "Block",
                    "src": "20369:443:10",
                    "statements": [
                      {
                        "assignments": [
                          1828
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1828,
                            "mutability": "mutable",
                            "name": "duplicate",
                            "nameLocation": "20384:9:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1882,
                            "src": "20379:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1827,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "20379:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1830,
                        "initialValue": {
                          "hexValue": "66616c7365",
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20396:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20379:22:10"
                      },
                      {
                        "body": {
                          "id": 1855,
                          "nodeType": "Block",
                          "src": "20469:141:10",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1842,
                                    "name": "nftContractAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "20487:20:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1844,
                                  "indexExpression": {
                                    "id": 1843,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1832,
                                    "src": "20508:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20487:23:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1845,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 399,
                                    "src": "20514:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20514:12:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "20487:39:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1854,
                              "nodeType": "IfStatement",
                              "src": "20483:117:10",
                              "trueBody": {
                                "id": 1853,
                                "nodeType": "Block",
                                "src": "20528:72:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1848,
                                        "name": "duplicate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1828,
                                        "src": "20546:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20558:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "20546:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1851,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20546:16:10"
                                  },
                                  {
                                    "id": 1852,
                                    "nodeType": "Break",
                                    "src": "20580:5:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1835,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1832,
                            "src": "20431:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1836,
                              "name": "nftContractAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "20435:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "20435:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20431:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1856,
                        "initializationExpression": {
                          "assignments": [
                            1832
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1832,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "20424:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 1856,
                              "src": "20416:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1831,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20416:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1834,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20428:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "20416:13:10"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "20464:3:10",
                            "subExpression": {
                              "id": 1839,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1832,
                              "src": "20464:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1841,
                          "nodeType": "ExpressionStatement",
                          "src": "20464:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "20411:199:10"
                      },
                      {
                        "condition": {
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "20623:10:10",
                          "subExpression": {
                            "id": 1857,
                            "name": "duplicate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "20624:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1866,
                        "nodeType": "IfStatement",
                        "src": "20619:55:10",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1862,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 399,
                                  "src": "20661:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20661:12:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1859,
                                "name": "nftContractAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 539,
                                "src": "20635:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "src": "20635:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                "typeString": "function (address[] storage pointer,address)"
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20635:39:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1865,
                          "nodeType": "ExpressionStatement",
                          "src": "20635:39:10"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1868,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "20702:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20702:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1870,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "20716:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1871,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1817,
                              "src": "20726:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1867,
                            "name": "NFTReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "20690:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20690:44:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1873,
                        "nodeType": "EmitStatement",
                        "src": "20685:49:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1876,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "20775:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1877,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1815,
                              "src": "20785:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1878,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1817,
                              "src": "20791:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1879,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1819,
                              "src": "20800:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1874,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "20752:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Raphael_$1884_$",
                                "typeString": "type(contract super Raphael)"
                              }
                            },
                            "id": 1875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 387,
                            "src": "20752:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) returns (bytes4)"
                            }
                          },
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20752:53:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 1826,
                        "id": 1881,
                        "nodeType": "Return",
                        "src": "20745:60:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1811,
                    "nodeType": "StructuredDocumentation",
                    "src": "19705:482:10",
                    "text": " @dev function for receiving and recording an NFT\n @notice calls \"super\" to the OpenZeppelin function inherited\n @param operator          the sender of the NFT (I think)\n @param from              not really sure, has generally been the zero address\n @param tokenId           the tokenId of the NFT\n @param data              any additional data sent with the NFT\n @return `IERC721Receiver.onERC721Received.selector`"
                  },
                  "functionSelector": "150b7a02",
                  "id": 1883,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1823,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1822,
                        "name": "notShutdown",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "20340:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20340:11:10"
                    }
                  ],
                  "name": "onERC721Received",
                  "nameLocation": "20201:16:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1821,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20331:8:10"
                  },
                  "parameters": {
                    "id": 1820,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1813,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "20235:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "20227:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20227:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1815,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "20261:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "20253:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20253:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1817,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "20283:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "20275:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20275:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1819,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "20313:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "20300:17:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "20300:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20217:106:10"
                  },
                  "returnParameters": {
                    "id": 1826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1825,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "20361:6:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "20361:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20360:8:10"
                  },
                  "scope": 1884,
                  "src": "20192:620:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1885,
              "src": "350:20464:10",
              "usedErrors": []
            }
          ],
          "src": "32:20783:10"
        },
        "id": 10
      }
    }
  }
}
